<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Zencoder</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://zencoder.ru/feed.xml" />
<link rel="alternate" type="text/html" href="http://zencoder.ru" />
<updated>2015-05-15T17:05:38+03:00</updated>
<id>http://zencoder.ru/</id>
<author>
  <name>zencoder</name>
  <uri>http://zencoder.ru/</uri>
  <email>gearmobile@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Функции .hide и .show библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/hideshow-jquery/" />
  <id>http://zencoder.ru/jquery/hideshow-jquery</id>
  <published>2015-05-17T00:00:00+03:00</published>
  <updated>2015-05-17T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Две функции-близнеца, предназначенные для управления видимостью элементов на странице. Это осуществляется через CSS-свойство &lt;code&gt;display&lt;/code&gt;. После скрытия элемента значение его CSS-свойство становится равным &lt;code&gt;dispaly: none&lt;/code&gt;. Перед появлением элемента его CSS-свойство &lt;code&gt;display&lt;/code&gt; изменяет свое значение на противоположное от &lt;code&gt;none&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;duration&lt;/code&gt; — продолжительность выполнения анимации (появления или скрытия). Может быть задана в миллисекундах или строковым значением ‘fast’ или ‘slow’ (200 и 600 миллисекунд). Если этот параметр не задан, анимация будет происходить мгновенно, элемент просто появится/исчезнет.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;callback&lt;/code&gt; — функция, заданная в качестве обработчика завершения анимации (появления или скрытия).&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Примеры использования:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;мгновенно скроет элемент с идентификатором &lt;code&gt;#leftFit&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#leftFit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;мгновенно покажет элемент с идентификатором &lt;code&gt;#leftFit&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#leftFit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;в течении 1/3 секунды скроет элемент с идентификатором &lt;code&gt;#leftFit&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#leftFit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;в течении 600 миллисекунд вернет видимость элементу с идентификатором &lt;code&gt;#leftFit&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#leftFit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;slow&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Можно скрывать и показывать элементы с помощью &lt;strong&gt;сворачивания/разворачивания&lt;/strong&gt; (&lt;em&gt;за счет изменения высоты&lt;/em&gt;). Это делают функции &lt;code&gt;slideUp()&lt;/code&gt;, &lt;code&gt;slideDown()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Медленно скрывает и раскрывает все видимые параграфы, длительность анимационных эффектов — 600 миллисекунд:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;button&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;button&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Использование callback-функции:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#clickme&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#book&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Animation complete.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#clickme&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#book&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Animation complete.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Материал основан на ресурсах &lt;a href=&quot;http://jquery.page2page.ru&quot; title=&quot;Hide and Show&quot;&gt;http://jquery.page2page.ru&lt;/a&gt;, &lt;a href=&quot;http://jquery-docs.ru&quot; title=&quot;Hide and Show&quot;&gt;http://jquery-docs.ru&lt;/a&gt;, &lt;a href=&quot;http://api.jquery.com&quot; title=&quot;API jQuery&quot;&gt;http://api.jquery.com&lt;/a&gt; и не претендует на оригинальность.&lt;/p&gt;

&lt;hr /&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/hideshow-jquery/&quot;&gt;Функции .hide и .show библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 17, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Функция on() библитеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/juery/on-jquery/" />
  <id>http://zencoder.ru/juery/on-jquery</id>
  <published>2015-05-16T00:00:00+03:00</published>
  <updated>2015-05-16T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Маленькое вступление. Этой статьей я начинаю серию, посвященную работе с библиотекой jQuery. Точнее, я буду с помощью этих микро-статей самостоятельно изучать jQuery. И хотя при этом меня не оставляет постоянная мысль, что я делаю глупую и пустую работу (&lt;em&gt;есть масса куда более лучших по объему и качеству ресурсов на эту тематику&lt;/em&gt;), все же мне так хочется. И это желание также продолжает основную идею этого бложика, его цель и смысл существования.&lt;/p&gt;

&lt;p&gt;Смысл жизни данного бложика - быть записной книжкой для своего хозяина. Помогать ему в освоении безбрежных просторов Web по принципу “прочитал-усвоил-пересказал”. Ибо такой принцип мне кажется наиболее эффективным в деле изучения чего-то нового, особенно - если этого нового очень много.&lt;/p&gt;

&lt;p&gt;Кроме того, мне работа с библиотекой jQuery нравиться! Она для меня - легкая и увлекательная игра; тот редкий случай, когда изучение программирования для меня дается одновременно очень легко и увлекательно. Чаще - что-то одно из двух.&lt;/p&gt;

&lt;p&gt;Хватит лирики - переходим к практике.&lt;/p&gt;

&lt;h2 id=&quot;on&quot;&gt;Функция on()&lt;/h2&gt;

&lt;p&gt;Функция &lt;code&gt;.on()&lt;/code&gt; является &lt;strong&gt;универсальным способом&lt;/strong&gt; обработки событий на странице с помощью библиотеки jQuery. Почему универсальным? Давайте взглянем на синтаксис функции &lt;code&gt;.on()&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eventHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… здесь &lt;code&gt;event&lt;/code&gt; - это стандартное событие языка JavaScript: &lt;code&gt;blur&lt;/code&gt;, &lt;code&gt;focus&lt;/code&gt;, &lt;code&gt;focusin&lt;/code&gt;, &lt;code&gt;focusout&lt;/code&gt;, &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;resize&lt;/code&gt;, &lt;code&gt;scroll&lt;/code&gt;, &lt;code&gt;unload&lt;/code&gt;, &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;dblclick&lt;/code&gt;, &lt;code&gt;mousedown&lt;/code&gt;, &lt;code&gt;mouseup&lt;/code&gt;, &lt;code&gt;mousemove&lt;/code&gt;, &lt;code&gt;mouseover&lt;/code&gt;, &lt;code&gt;mouseout&lt;/code&gt;, &lt;code&gt;mouseenter&lt;/code&gt;, &lt;code&gt;mouseleave&lt;/code&gt;, &lt;code&gt;change&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;submit&lt;/code&gt;, &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;keypress&lt;/code&gt;, &lt;code&gt;keyup&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;… &lt;code&gt;eventHandler&lt;/code&gt; - это функция, обработчик события. Она создается для указанного события.&lt;/p&gt;

&lt;p&gt;Хватит слов - краткий пример все “расскажет” лучше всяких слов.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Вы нажали на элемент &amp;quot;foo&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… или так -&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Вы нажали на элемент &amp;quot;foo&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;То есть, при клике мыши (событие &lt;code&gt;click&lt;/code&gt;) на элементе с идентификатором &lt;code&gt;#foo&lt;/code&gt; запускается обработчик этого события - функция, которая в данном случае является всего лишь командой &lt;code&gt;alert&lt;/code&gt;. Но эта функция может быть и более сложной, конечно.&lt;/p&gt;

&lt;p&gt;Другими словами, вызывая функцию &lt;code&gt;.on()&lt;/code&gt;, мы передаем ей два аргумента - желаемое событие и обработчик этого события. Поэтому эта функция и называется универсальной функцией.&lt;/p&gt;

&lt;p&gt;Существуют менее универсальные функции - одноименные функции под каждое конкретное событие. Для сравнения, таких два примера равнозначны:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Вы нажали на элемент &amp;quot;foo&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Вы нажали на элемент &amp;quot;foo&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Важное замечание&lt;/strong&gt;: функция &lt;code&gt;.on()&lt;/code&gt; была введена в jQuery взамен трех функций &lt;code&gt;.live()&lt;/code&gt;, ‘.bind()’, ‘.delegate()’; которые считаются устаревшими и не поддерживаются современными версиями jQuery, начиная с версии 1.8.0.&lt;/p&gt;

&lt;p&gt;В принципе, на этом можно остановиться, говоря о функции &lt;code&gt;.on()&lt;/code&gt;. Для начала - этого достаточно.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/juery/on-jquery/&quot;&gt;Функция on() библитеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 16, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Тернарный оператор JavaScript]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/javascript/ifelse/" />
  <id>http://zencoder.ru/javascript/ifelse</id>
  <published>2015-05-15T00:00:00+03:00</published>
  <updated>2015-05-15T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;В JavaScript имеется обычный оператор условия &lt;code&gt;if-else&lt;/code&gt;, с которым я был знаком уже давно. Но вот недавно познакомился с его разновидностью - тернарным оператором &lt;code&gt;?&lt;/code&gt;. Да, именно так - оператор восклицательный знак.&lt;/p&gt;

&lt;p&gt;На первый взгляд, такой тернарный оператор выглядит запутанно и совершенно непонятно. Но стоит вникнуть в суть, как все становится просто.&lt;/p&gt;

&lt;p&gt;Сначала - что значит тернарный оператор? В JavaScript существуют &lt;em&gt;унарные&lt;/em&gt; операторы, &lt;em&gt;бинарные&lt;/em&gt; операторы и вот теперь, оказывается, есть &lt;em&gt;тернарный&lt;/em&gt; оператор. Опять-таки, все просто. Унарный оператор оперирует с одним операндом, бинарный оператор - с двумя операндами, тернарный оператор - с тремя операндами.&lt;/p&gt;

&lt;p&gt;Синтаксис тернарного оператора &lt;code&gt;?&lt;/code&gt; таков:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;условие&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;beta&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Читается такой оператор условия следующим образом: если выполняется условие &lt;code&gt;(условие)&lt;/code&gt;, то переменной &lt;code&gt;result&lt;/code&gt; присвоить значение &lt;code&gt;alpha&lt;/code&gt;; если условие &lt;code&gt;(условие)&lt;/code&gt; не выполняется, то переменной &lt;code&gt;result&lt;/code&gt; присвоить значение &lt;code&gt;beta&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Тернарный оператор условия очень похож на обычный оператор условия &lt;code&gt;if-else&lt;/code&gt;. Можно сказать, что это сокращенная версия обычного оператора условия &lt;code&gt;if-else&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Давайте сравним оба условия:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;оператор условия &lt;code&gt;if-else&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;тернарный оператор условия &lt;code&gt;?&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Очень похоже, не правда ли? Здесь есть один важный момент - в данном случае у обоих операторов есть одна общая черта. И в первом, и во-втором случае переменной &lt;code&gt;result&lt;/code&gt; присваивается значение в зависимости от выполнения условия.&lt;/p&gt;

&lt;p&gt;А вот такой вариант уже будет непохож на предыдущий:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;summOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;summTwo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;summOne&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;summTwo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Обратите внимание, что в этом условии результат присваивается &lt;strong&gt;разным переменным&lt;/strong&gt;. В данном случае тенарный оператор условия &lt;code&gt;?&lt;/code&gt; уже не подойдет; он не применим в данном случае.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Отсюда вывод&lt;/strong&gt;: тернарный оператор применим для случая, когда &lt;strong&gt;одной переменной&lt;/strong&gt; присваивается &lt;strong&gt;разный результат&lt;/strong&gt; в зависимости от условия.&lt;/p&gt;

&lt;p&gt;Условие на тернарном операторе можно сделать разветвленными и тогда вид такого оператора дейсвительно будет выглядеть достаточно запутанным:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Enter your login&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Welcome!&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Good bay!&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;See you next week!&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;&amp;#39;I don\&amp;#39;t know you!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Хотя тут все просто на самом деле, если разобраться. Если прочитать это условие, то оно будет выгдяеть таким образом. Переменной &lt;code&gt;login&lt;/code&gt; присвоить значение, полученное от пользователя. Если значение переменной &lt;code&gt;login&lt;/code&gt; равно &lt;code&gt;black&lt;/code&gt;, то переменной &lt;code&gt;pass&lt;/code&gt; присвоить значение &lt;code&gt;Welcome!&lt;/code&gt;. Иначе, если значение переменной &lt;code&gt;login&lt;/code&gt; равно &lt;code&gt;white&lt;/code&gt;, то переменной &lt;code&gt;pass&lt;/code&gt; присвоить значение &lt;code&gt;Good bay!&lt;/code&gt;. Иначе если значение переменной &lt;code&gt;login&lt;/code&gt; равно &lt;code&gt;green&lt;/code&gt;, то переменной &lt;code&gt;pass&lt;/code&gt; присвоить значение &lt;code&gt;See you next week!&lt;/code&gt;. Иначе переменной &lt;code&gt;pass&lt;/code&gt; присвоить значение &lt;code&gt;I don\&#39;t know you!&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Приведу еще один пример нескольких операторов &lt;code&gt;?&lt;/code&gt;, нагло скопированный с ресурса &lt;a href=&quot;http://learn.javascript.ru/&quot; title=&quot;JavaScript&quot;&gt;learn.javascript.ru&lt;/a&gt; вместе с описанием его работы - все в угоду доходчивости изложения материала.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;возраст?&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Здравствуй, малыш!&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Привет!&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Здравствуйте!&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;Какой необычный возраст!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Поначалу может быть сложно понять, что происходит. Однако, внимательно приглядевшись, мы замечаем, что это обычная последовательная проверка!&lt;/p&gt;

&lt;p&gt;Вопросительный знак проверяет сначала &lt;code&gt;age &amp;lt; 3&lt;/code&gt;, если верно — возвращает ‘Здравствуй, малыш!’, если нет — идет за двоеточие и проверяет &lt;code&gt;age &amp;lt; 18&lt;/code&gt;. Если это верно — возвращает ‘Привет!’, иначе проверка &lt;code&gt;age &amp;lt; 100&lt;/code&gt; и ‘Здравствуйте!’… И наконец, если ничего из этого не верно, то ‘Какой необычный возраст!’.&lt;/p&gt;

&lt;p&gt;То же самое через &lt;code&gt;if-else&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Здравствуй, малыш!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Привет!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Здравствуйте!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Какой необычный возраст!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;Вот так работает тернарный оператор &lt;code&gt;?&lt;/code&gt; в JavaScript. Ресурс &lt;a href=&quot;http://learn.javascript.ru/&quot; title=&quot;JavaScript&quot;&gt;learn.javascript.ru&lt;/a&gt; советует использовать тернарный оператор &lt;code&gt;?&lt;/code&gt; &lt;strong&gt;по назначению&lt;/strong&gt; и не заменять им обычный оператор условия &lt;code&gt;if-else&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Данный материал основан на ресурсе &lt;a href=&quot;http://learn.javascript.ru/&quot; title=&quot;JavaScript&quot;&gt;learn.javascript.ru&lt;/a&gt; и не претендует на оригинальность.&lt;/p&gt;

&lt;hr /&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/javascript/ifelse/&quot;&gt;Тернарный оператор JavaScript&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 15, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Элементы UI Javascript]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/javascript/ui-javascript/" />
  <id>http://zencoder.ru/javascript/ui-javascript</id>
  <published>2015-05-13T00:00:00+03:00</published>
  <updated>2015-05-13T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;В Javascript имеются три встроенных элемента для взаимодействия с пользователем страницы: &lt;code&gt;alert&lt;/code&gt;, &lt;code&gt;prompt&lt;/code&gt;, &lt;code&gt;confirm&lt;/code&gt;. Начнем с самого простого и двинемся по нарастающей.&lt;/p&gt;

&lt;h2 id=&quot;alert&quot;&gt;Модальное окно alert&lt;/h2&gt;

&lt;p&gt;Строка кода:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Message&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… вводит на странице модальное окно. Модальными окнами называются окна, которые блокируют работу всей страницы в целом (и скриптов - в частности) до тех пор, пока пользователь не выполнит требуемое окном действие. Пока модальное окно запущено, пользователь не сможет прокручивать страницу, нажимать на ней какие-либо кнопки или переходить по ссылкам.&lt;/p&gt;

&lt;p&gt;Конкретное место, где выводится модальное окно с вопросом — обычно это центр viewport браузера и внешний вид окна выбирает браузер. Разработчик не может на это влиять. С одной стороны — это недостаток, так как нельзя вывести окно в своем, особо красивом, дизайне.&lt;/p&gt;

&lt;p&gt;В случае с alert требуемое от пользователя действие одно - нажать кнопку “ОК”.&lt;/p&gt;

&lt;p&gt;Задача alert - донести до сведения пользователя страницы какую-либо информацию, будь то справочная информация, информация об ошибке и так далее. Функция alert - единственная, которая &lt;strong&gt;ничего не возвращает&lt;/strong&gt;!&lt;/p&gt;

&lt;h2 id=&quot;prompt&quot;&gt;Модальное окно prompt&lt;/h2&gt;

&lt;p&gt;Функция prompt также, как и alert, создает модальное окно. Но, в отличие от модального окна alert, окно prompt немного сложнее. Синтаксис функции prompt выглядит таким образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;То есть, функция prompt принимает два аргумента. Первый аргумент &lt;code&gt;title&lt;/code&gt; - это заголовок модального окна. Второй аргумент &lt;code&gt;default&lt;/code&gt; - это строка по умолчанию как образец ввода в поле.&lt;/p&gt;

&lt;p&gt;Создаваемое функцией prompt окно имеет поле для ввода и две кнопки OK и Cancel. Вызов prompt возвращает то, что ввел посетитель — строку или специальное значение &lt;code&gt;null&lt;/code&gt;, если ввод отменен.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ageUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;How old are you?&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Your are &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ageUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; old!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Рекомендуется &lt;strong&gt;всегда указывать второй аргумент&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Тест&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Окно prompt предназначено для получения у пользователя какой-либо информации в виде данных любого типа.&lt;/p&gt;

&lt;h2 id=&quot;confirm&quot;&gt;Модальное окно confirm&lt;/h2&gt;

&lt;p&gt;Это модальное окно служит для получения от пользователя подтверждения на заданный вопрос - ДА или НЕТ. Функция confirm выводит окно с вопросом question с двумя кнопками: OK и CANCEL. Результатом будет &lt;code&gt;true&lt;/code&gt; при нажатии OK и &lt;code&gt;false&lt;/code&gt; – при CANCEL(ESC):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;confirm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Are you male?&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;Рассмотренные три способа взаимодействия с пользователем являются &lt;strong&gt;самыми простыми&lt;/strong&gt;. Это простой способ вывести сообщение или получить информацию от посетителя. Поэтому их используют в тех случаях, &lt;strong&gt;когда важна простота&lt;/strong&gt;, а всякие «красивости» особой роли не играют.&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;Итог&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;alert&lt;/code&gt; выводит сообщение;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;prompt&lt;/code&gt; выводит сообщение и ждет, пока пользователь введет текст, а затем возвращает введенное значение или &lt;code&gt;null&lt;/code&gt;, если ввод отменен (CANCEL/ESC);&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;confirm&lt;/code&gt; выводит сообщение и ждет, пока пользователь нажмет «OK» или «CANCEL» и возвращает &lt;code&gt;true/false&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Данная статья является пересказом соответствующего материала с ресурса &lt;a href=&quot;https://learn.javascript.ru/uibasic&quot; title=&quot;Javascript UI Basic&quot;&gt;learn.javascript.ru&lt;/a&gt; и не претендует на оригинальность.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/javascript/ui-javascript/&quot;&gt;Элементы UI Javascript&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 13, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Операторы сравнения Javascript]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/javascript/comparison-operators-javascript/" />
  <id>http://zencoder.ru/javascript/comparison-operators-javascript</id>
  <published>2015-05-12T00:00:00+03:00</published>
  <updated>2015-05-12T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;В этом разделе мы познакомимся с &lt;strong&gt;операторами сравнения&lt;/strong&gt; и с &lt;strong&gt;логическими значениями&lt;/strong&gt;, которые такие операторы возвращают.&lt;/p&gt;

&lt;p&gt;Операторы сравнения:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;больше &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;меньше &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;больше или равно &lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;меньше или равно &lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;равно &lt;code&gt;==&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;неравно &lt;code&gt;!=&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Операторы сравнения возвращают &lt;strong&gt;логическое&lt;/strong&gt; значение. Таких значений может быть &lt;strong&gt;только два&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;true&lt;/code&gt; - да, верно, истина&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;false&lt;/code&gt; - нет, неверно, ложь&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Логические значения можно &lt;strong&gt;присваивать переменным&lt;/strong&gt; явно:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Можно присвоить переменной логическое значение &lt;strong&gt;как результат операции&lt;/strong&gt; (сравнения):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;Сравнение строк&lt;/h3&gt;

&lt;p&gt;Строки сравниваются побуквенно, слева-направо. Берутся две строки и начинается сравнение. Берется первый символ первой строки и сравнивается с первым символом второй строки. Если они равны, то берутся второй символ первой строки и сравнивается со вторым символом второй строки.&lt;/p&gt;

&lt;p&gt;И так последовательно производится сравнение строк до того момента, пока не случится так, что определенный символ первой строки неравен соответствующему символу второй строки.&lt;/p&gt;

&lt;p&gt;На этом дальнейшее сравнение строк прекращается и делается вывод, какая строка больше или меньше другой на основании того, больше или меньше соответствующие символы этой строки.&lt;/p&gt;

&lt;p&gt;При сравнении строк соблюдаются определенные правила. Само сравнение букв (символов) производится на основании численных кодов символов, у каждого символа есть свой численный код.&lt;/p&gt;

&lt;p&gt;Вывод, какой символ больше или меньше, производится на основании численных значений этих символов. Буквы нижнего регистра имеют большее численное значение, нежели буквы верхнего регистра. Буква А имеет меньшее численное значение, нежели буква Б. Отсутствие символа всегда считается меньше, чем присутствие символа.&lt;/p&gt;

&lt;p&gt;Ниже приведены примеры (как же без них?), иллюстрирующие сравнение строк:&lt;/p&gt;

&lt;p&gt;Первый символ первой строки больше первого символа второй строки, дальнейшее сравнение прекращается и делается вывод, что первая строка больше второй строки:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Банан&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Аят&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В этом примере сравнение идет последовательно (символ в символ) вплоть до третьего по порядку символа, на котором сравнение прерывается, так как символ “c” по числовому значению больше символа “н”. На основании этого делается вывод, что первая строка “Вася” больше второй строки “Ваня”:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Вася&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Ваня&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Любая буква (символ) больше отсутствия буквы. Например, первая строка больше второй, так как буква “е” в первой строке больше отсутствия таковой во второй строке:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Привет&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Прив&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Интересный пример сравнения связан обработкой введенных пользователем данных. Все данные, вводимые пользователем на странице, являются &lt;strong&gt;строковым&lt;/strong&gt; типом. Поэтому сравнивать их, не выполнив предварительное преобразование типов, нельзя. Например:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;15&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… с точки зрения Javascript будет верным (true), так как строка “4” больше строки “15” (первый символ “4” больше первого символа “1”). Однако, в данном случае пользователем введены два числа 4 и 15, а не строки. Поэтому их необходимо привести к числовому типу и уже тогда сравнивать:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;15&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Сравнение разных типов&lt;/h3&gt;

&lt;p&gt;Если производится сравнение данных различного типа, то Javascript производит автоматическое (правильно такое преобразование называется &lt;strong&gt;неявным преобразованием&lt;/strong&gt;) преобразование всех данных к &lt;strong&gt;числовому&lt;/strong&gt; типу. И тогда производится сравнение чисел.&lt;/p&gt;

&lt;p&gt;Строковый тип “34” приводится к числовому типу (числу) 34 и производится сравнение между числом 34 и числом 33:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;34&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Булев тип &lt;code&gt;false&lt;/code&gt; приводится к числовому типу 0 (&lt;code&gt;true == 1&lt;/code&gt;, &lt;code&gt;false == 0&lt;/code&gt;) и производится сравнение двух (одинаковых в данном случае) чисел 0:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Может понадобиться ситуация, когда нужно производить сравнение данных &lt;strong&gt;без автоматического преобразования типов&lt;/strong&gt;. Другими словами, если в операции сравнения присутствует строка, то она должна оставаться строкой; если булев тип, то он должен оставаться булевым типом.&lt;/p&gt;

&lt;p&gt;Для этой цели используется оператор &lt;strong&gt;строгого равенства&lt;/strong&gt; (&lt;code&gt;===&lt;/code&gt;) и &lt;strong&gt;строгого неравенства&lt;/strong&gt; (&lt;code&gt;!===&lt;/code&gt;). То есть, к обычным операторам равенства (&lt;code&gt;==&lt;/code&gt;) и неравентсва (&lt;code&gt;!==&lt;/code&gt;) добавляется еще один символ (&lt;code&gt;=&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Если тип разный, то операция сравнения всегда возвращает значение &lt;code&gt;false&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;example&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Строгое сравнение предпочтительно, если мы хотим быть уверены, что «сюрпризов» не будет.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Вывод&lt;/strong&gt;: любые сравнения с &lt;code&gt;undefined/null&lt;/code&gt;, кроме точного ===, следует делать с осторожностью. Желательно не использовать сравнения &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt; с ними, во избежание ошибок в коде.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Итог&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;В JavaScript есть логические значения &lt;code&gt;true&lt;/code&gt; (истина) и &lt;code&gt;false&lt;/code&gt; (ложь). Операторы сравнения возвращают их.&lt;/li&gt;
  &lt;li&gt;Строки сравниваются &lt;strong&gt;побуквенно&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Значения разных типов приводятся к числу при сравнении, за исключением строгого равенства &lt;code&gt;===&lt;/code&gt; (&lt;code&gt;!==&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Значения &lt;code&gt;null&lt;/code&gt; и &lt;code&gt;undefined&lt;/code&gt; равны &lt;code&gt;==&lt;/code&gt; друг другу и не равны ничему другому. В других сравнениях (с участием &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;&lt;/code&gt;) их лучше не использовать, так как они ведут себя не как 0.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Данная статья является пересказом соответствующего материала с ресурса &lt;a href=&quot;https://learn.javascript.ru/comparison&quot; title=&quot;Javascript Comparison&quot;&gt;learn.javascript.ru&lt;/a&gt; и не претендует на оригинальность.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/javascript/comparison-operators-javascript/&quot;&gt;Операторы сравнения Javascript&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 12, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Кратко о ZSH]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/linux/oh-my-zsh/" />
  <id>http://zencoder.ru/linux/oh-my-zsh</id>
  <published>2015-05-05T00:00:00+03:00</published>
  <updated>2015-05-05T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Вот захотелось написать о ZSH и “Oh My ZSH” - в частности.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Что такое ZSH? Это командная оболочка для Unix-подобных систем, к которым относятся как Linux, так и Mac OS X. Стандартной командной оболочкой в Linux и Mac OS X является BASH, которая полностью удовлетворяет все потребности пользователя.&lt;/p&gt;

&lt;p&gt;Но если хочется нечто особенное, не такое как у всех и BASH приелась, то можно попробовать &lt;a href=&quot;http://www.zsh.org/&quot; title=&quot;ZSH&quot;&gt;ZSH&lt;/a&gt;. Эта оболочка может полностью заменить собой BASH и привнести с собой еще пару-тройку дополнительных возможностей. К слову сказать, под Linux имеются гораздо больше командных оболочек, нежели две BASH и ZSH. Но две последние самые популярные и используемые.&lt;/p&gt;

&lt;p&gt;К оболочке ZSH имеется дополнительная надстройка &lt;a href=&quot;http://ohmyz.sh/&quot; title=&quot;Oh My ZSH&quot;&gt;Oh My ZSH&lt;/a&gt;, которая делает ее еще более красивой и функциональной. Каждый опытный пользователь Linux находит в ZSH что-то свое. Я нашел в ZSH (“Oh My ZSH”) красоту оформления с помощью большого выбора тем &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/wiki/themes&quot; title=&quot;Oh My ZSH Themes&quot;&gt;“Oh My ZSH Themes”&lt;/a&gt; и плагины &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins&quot; title=&quot;Oh My ZSH Plugins&quot;&gt;“Oh My ZSH Plugins”&lt;/a&gt;, которые делают работу в командной строке еще более удобной.&lt;/p&gt;

&lt;h2 id=&quot;zsh&quot;&gt;Установка ZSH&lt;/h2&gt;

&lt;p&gt;Установка ZSH проста и не должна вызвать какие-либо затруднения. Практически все сводится к одной команде и зависит от консольного менеджера закачек, уже имеющегося в системе.&lt;/p&gt;

&lt;p&gt;Первый случай подойдет для системы Mac OS X (в ней &lt;code&gt;curl&lt;/code&gt; встроен по умолчанию):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Второй случай подойдет для системы Linux (в ней &lt;code&gt;wget&lt;/code&gt; встроен по умолчанию):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O - &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;После выполнения команды в системе Mac OS X достаточно закрыть и снова открыть терминал (рекомендуется к использованию &lt;a href=&quot;http://www.iterm2.com/&quot; title=&quot; iTerm2&quot;&gt;“iTerm2”&lt;/a&gt;), чтобы ZSH вступил в действие и заменил собой BASH в качестве командной оболочки по умолчанию.&lt;/p&gt;

&lt;p&gt;В системе Linux придется выполнить пару дополнительных действий. Первым шагом проверяем, что ZSH установилась нормально и работоспособная. Для этого запускаем ZSH вместо BASH:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Приглашение командной строки изменится со стандартного BASH на более причудливое и красивое приглашение ZSH. Отлично - все работает.&lt;/p&gt;

&lt;p&gt;Производим смену командной оболочки по умолчанию с BASH на ZSH:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo chsh -s /bin/zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;После следующей перезагрузки системы изменения автоматически вступят в силу. А пока они временные, но ничто не мешает ими пользоваться уже сейчас.&lt;/p&gt;

&lt;h2 id=&quot;zsh-1&quot;&gt;Настройка ZSH&lt;/h2&gt;

&lt;p&gt;Настройка ZSH сводится к редактированию файла &lt;code&gt;~/.zshrc&lt;/code&gt;, в котором размещены все настройки этой оболочки. Строчек там достаточно много, но две самые интересные и важные из них опишу ниже.&lt;/p&gt;

&lt;p&gt;Строка &lt;code&gt;ZSH_THEME=&quot;robbyrussell&quot;&lt;/code&gt; отвечает за тему оформления оболочки ZSH. По умолчанию используется тема под названием &lt;code&gt;robbyrussell&lt;/code&gt;. Но ее можно заменить на любую другую из списка тем &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/wiki/themes&quot; title=&quot;Oh My ZSH Themes&quot;&gt;“Oh My ZSH Themes”&lt;/a&gt;, в котором представлены скриншоты, по которым легко выбрать любую тему. Все темы автоматически уже установлены в системе, поэтому достаточно указать нужную по ее имени.&lt;/p&gt;

&lt;p&gt;Например, мне понравилась тема &lt;code&gt;pygmalion&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;ZSH_THEME&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pygmalion&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вторая важная строка &lt;code&gt;plugins=&lt;/code&gt; конфигурационного файла &lt;code&gt;~/.zshrc&lt;/code&gt; отвечает за подключение плагинов. Строка первоначально имеет вид:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;plugins&lt;span class=&quot;p&quot;&gt;=(&lt;/span&gt;git&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Это означает, что при запуске оболочки ZSH будет автоматически подгружен плагин &lt;code&gt;git&lt;/code&gt;. Плагины, как и темы, автоматическм устанавливаются в систему, поэтому достаточно указать только имя нужного плагина.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Важное замечание&lt;/strong&gt; - перед использованием каждого конкретного плагина необходимо прочитать его README, чтобы знать, как его использовать. К примеру, плагин &lt;code&gt;sublime&lt;/code&gt; служит для создания и использования псевдонимов (alias) при запуске редактора Sublime Text из командной строки. Плагин &lt;code&gt;bundler&lt;/code&gt; служит для создания и использования псевдонимов (alias) при запуске утилиты &lt;code&gt;bundle&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Пример строки с плагинами может быть таким (&lt;em&gt;в моем случае&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;plugins&lt;span class=&quot;p&quot;&gt;=(&lt;/span&gt;git sublime bundler&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Именно так - разделителями служат &lt;em&gt;символы пробела&lt;/em&gt; между именами плагинов.&lt;/p&gt;

&lt;p&gt;Ниже представлены два видео об установке и настройке “Oh My Zsh” под операционной системой Mac OS X. Видео на английском языке, но все понятно и так. Видео не мое - автор его Scott Tolinski, ведущий моего любимого канала Level Up Tuts.&lt;/p&gt;

&lt;p&gt;Установка “Oh My Zsh”:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/GWBTg6lZ1N0&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;p&gt;Настройка “Oh My Zsh”:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/-EbWsaWLZIg&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h2 id=&quot;section&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;В принципе, рассказанного выше минимума уже достаточно для комфортной работы в ZSH. В заключение можно лишь привести снимок терминала, чтобы иметь представление о красоте ZSH (с прикрученным “Oh My Zsh”):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/05/oh-my-zsh.png&quot; alt=&quot;Oh My ZSH&quot; title=&quot;Oh My ZSH&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/linux/oh-my-zsh/&quot;&gt;Кратко о ZSH&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 05, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[--merged и --no-merged в Git]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/git/git-merged-no-merged/" />
  <id>http://zencoder.ru/git/git-merged-no-merged</id>
  <published>2015-05-03T00:00:00+03:00</published>
  <updated>2015-05-03T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Весьма полезные две опции в системе Git - показать только те ветки, которые &lt;strong&gt;уже слиты&lt;/strong&gt; с веткой &lt;code&gt;master&lt;/code&gt; (к примеру); или же показать только те ветки, которые &lt;strong&gt;еще не были слиты&lt;/strong&gt; с веткой &lt;code&gt;master&lt;/code&gt; (к примеру).&lt;/p&gt;

&lt;p&gt;Таким образом, можно быстро и четко определиться, какие ветки уже можно удалить, так как все наработки в них слиты в основную ветку и таким образом - сохранены.&lt;/p&gt;

&lt;p&gt;А какие ветки удялять нельзя, так как наработки в них еще не слиты в основную ветку и еще не сохранены.&lt;/p&gt;

&lt;p&gt;Система Git не допустит удаления таких веток при запуске команды:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch -d name_of_branch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Только использование специального флага &lt;code&gt;-D&lt;/code&gt; разрешит удаление ветки, которая не слита с основной веткой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch -D name_of_branch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Итак, ниже две команды - героя дня.&lt;/p&gt;

&lt;h2 id=&quot;merged&quot;&gt;Опция –merged&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch --merged&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;показать все ветки, слияние для которых было выполнено. Такие ветки можно смело удалять.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;no-merged&quot;&gt;Опция –no-merged&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch --no-merged&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;показать все ветки, слияние для которых еще не было выполнено.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;v&quot;&gt;Опция -v&lt;/h2&gt;

&lt;p&gt;Показать список всех доступных веток и при этом &lt;strong&gt;отобразить последний коммит для каждой из веток&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch -v

  master        &lt;span class=&quot;m&quot;&gt;4669186&lt;/span&gt; Header ready
* sectionFooter 9fbcfc4 Footer Social Icons&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/git/git-merged-no-merged/&quot;&gt;--merged и --no-merged в Git&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 03, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Создание alias в Git]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/git/git-aliases/" />
  <id>http://zencoder.ru/git/git-aliases</id>
  <published>2015-05-02T00:00:00+03:00</published>
  <updated>2015-05-02T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Не помню, писал уже про создание псевдонимов (alias) в Git, или нет. Но материальчик мне сильно понравился - делюсь с ним.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Итак, в чем суть вопроса? Суть проста - любой компьютерщик с опытом прекрасно знает и всегда старается применять на своей практике сочетания клавиш (так называемые hotkeys) для убыстрения, упрошения процесса своей работы.&lt;/p&gt;

&lt;p&gt;Сначала использование hotkeys кажется причудой не менее причудливых компьютерных гиков - &lt;cite&gt;это они просто хотят показать, что они крутые пацаны и не такие, как все&lt;/cite&gt;; затем, когда выучены и применяются на практике пара-тройка hotkeys - ты кажешься себе невероятно крутым компьютерным “перцем”; когда ты знаешь пару-тройку десятков hotkeys - это уже просто нужно для быстрой работы; и последняя (финальная стадия, которая лечению не поддается) - ты уже просто не можешь жить без hotkeys!&lt;/p&gt;

&lt;p&gt;И так во всем - в любой программе, в любой утилите.&lt;/p&gt;

&lt;p&gt;Не исключение и Git. Если в день хотя бы около десятка раз набивать &lt;code&gt;git status&lt;/code&gt;, &lt;code&gt;git add&lt;/code&gt;, &lt;code&gt;git commit&lt;/code&gt;, &lt;code&gt;git checkout&lt;/code&gt;, &lt;code&gt;git branch&lt;/code&gt; и так далее (список можно еще продолжать и продолжать), то через пару-тройку деньков в голову как-то сама собой вкрадывается мысль - а как бы сделать так, чтобы не набивать пальцами тупо одно и тоже изо дня в день? Как бы сделать это все покороче?&lt;/p&gt;

&lt;p&gt;Ситуация выглядела бы крайне нелепой и смешной, если бы создатель системы Git (одновременно - один из создателей Linux) не предусмотрел возможности использования hotkeys в этой системе.&lt;/p&gt;

&lt;p&gt;И она есть! Но вопрос данной статейки заключает даже не в том сногшибательном факте, что Git поддерживает работу “горячих клавиш”.&lt;/p&gt;

&lt;p&gt;Вопрос в том - как их создавать самому и каким образом это делать.&lt;/p&gt;

&lt;p&gt;До недавнего времени я лично знал один такой способ - это редактирование конфигурационного файла Git на предмет создания в нем своего собственного списка alias’ов.&lt;/p&gt;

&lt;p&gt;Вот только одна тонкость - вы, уважаемый читатель, помните, какой файл под системой Windows необходимо редактировать для этой цели? А под системой Linux? А под Mac OS X?&lt;/p&gt;

&lt;p&gt;Что-то я сильно сомневаюсь, что у вас “от зубов” отскочит ответ применительно ко всем трем системам. Я лично могу прямо сейчас припомнить ответ применительно только в системе Linux. Заминочка, однако!&lt;/p&gt;

&lt;p&gt;А ларчик открывался просто! В системе Git есть &lt;strong&gt;встроенная возможность создания псевдонимов&lt;/strong&gt; (alias).&lt;/p&gt;

&lt;p&gt;И выглядит такая команда до смешного простой - к примеру:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config --global alias.st status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В результате достаточно ввести в окне терминала:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git st&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… чтобы получить информацию о текущем состоянии репозитория. И при этом не нужно “ломать” голову в попытках вспомнить, в каком файле (и где он вообще находится) нужно вписывать желаемый hotkey. Система Git сама это сделает - нужно только указать, alias какого вида вы желаете.&lt;/p&gt;

&lt;p&gt;Ниже привожу краткий список псевдонимов (alias) из книги “Pro Git” второго издания (впрочем, все описанное здесь почерпнуто оттуда - просто материальчик очень понравился):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config --global alias.st status
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config --global alias.ci commit
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config --global alias.co checkout
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config --global alias.br branch
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config --global alias.unstage &lt;span class=&quot;s1&quot;&gt;&amp;#39;reset HEAD --&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config --global alias.last &lt;span class=&quot;s1&quot;&gt;&amp;#39;log -1 HEAD&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Оно канешна, приведенный выше списочек не является истиной в последней инстанции - на что фантазии хватает, то и можно\нужно делать. Какой псевдоним кажется более удобным в работе (у кого руки какой кривизны) - тот и стряпать надо. И вопрос совсем не в том - какие псевдонимы должны быть.&lt;/p&gt;

&lt;p&gt;Вопрос в том - что Git сам может создавать псевдонимы (alias).&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/git/git-aliases/&quot;&gt;Создание alias в Git&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 02, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Знакомимся с Pixel Perfect]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/web-development/pixel-perfect/" />
  <id>http://zencoder.ru/web-development/pixel-perfect</id>
  <published>2015-04-18T00:00:00+03:00</published>
  <updated>2015-04-18T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Обзор плагинов и скриптов для работы в технике Pixel Perfect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Для начала - что такое техника Pixel Perfect? Все просто и можно догадаться по названию - это техника верстки, при которой сверстанный HTML-шаблон в точности (пиксель-в-пиксель) совпадает с оригиналом, PSD-макетом.&lt;/p&gt;

&lt;p&gt;Другими словами, если наложить “картинку” сверстанного HTML-шаблона на картинку оригинального PSD-макета, то обе картинки должны совпасть. Совместиться должны все элементы картинок - текст, изображения, графические элементы.&lt;/p&gt;

&lt;p&gt;По современным требованиям к верстке Pixel Perfect уже чуть ли не стандарт де-факто. Так что изучить этот вопрос жизненно необходимо, если есть желание и стремление иметь много заказов и заказчиков.&lt;/p&gt;

&lt;p&gt;На момент написания статьи реализация техники Pixel Perfect осуществляется при помощи соответствующих плагинов под браузеры или же с помощью специализированных скриптов. Ниже будут кратко рассмотрены два плагина и два скрипта, однако во всех случаях шаги для проверки Pixel Perfect одинаковы.&lt;/p&gt;

&lt;p&gt;Первоначально в программе Photoshop оригинальный PSD-макет сохраняется как изображение в формате &lt;code&gt;.png&lt;/code&gt;. Затем в браузере открывается сверстанный по этому макету HTML-шаблон. При помощи плагина PNG-копия макета накладывается на сверстанную страницу. И становится видна разница в расположении элементов на HTML-странице и на PNG-копии.&lt;/p&gt;

&lt;p&gt;В этом и заключается вся несложная процедура Pixel Perfect проверки сверстанной страницы. Там, где на странице элементы не совпадают с оригиналом, производится коррекция значений в файлах стилей.&lt;/p&gt;

&lt;h2 id=&quot;pixel-perfect--firefox&quot;&gt;Pixel Perfect под Firefox&lt;/h2&gt;

&lt;p&gt;Для браузера Firefox имеется плагин &lt;a href=&quot;https://addons.mozilla.org/ru/firefox/addon/pixel-perfect/&quot; title=&quot;Pixel Perfect&quot;&gt;Pixel Perfect&lt;/a&gt; для одноименной проверки сверстанной страницы.&lt;/p&gt;

&lt;p&gt;После установки плагина Pixel Perfect его значок появиться в панели инструментов браузера Firefox. Стоит сказать, что плагин Pixel Perfect &lt;em&gt;поддерживает только последние версии браузера Firefox&lt;/em&gt; (к примеру, в версии v.31 этот плагин не будет работать).&lt;/p&gt;

&lt;p&gt;Теперь нужно открыть в Photoshop оригинальный PSD-макет и сохранить его целиком как изображение в формате &lt;code&gt;.png&lt;/code&gt; через “Save for Web…”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Важно!&lt;/strong&gt; Перед экспортом в PNG-изображение PSD-макет необходимо &lt;strong&gt;привести к оригинальному размеру&lt;/strong&gt;! Для этого в Photoshop зарезервирована комбинация hotkeys: &lt;kbd&gt;Ctrl+1&lt;/kbd&gt; - под Windows\Linux, &lt;kbd&gt;Cmd+1&lt;/kbd&gt; - под Mac OS X.&lt;/p&gt;

&lt;p&gt;Как только PNG-копия PSD-макета подготовлена и сохранена, открываем в окне браузера Firefox сверстанную по этому макету HTML-страницу.&lt;/p&gt;

&lt;p&gt;Запускаем плагин Pixel Perfect щелчком мыши по его иконке в панели инструментов браузера. Сразу же появится окно плагина, в котором он предложит нам выбрать заранее подготовленное PNG-изображение (копию PSD-макета):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/pixel_perfect_01.png&quot; alt=&quot;Pixel Perfect Add Layer&quot; title=&quot;Pixel Perfect Add Layer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Жмем на кнопку “Add Layer”, выбираем подготовленное PNG-изображение и получаем результат - наложение двух слоев (сверстанного и оригинального):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/pixel_perfect_02.png&quot; alt=&quot;Pixel Perfect Compare Layers&quot; title=&quot;Pixel Perfect Compare Layers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Видим, как не совпадают текст и кнопка HTML-страницы c PNG-оригиналом. Поэтому открываем в Firebug (этот плагин активируется автоматически при запуске плагина Pixel Perfect) вкладку со стилями и начинаем правку\подгонку:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/pixel_perfect_03.png&quot; alt=&quot;Pixel Perfect Correct CSS Styles&quot; title=&quot;Pixel Perfect Correct CSS Styles&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Обратите внимание на режим “Invert” плагина Pixel Perfect - с помощью него можно очень точно корректировать элементы HTML-страницы.&lt;/p&gt;

&lt;p&gt;В описанном выше процессе и заключается работа с плагином Pixel Perfect, а также Pixel Perfect верстка как таковая. Все предельно просто.&lt;/p&gt;

&lt;p&gt;Ниже приведен видео-ролик, в котором показан процесс работы с плагином Pixel Perfect (видео не мое, поэтому за качество во всех смыслах ответственности не несу) - для наглядности работы пойдет:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/E9R-dhu2g_E&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;p&gt;Рассмотрение плагина Pixel Perfect под браузер Firefox закончено.&lt;/p&gt;

&lt;h2 id=&quot;perfectpixel--google-chrome&quot;&gt;PerfectPixel под Google Chrome&lt;/h2&gt;

&lt;p&gt;Плагин &lt;a href=&quot;https://chrome.google.com/webstore/detail/perfectpixel-by-welldonec/dkaagdgjmgdmbnecmcefdhjekcoceebi&quot; title=&quot;PerfectPixel&quot;&gt;PerfectPixel&lt;/a&gt; под браузер Chrome очень похож по назначению и функционалу (и названию!) на плагин Pixel Perfect под браузер Firefox.&lt;/p&gt;

&lt;p&gt;После установки PerfectPixel необходимо зайти в настройки расширений браузера Chrome - &lt;a href=&quot;chrome://extensions/&quot;&gt;chrome://extensions/&lt;/a&gt; и активировать для плагина галочку “Allow access to  file URLs”, тем самым разрешив плагину доступ к локальным HTML-страницам:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/perfectpixel_01.png&quot; alt=&quot;PerfectPixel Activate&quot; title=&quot;PerfectPixel Activate&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Важно!&lt;/strong&gt; Перед экспортом в PNG-изображение PSD-макет необходимо &lt;strong&gt;привести к оригинальному размеру&lt;/strong&gt;! Для этого в Photoshop зарезервирована комбинация hotkeys: &lt;kbd&gt;Ctrl+1&lt;/kbd&gt; - под Windows\Linux, &lt;kbd&gt;Cmd+1&lt;/kbd&gt; - под Mac OS X.&lt;/p&gt;

&lt;p&gt;После этого запускаем плагин PerfectPixel, добавляем в нем новый слой (PNG-копию оригинала) и проверяем:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/perfectpixel_02.png&quot; alt=&quot;PerfectPixel Work&quot; title=&quot;PerfectPixel Work&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Функционал и работа плагина PerfectPixel ничем не отличается от функционала и работы плагина Pixel Perfect.&lt;/p&gt;

&lt;p&gt;Ниже приведен видео-ролик с официальной страницы плагина PerfectPixel для демонстрации работы в нем:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/jxzcKRRgfCg&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;p&gt;Рассмотрение плагина PerfectPixel можно на этом закончить.&lt;/p&gt;

&lt;h2 id=&quot;x-precise&quot;&gt;X-Precise&lt;/h2&gt;

&lt;p&gt;Если в двух предыдущих случаях были рассмотрены бесплатные плагины под два популярных браузера Firefox и Chrome, то в данном случае речь пойдет о платном ($5 на момент написания статьи) скрипте &lt;a href=&quot;http://codecanyon.net/item/xprecise/78685&quot; title=&quot;X-Precise&quot;&gt;X-Precise&lt;/a&gt;, написанном на JavaScript и использующем библиотеку jQuery.&lt;/p&gt;

&lt;h3 id=&quot;x-precise-1&quot;&gt;Подключение X-Precise&lt;/h3&gt;

&lt;p&gt;Для того, чтобы получить наложение картинки-оригинала на сверстанную страницу нужно подключить скрипт X-Precise к этой странице. Для этого необходимо скачать архив X-Precise.&lt;/p&gt;

&lt;p&gt;Затем нужно распаковать папку &lt;code&gt;_xprecise&lt;/code&gt;в корневую директорию проекта. И подключить скрипт &lt;code&gt;xprecise.min.js&lt;/code&gt; к HTML-странице для запуска интерсейса скрипта X-Precise.&lt;/p&gt;

&lt;p&gt;Обратите внимание, что скрипт для своей работы использует библиотеку jQuery (v1.3.2), поэтому подключение X-Precise должно выглядеть таким образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;_xprecise/xprecise.min.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Затем нужно создать копии PSD-оригиналов в формате JPG и сохранить под тем же именем, что и файл оригинала в директории &lt;code&gt;/_xprecise/&lt;/code&gt; скрипта X-Precise.&lt;/p&gt;

&lt;p&gt;При сохранении в формате JPG рекомендуется выбирать режим оттенков серого, так как при таком варианте лучше видна разница между сверстанной копией и оригиналом (помните об опции “Invert” плагина Pixel Perfect?).&lt;/p&gt;

&lt;p&gt;Скрипт X-Precise попытается автоматически загрузить JPG-изображение из директории &lt;code&gt;/_xprecise/&lt;/code&gt; по имени файла этого изображения, считая, что имя файла иображения идентично имени файла открытой HTML-страницы (index.html -&amp;gt; index.jpg).&lt;/p&gt;

&lt;p&gt;Но это не означает, что нельзя загрузить файл изображения с другим именем. Для этого достаточно задать другой путь к файлу в интерфейсе скрипта X-Precise.&lt;/p&gt;

&lt;h3 id=&quot;x-precise-2&quot;&gt;Использование X-Precise&lt;/h3&gt;

&lt;p&gt;Основным достоинством скрипта X-Precise является его способность автоматически запоминать и хранить все настройки.&lt;/p&gt;

&lt;p&gt;В целом, интерфейс скрипта X-Precise и его применение ничем не отличается от плагинов Pixel Perfect или PerfectPixel. Для желающих - можно ознакомиться со скриншотами по &lt;a href=&quot;http://codecanyon.net/theme_previews/78685-xprecise?index=0&amp;amp;url_name=xprecise&quot; title=&quot;X-Precise Screenshots&quot;&gt;ссылке&lt;/a&gt; на главной странице проекта.&lt;/p&gt;

&lt;h2 id=&quot;pixlayout&quot;&gt;pixLayout&lt;/h2&gt;

&lt;p&gt;pixLayout - еще один плагин (наподобие X-Precise) под библиотеку jQuery, предназначенный для попиксельной верстки. Однако, в отличие от предыдущего скрипта, pixLayout бесплатный (интересная особенность - скрипт создан отечественным разработчиком).&lt;/p&gt;

&lt;p&gt;Для своей работы скрипт pixLayout может использовать изображение в двух популярных форматах - JPG или PNG.&lt;/p&gt;

&lt;p&gt;Домашняя страничка проекта расположена здесь - &lt;a href=&quot;http://pixlayout.polycreative.ru/&quot; title=&quot;pixLayout&quot;&gt;pixLayout&lt;/a&gt;. Скрипт прекрасно документирован как на родном (русском), так и на языке Уильяма Шекспира. Полюбоваться и поиграться можно на демо-страничке скрипта - &lt;a href=&quot;http://pixlayout.polycreative.ru/test.html&quot; title=&quot;pixLayout Test&quot;&gt;pixLayout Test&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Для подключения к тестируемой странице необходимо прописать базовый набор строк:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;jquery.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;jquery.pixlayout.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pixlayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/path_to_picture/picture.ext&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Можно дополнить базовый набор, указав в скрипте параметры (&lt;em&gt;взято с официального сайта&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pixlayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/img/layout.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;.wrapper&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;pixlayout-1&quot;&gt;Краткая справка по использованию скрипта pixLayout&lt;/h3&gt;

&lt;p&gt;Краткая справка по использованию скрипта pixLayout приведена в двух абзацах ниже (&lt;em&gt;также взята с официального сайта&lt;/em&gt;):&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;Перемещение&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;кнопки: ‘влево’, ‘вправо’, ‘вверх’, ‘вниз’&lt;/li&gt;
  &lt;li&gt;кнопки: &lt;kbd&gt;W&lt;/kbd&gt;, &lt;kbd&gt;A&lt;/kbd&gt;, &lt;kbd&gt;S&lt;/kbd&gt;, &lt;kbd&gt;D&lt;/kbd&gt;, когда картинка видима&lt;/li&gt;
  &lt;li&gt;кнопки панели навигации&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-1&quot;&gt;Операции&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Уничтожить&lt;/strong&gt; (&lt;em&gt;удалить весь html и css код pixLayout со страницы&lt;/em&gt;) - крестик в правом верхнем углу панели;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Закрепить панель&lt;/strong&gt; - иконка в правом верхнем углу панели;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Краткая справка&lt;/strong&gt; - знак вопроса в правом верхнем углу панели;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Свернуть параметры&lt;/strong&gt; - стрелка “вверх”” внизу панели;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Показать\убрать картинку&lt;/strong&gt; - центральная кнопка панели навигации или &lt;kbd&gt;Shift + E&lt;/kbd&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ниже приведено официальное видео, демонстрирующее работу со скриптом pixLayout:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/mc2d7xT-alo&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h2 id=&quot;section-2&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;В этом небольшом обзоре мы познакомились с четырьмя инструментами для попиксельной (pixel perfect) верстки. Два из них - это бесплатные плагины под браузеры. Другие два - скрипты на JavaScript для подключения к HTML-странице.&lt;/p&gt;

&lt;p&gt;Что выбирать для своей работы - решать каждому.&lt;/p&gt;

&lt;p&gt;В пользу плагинов под браузеры можно сказать, что они бесплатные, их легко установить и просто использовать.&lt;/p&gt;

&lt;p&gt;В минус скрипту X-Precise можно сказать, что он платный ($5), требует подключения к проверяемой HTML-странице и зависит от библиотеки jQuery. В минус pixLayout также можно сказать, что для своей работы он требует дополнительной “возни” с подключением к HTML-странице.&lt;/p&gt;

&lt;p&gt;Однако в плюс обоим скриптам можно привести тот неоспоримый факт, что это кроссбраузерное решение, абсолютно не зависящее от какого-либо браузера (Firefox, Chrome, Opera, Safari) или версии конкретного браузера. Скрипты будут работать одинаково во всех случаях.&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/web-development/pixel-perfect/&quot;&gt;Знакомимся с Pixel Perfect&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on April 18, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Режим fast-forward в Git]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/git/fast-forward-git/" />
  <id>http://zencoder.ru/git/fast-forward-git</id>
  <published>2015-04-17T00:00:00+03:00</published>
  <updated>2015-04-17T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Перевод статьи, посвященной вопросу - что такое fast-forward в системе Git&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Оригинал данного вольного перевода размещен здесь - &lt;a href=&quot;http://ariya.ofilabs.com/2013/09/fast-forward-git-merge.html&quot; title=&quot;Fast-Forward Git Merge&quot;&gt;Fast-Forward Git Merge&lt;/a&gt;. Статья довольно свежая - от 20.09.2013. Почему перевод статьи? Потому что на русском ничего не нашел (окромя &lt;a href=&quot;http://git-scm.com/book/ru/v2&quot; title=&quot;Pro Git&quot;&gt;книги официальной&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Слияние (&lt;code&gt;merge&lt;/code&gt;) ветвей является весьма распространенной и обыденной операцией, выполняемой в системе Git. Однако, в некоторых случаях Git выполняет слияние ветвей в режиме &lt;strong&gt;fast-forward&lt;/strong&gt;. Но что такое режим &lt;strong&gt;fast-forward&lt;/strong&gt; и чем он отличается от &lt;em&gt;обычного&lt;/em&gt; режима слияния ветвей.&lt;/p&gt;

&lt;p&gt;Давайте разберем этот вопрос на конкретном примере. Допустим, при работе в репозитории мною была создана ветка &lt;code&gt;speedup&lt;/code&gt; из текущей ветки &lt;code&gt;master&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout -b speedup&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Поработав некоторое время в этой ветке, я создал несколько &lt;code&gt;commit&lt;/code&gt;‘ов (три коммита, три белых кружка на рисунке):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/fast-forward_1.png&quot; alt=&quot;Ветка speedup&quot; title=&quot;Ветка Speedup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;После этого я решил, что работа в ветке &lt;code&gt;speedup&lt;/code&gt; мною выполнена и я сделал &lt;code&gt;push&lt;/code&gt; этой ветки на свой удаленный репозиторий.&lt;/p&gt;

&lt;p&gt;Между тем, обратите внимание на тот важный факт, что в ветке &lt;code&gt;master&lt;/code&gt; &lt;strong&gt;не было внесено никаких изменений&lt;/strong&gt; с того самого момента, когда я сделал ответвление от нее - ветку &lt;code&gt;speedup&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Когда менеджер проекта уведомится о том факте, что разрабатываемая мною ветка готова для интеграции в проект, то им будет выполнены стандартные шаги по публикации моей работы - команды &lt;code&gt;git fetch&lt;/code&gt; и &lt;code&gt;git merge&lt;/code&gt;. Так как в ветке &lt;code&gt;master&lt;/code&gt; не было внесено изменений с того момента (серый кружок), как была создана ветка &lt;code&gt;speedup&lt;/code&gt;, то при слиянии система Git применит метод &lt;strong&gt;fast-forward&lt;/strong&gt;. В этом случае вся последовательность коммитов будет иметь &lt;em&gt;линейный&lt;/em&gt; вид (&lt;strong&gt;левая часть&lt;/strong&gt; рисунка):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/fast-forward_2.png&quot; alt=&quot;Fast-Forward Git&quot; title=&quot;Fast-Forward Git&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Примечание переводчика: другими словами, Git просто произведет перемещение указателя HEAD с серого кружка (последний коммит ветки &lt;code&gt;master&lt;/code&gt;) на последний белый кружок (последний коммит ветки &lt;code&gt;speedup&lt;/code&gt;). И будет считать, что все это - ветка &lt;code&gt;master&lt;/code&gt;. Получится своеобразный &lt;em&gt;проброс указателя&lt;/em&gt; HEAD вдоль последовательной линии коммитов. Именно поэтому автор упоминает термин &lt;em&gt;линейного&lt;/em&gt; вида.&lt;/p&gt;

&lt;p&gt;Другим вариантом слияния веток в данном случае является использование флага &lt;code&gt;-no-ff&lt;/code&gt; в команде &lt;code&gt;git merge&lt;/code&gt;, что представляет из себя сокращение от - &lt;strong&gt;no fast-forward&lt;/strong&gt;. В этом случае ситуация будет несколько иной - ее схематичное изображение на &lt;strong&gt;правой&lt;/strong&gt; части рисунка вверху.&lt;/p&gt;

&lt;p&gt;В этом случае при слиянии веток &lt;code&gt;master&lt;/code&gt; и &lt;code&gt;speedup&lt;/code&gt; системой Git создается коммит (кружок со штрихованной границей), задача которого - &lt;strong&gt;информировать о слиянии веток&lt;/strong&gt;. Другими словами - &lt;em&gt;цель&lt;/em&gt; и &lt;em&gt;задача&lt;/em&gt; этого коммита только в информировании о слиянии веток &lt;code&gt;master&lt;/code&gt; и &lt;code&gt;speedup&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;В ситуациях подобного рода система Git всегда старается применить режим &lt;strong&gt;fast-forward&lt;/strong&gt;, если это возможно. Однако, такое поведение Git можно &lt;a href=&quot;http://stackoverflow.com/questions/2500296/can-i-make-fast-forwarding-be-off-by-default-in-git&quot; title=&quot;Fast Forward Off By Default&quot;&gt;легко изменить&lt;/a&gt; на режим &lt;strong&gt;no fast-forward&lt;/strong&gt; и сделать его поведением системы по умолчанию.&lt;/p&gt;

&lt;p&gt;Пожалуй, самой главной неприятной неожиданностью при использовании &lt;code&gt;merge&lt;/code&gt; в режиме &lt;strong&gt;no fast-forward&lt;/strong&gt; - это когда вы нажимаете ту самую зеленую кнопку “Merge” в web-интерфейсе сервиса GitHub при выполнении &lt;a href=&quot;https://help.github.com/articles/using-pull-requests/&quot; title=&quot;Pull Request&quot;&gt;pull request&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/fast-forward_3.png&quot; alt=&quot;GitHub Pull Request&quot; title=&quot;GitHub Pull Request&quot; /&gt;&lt;/p&gt;

&lt;p&gt;К сожалению, на сегодняшний день web-интерфейс GitHub выполняет операцию слияния (&lt;code&gt;merge&lt;/code&gt;) так, как если бы для этой команды был установлен флаг &lt;code&gt;-no-ff&lt;/code&gt;. Другими словами, даже если при слиянии веток ситуация позволяет использовать режим &lt;strong&gt;fast-forward&lt;/strong&gt;, GitHub не будет его использовать.&lt;/p&gt;

&lt;p&gt;Одним из разумных объяснений такого поведения GitHub является тот факт, что каждая операция &lt;code&gt;pull request&lt;/code&gt; должна быть однозначно &lt;strong&gt;идентифицирована&lt;/strong&gt;. К примеру, несколько последних коммитов проекта (в качестве примера мною был взят проект &lt;a href=&quot;https://github.com/eslint/eslint&quot; title=&quot;ESLint&quot;&gt;ESLint&lt;/a&gt; - ничего личного) могут выглядеть таким образом:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/fast-forward_4.png&quot; alt=&quot;ESLint&quot; title=&quot;ESLint&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Внимательно посмотрите на приведенный выше рисунок. На нем хорошо видно, что некоторые слияния (&lt;code&gt;merge&lt;/code&gt;) веток могут быть выполнены в режиме &lt;strong&gt;fast-forward&lt;/strong&gt;. Но своеобразный подход GitHub к слиянию веток привел к тому, что линейная история коммитов была превращена в нечто похожее на рисунок железнодорожного пути.&lt;/p&gt;

&lt;p&gt;Если в нескольких словвах подвести общий итог вышесказанного, то он окажется следующим.&lt;/p&gt;

&lt;p&gt;Режим &lt;strong&gt;no fast-forward&lt;/strong&gt; хранит всю информацию о слияниях веток. Такой подход может оказаться запутанным и сложным, если необходимо прочитать историю коммитов.&lt;/p&gt;

&lt;p&gt;С другой стороны, режим &lt;strong&gt;fast-forward&lt;/strong&gt; хранит не всю информацию о слияниях веток. Такой подход более простой для чтения, но в этом случае становится неочевидным история веток проекта.&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/git/fast-forward-git/&quot;&gt;Режим fast-forward в Git&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on April 17, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[git diff - учимся сравнивать в Git]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/git/git-diff/" />
  <id>http://zencoder.ru/git/git-diff</id>
  <published>2015-04-16T00:00:00+03:00</published>
  <updated>2015-04-16T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Краткий обзор команды git diff&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Итак, продолжаю знакомиться с системой Git и на этот раз вопрос будет касаться команды &lt;code&gt;git diff&lt;/code&gt;. Это краткая заметка, которая ни в коей мере не претендует на полноценный обзор. Скорее всего - философское рассуждение на тему сравнения в Git.&lt;/p&gt;

&lt;p&gt;С помощью этой команды в Git можно сравнивать между собой файлы для того, чтобы увидеть - где произошло изменение.&lt;/p&gt;

&lt;p&gt;Когда изменение обнаружено, тогда можно решать, что с ним делать - оставить, удалить или отредактировать.&lt;/p&gt;

&lt;p&gt;Перед использованием команды &lt;code&gt;diff&lt;/code&gt; стоит напомнить о трех состояниях системы Git: Working Area, Staging Area, Repository. Фактически, команда &lt;code&gt;diff&lt;/code&gt; производит сравнение между разными состояниями одного файла.&lt;/p&gt;

&lt;p&gt;Поэтому, когда запускается команда &lt;code&gt;diff&lt;/code&gt;, следует принимать во внимание, что и с чем будет сравниваться.&lt;/p&gt;

&lt;h2 id=&quot;working-area&quot;&gt;Working Area&lt;/h2&gt;

&lt;p&gt;Рассмотрим &lt;strong&gt;первый случай&lt;/strong&gt;, когда имеется отслеживаемый файл &lt;code&gt;index.html&lt;/code&gt;, в который вносятся изменения.&lt;/p&gt;

&lt;p&gt;Но изменения в этом файле &lt;strong&gt;не индексируются&lt;/strong&gt; (&lt;code&gt;git add&lt;/code&gt;) и &lt;strong&gt;не фиксируются&lt;/strong&gt; (&lt;code&gt;git commit&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;В этом случае, чтобы увидеть изменения, нужно запустить команду:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В этом случае производится сравнение между фиксированной версией файла &lt;code&gt;index.html&lt;/code&gt; (в области Repository) и его измененной версией (в области Working Area).&lt;/p&gt;

&lt;p&gt;Вывод будет примерно таким:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff
diff --git a/index.html b/index.html
index 8fbea1c..fff54a9 100644
--- a/index.html
+++ b/index.html
@@ -5,6 +5,6 @@
   &amp;lt;title&amp;gt;Index&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
-
+  &amp;lt;h1&amp;gt;Header 1&amp;lt;/h1&amp;gt;
 &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В этом примере все предельно ясно и понятно. Строка &lt;code&gt;--- a/index.html&lt;/code&gt; - это фиксированная версия файла &lt;code&gt;index.html&lt;/code&gt;. Строка &lt;code&gt;+++ b/index.html&lt;/code&gt; - это измененная версия файла &lt;code&gt;index.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Две строки:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;-
+  &amp;lt;h1&amp;gt;Header 1&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… отображают, сколько и каких строк удалено (знак минус); сколько и каких строк добавлено (знак плюс).&lt;/p&gt;

&lt;p&gt;Итак, с первым вариантом разобрались. Комадна &lt;code&gt;git diff&lt;/code&gt; выполняет сравнение версии файла из области Repository и этой же версии из области Working Area.&lt;/p&gt;

&lt;h2 id=&quot;staging-area&quot;&gt;Staging Area&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Второй вариант&lt;/strong&gt; - файл &lt;code&gt;index.html&lt;/code&gt; отслеживается, в него внесено изменение, которое проиндексировано (внесено в область Staging Area).&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;git diff&lt;/code&gt; &lt;strong&gt;ничего не покажет&lt;/strong&gt;, так как изменения в файле &lt;code&gt;index.html&lt;/code&gt; были перенесены (&lt;code&gt;git add&lt;/code&gt;) из области Working Area в область Staging Area. Другими словами, область Working Area чистая и в ней нет ничего, чтобы можно было сравнить с областью Repository.&lt;/p&gt;

&lt;p&gt;В этом случае для команды &lt;code&gt;git diff&lt;/code&gt; необходимо добавить ключ &lt;code&gt;--staged&lt;/code&gt;. Тогда вывод будет примерно таким:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff --staged
diff --git a/index.html b/index.html
index 8fbea1c..fff54a9 100644
--- a/index.html
+++ b/index.html
@@ -5,6 +5,6 @@
   &amp;lt;title&amp;gt;Index&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
-
+  &amp;lt;h1&amp;gt;Header 1&amp;lt;/h1&amp;gt;
 &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ключ &lt;code&gt;--staged&lt;/code&gt; указывает, что необходимо сравнивать область Repository с областью Staging Area.&lt;/p&gt;

&lt;p&gt;Итак, разобрались со вторым случаем. Команда &lt;code&gt;git diff --staged&lt;/code&gt;производит сравнение области Repository с областью Staging Area.&lt;/p&gt;

&lt;h2 id=&quot;repository&quot;&gt;Repository&lt;/h2&gt;

&lt;p&gt;Третий вариант - файл &lt;code&gt;index.html&lt;/code&gt; отслеживается, в него внесены изменения, которые проиндексированы (&lt;code&gt;git add&lt;/code&gt;) и зафиксированы (&lt;code&gt;git commit&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;В этом случае область Working Area и Staging Area чистые от изменений, поэтому область Repository нельзя сравнивать с ними - там нет ничего для сравнения.&lt;/p&gt;

&lt;p&gt;Поэтому команда &lt;code&gt;git diff&lt;/code&gt; или &lt;code&gt;git diff --staged&lt;/code&gt; &lt;strong&gt;ничего не покажет&lt;/strong&gt; - сравнивать то не с чем!&lt;/p&gt;

&lt;p&gt;Так как все изменения зафиксированы и перенесены в область Repository, то и сравнивать их между собой нужно только там, в этой области.&lt;/p&gt;

&lt;p&gt;В этом случае команда сравнения &lt;code&gt;git diff&lt;/code&gt; будет выглядеть примерно таким образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff 0644c20  73a4c4c
diff --git a/index.html b/index.html
index fff54a9..8fbea1c 100644
--- a/index.html
+++ b/index.html
@@ -5,6 +5,6 @@
   &amp;lt;title&amp;gt;Index&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
-  &amp;lt;h1&amp;gt;Header 1&amp;lt;/h1&amp;gt;
+
 &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Здесь &lt;code&gt;0644c20&lt;/code&gt; - это первые семь символов hash-суммы последнего commit’а, &lt;code&gt;73a4c4c&lt;/code&gt; - первые семь символов hash-суммы предпоследнего commit’а.&lt;/p&gt;

&lt;p&gt;Их можно получить командой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log --oneline&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Другими словами, в этом случае сравниваются между собой различные коммиты. И это могут быть совсем не обязательно соседние коммиты - можно сравнить, к примеру, первый и последний коммиты.&lt;/p&gt;

&lt;p&gt;Итак, разобрались с третим вариантом - когда сравниваются командой &lt;code&gt;git diff hash_sum_1 hash_sum_2&lt;/code&gt; между собой различные коммиты, расположенные в области Repository.&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/git/git-diff/&quot;&gt;git diff - учимся сравнивать в Git&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on April 16, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Remarkable - markdown-редактор под Linux]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/linux/remarkable-markdown-editor-linux/" />
  <id>http://zencoder.ru/linux/remarkable-markdown-editor-linux</id>
  <published>2015-04-15T00:00:00+03:00</published>
  <updated>2015-04-15T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Решил написать небольшой обзор по редактору Remarkable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Озадачился выбором markdown-редактора под Linux. После недолгих поисков с легким и приятным удивлением нашел две программы под эту операционную систему. Все течет, все меняется и вот теперь под Linux есть два достойных markdown-редактора.&lt;/p&gt;

&lt;p&gt;Первый редактор - это &lt;a href=&quot;http://remarkableapp.net/&quot; title=&quot;Remarkable&quot;&gt;Remarkable&lt;/a&gt;, второй редактор - это &lt;a href=&quot;http://pad.haroopress.com/user.html&quot; title=&quot;Haroopad&quot;&gt;Haroopad&lt;/a&gt;. После недолгого сравнения обеих программ оставил в своей коллекции редактор &lt;a href=&quot;http://remarkableapp.net/&quot; title=&quot;Remarkable&quot;&gt;Remarkable&lt;/a&gt; по нескольким причинам.&lt;/p&gt;

&lt;h2 id=&quot;remarkable&quot;&gt;Обзор Remarkable&lt;/h2&gt;

&lt;p&gt;Чем мне понравился Remarkable? Это простая и интуитивно понятная программа, с таким же приятным и понятным интерфейсом. Что называется - &lt;em&gt;установил и пользуйся&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Одна особенность этого редактора - на момент написания статьи существует &lt;a href=&quot;http://remarkableapp.net/download.html&quot; title=&quot;Download Remarkable&quot;&gt;только версия под Linux&lt;/a&gt; (преимущественно под Ubuntu).&lt;/p&gt;

&lt;p&gt;После установки и запуска редактор будет иметь такой примерный вид:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/remarkable_example_text.png&quot; alt=&quot;Remarkable - markdown editor&quot; title=&quot;Remarkable - markdown editor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Вверху видим панель инструментов, одного взгляда на которую достаточно, чтобы разобраться - что для чего предназначено.&lt;/p&gt;

&lt;p&gt;Вставка, открытие и сохранение документа; иконки Undo и Redo; форматирование текста - Bold, Italic, Stroke; удобные кнопки для вставки на страницу изображения, ссылки или timestamp:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/remarkable_links_images.png&quot; alt=&quot;Remarkable - insert images and links&quot; title=&quot;Remarkable - insert images and links&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Окно редактора Remarkable разбито на две части - левая для редактирования, правая - для предпросмотра. Все как и должно быть в нормальном markdown-редакторе.&lt;/p&gt;

&lt;p&gt;Предварительный просмотр можно отключить:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/remarkable_disable_live_preview.png&quot; alt=&quot;Remarkable - disable live preview&quot; title=&quot;Remarkable - disable live preview&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Есть также “ночной” режим работы:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/remarkable_nightmode.png&quot; alt=&quot;Remarkable - night mode&quot; title=&quot;Remarkable - night mode&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Программа поддерживает синтаксис &lt;a href=&quot;https://help.github.com/articles/github-flavored-markdown/&quot; title=&quot;Github Flavoured Markdown&quot;&gt;Github Flavoured Markdown&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/remarkable_markdown.png&quot; alt=&quot;Markdown Support&quot; title=&quot;Markdown Support&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/remarkable_markdown_support.png&quot; alt=&quot;Markdown Support&quot; title=&quot;Markdown Support&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На GitHub имеется подробный пример markdown-синтаксиса - &lt;a href=&quot;http://jonschlinkert.github.io/remarkable/demo/&quot; title=&quot;Remarkable Demo&quot;&gt;Remarkable Demo&lt;/a&gt;, созданного в этом редакторе. Там есть что посмотреть и чему поучиться - своеобразная реклама редактора Remarkable.&lt;/p&gt;

&lt;p&gt;Ниже приведен официальный демо-ролик, показывающий возможности редактора Remarkable:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Puzdbgo1b9A&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;p&gt;Одна приятная и мощная особенность редактора - возможность экспортирования в HTML или PDF.&lt;/p&gt;

&lt;p&gt;Remarkable автоматически подсчитывает число строк, слов и символов в тексте и отображает эту информацию в строке состояния.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;Мой субъективный вывод - программа Remarkable является отличным выбором markdown-редактора под Linux. Простая, удобная, интуитивно понятная.&lt;/p&gt;

&lt;p&gt;В качестве редактора для ежедневной работы контент-менеджера - лучший выбор под операционной системой Linux. Все самое нужное - под рукой и ничего лишнего. Стоит ли упоминать, что данная статья написана в редакторе Remarkable.&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/linux/remarkable-markdown-editor-linux/&quot;&gt;Remarkable - markdown-редактор под Linux&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on April 15, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Git - смена репозитория для загрузки]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/git/github-change-url/" />
  <id>http://zencoder.ru/git/github-change-url</id>
  <published>2015-04-08T00:00:00+03:00</published>
  <updated>2015-04-08T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Продолжаю изучение темы Git и GitHub. На повестке дня стоит вопрос - каким образом можно изменить ссылку существующего репозитория?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Нет - не так! Попробую зайти с другой стороны и сказать иначе. Имеется готовый репозиторий Template, размещенный на сервере GitHub. Этот репозиторий является шаблоном (template starter) при создании разнообразных проектов. Нечто похожим на известный &lt;a href=&quot;https://html5boilerplate.com/&quot; title=&quot;HTML5 Boilerplate&quot;&gt;HTML5 Boilerplate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Репозиторий Template клонируется на локальную машину с именем разрабатываемого проекта, такой командой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/gearmobile/template.git project&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Затем в созданном репозитории Project разрабатывается требуемый проект.&lt;/p&gt;

&lt;p&gt;Но есть одно НО - необходимо преобразовать видоизмененный репозиторий Project в отдельный, самостоятельный репозиторий. Конечно, по большому счету, это уже и есть отдельный, самостоятельный репозиторий.&lt;/p&gt;

&lt;p&gt;Но вот ссылка у репозитория Project указывает на оригинал - репозиторий Template. И если произвести &lt;code&gt;push&lt;/code&gt; на GitHub, то произойдет обновление репозитория Template.&lt;/p&gt;

&lt;p&gt;А этого крайне нежелательно допустить, так как этот репозиторий является стартовым, чистым листом для всех новых проектов!&lt;/p&gt;

&lt;p&gt;У меня же стоит такая задача - скопировать стартовый репозиторий  Template на локальную машину, преобразовать его в конкретный проект, вновь залить на GitHub уже как самостоятельный репозиторий с именем проекта в качестве имени репозитория. Как поступить?&lt;/p&gt;

&lt;p&gt;Можно решить вопрос несколькими способами. Ниже приведу пару из них - самых простых и доступных для моего понимания вечного newbie в Git\GitHub. Может быть, по мере освоения темы дополню статью более универсальным и грамотным способом.&lt;/p&gt;

&lt;h2 id=&quot;config&quot;&gt;Правка config&lt;/h2&gt;

&lt;p&gt;У клонированного на локальную машину репозитория ссылка на его удаленный оригинал размещена в конфигурационном файле &lt;code&gt;config&lt;/code&gt; по пути &lt;code&gt;.git/config&lt;/code&gt;, в секции &lt;code&gt;[remote &quot;origin&quot;]&lt;/code&gt;, в переменной с именем &lt;code&gt;url&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat .git/config

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;core&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;repositoryformatversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
  &lt;span class=&quot;nv&quot;&gt;filemode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;logallrefupdates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ignorecase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;precomposeunicode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;remote &lt;span class=&quot;s2&quot;&gt;&amp;quot;origin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; https://github.com/gearmobile/template.git
  &lt;span class=&quot;nv&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; +refs/heads/*:refs/remotes/origin/*

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch &lt;span class=&quot;s2&quot;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;remote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; origin
  &lt;span class=&quot;nv&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; refs/heads/master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Поэтому в локальном репозитории Project можно просто изменить эту ссылку с помощью любого текстового редактора.&lt;/p&gt;

&lt;p&gt;Отредактирую файл &lt;code&gt;config&lt;/code&gt; и изменю в нем ссылку с&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-http&quot; data-lang=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;https://github.com/gearmobile/template.git&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;на&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-http&quot; data-lang=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;https://github.com/gearmobile/project.git&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… где последняя - это ссылка на новый пустой репозиторий Project, который я создал на GitHub.&lt;/p&gt;

&lt;p&gt;Теперь конфигурационный файл &lt;code&gt;config&lt;/code&gt; для локального репозитория Project будет выглядеть таким образом (обратить внимание на переменную &lt;code&gt;url&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat .git/config

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;core&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;repositoryformatversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
  &lt;span class=&quot;nv&quot;&gt;filemode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;logallrefupdates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ignorecase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;precomposeunicode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;remote &lt;span class=&quot;s2&quot;&gt;&amp;quot;origin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; https://github.com/gearmobile/project.git
  &lt;span class=&quot;nv&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; +refs/heads/*:refs/remotes/origin/*

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch &lt;span class=&quot;s2&quot;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;remote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; origin
  &lt;span class=&quot;nv&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; refs/heads/master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Все - теперь локальный репозиторий Project является абсолютно самостоятельным и уникальным репозиторием, связанным ссылкой со своей удаленной копией на сервере GitHub.&lt;/p&gt;

&lt;p&gt;Осталось только сделать &lt;code&gt;push&lt;/code&gt;, чтобы залить на GitHub. Правда, здесь придется воспользоваться ключом &lt;code&gt;-f&lt;/code&gt; (как это описано в предыдущей статье &lt;a href=&quot;/git/github-fallback-commit/&quot;&gt;Откат коммитов на GitHub&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push -f&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;set-url&quot;&gt;Команда set-url&lt;/h2&gt;

&lt;p&gt;Второй способ практически идентичен предыдущему за тем лишь исключением, что он более правильный, так как для изменения url-адреса репозитория используется предназначенная для этого консольная команда Git - &lt;code&gt;set-url&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Точно также создаю на локальной машине копию Another Project удаленного репозитория Template:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/gearmobile/template.git another-project&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ссылка в новом репозитории Another-Project все также указывает на свой оригинал - репозиторий Template:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat .git/config

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;core&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;repositoryformatversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
  &lt;span class=&quot;nv&quot;&gt;filemode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;logallrefupdates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ignorecase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;precomposeunicode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;remote &lt;span class=&quot;s2&quot;&gt;&amp;quot;origin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; https://github.com/gearmobile/template.git
  &lt;span class=&quot;nv&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; +refs/heads/*:refs/remotes/origin/*

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch &lt;span class=&quot;s2&quot;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;remote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; origin
  &lt;span class=&quot;nv&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; refs/heads/master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Создаю на GitHub новый репозиторий Another-Project, который будет удаленной копией локального (уже существующего) репозитория Another-Project. И изменяю ссылку на вновь созданный удаленный репозиторий Another-Project:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-url origin https://github.com/gearmobile/another-project.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Проверяю, изменилась ли ссылка в конфигурационном файле &lt;code&gt;config&lt;/code&gt; (переменная &lt;code&gt;url&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat .git/config

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;core&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;repositoryformatversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
  &lt;span class=&quot;nv&quot;&gt;filemode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;logallrefupdates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ignorecase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;precomposeunicode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;remote &lt;span class=&quot;s2&quot;&gt;&amp;quot;origin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; https://github.com/gearmobile/another-project.git
  &lt;span class=&quot;nv&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; +refs/heads/*:refs/remotes/origin/*

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch &lt;span class=&quot;s2&quot;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;remote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; origin
  &lt;span class=&quot;nv&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; refs/heads/master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Да, ссылка была успешно изменена на новый удаленный репозиторий Another-Project. Можно вносить изменения и выполнять &lt;code&gt;push&lt;/code&gt; на GitHub.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Небольшое заключение&lt;/h2&gt;

&lt;p&gt;Преимущество двух описанных выше способ в том, что не теряется история коммитов.&lt;/p&gt;

&lt;p&gt;На этом пока все.&lt;/p&gt;

&lt;hr /&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/git/github-change-url/&quot;&gt;Git - смена репозитория для загрузки&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on April 08, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Откат коммитов на GitHub]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/git/github-fallback-commit/" />
  <id>http://zencoder.ru/git/github-fallback-commit</id>
  <published>2015-04-07T00:00:00+03:00</published>
  <updated>2015-04-07T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Небольшая статья, посвященная вопросу отката коммитов в GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;В чем заключается вопрос, собственно? В том, что имеется определенный репозиторий, размещенный на сервере GitHub. У этого удаленного репозитория есть локальная синхронизированная версия на рабочей машине автора. Этот репозиторий изменяется с большей или меньшей периодичностью; все изменения фиксируются соответствующими коммитами.&lt;/p&gt;

&lt;p&gt;И вот в один прекрасный момент в репозиторий было внесено изменение, которое затем было закоммичено и отправлено на GitHub. Однако, от этого изменения нужно избавиться - оно ошибочное.&lt;/p&gt;

&lt;p&gt;Но как это сделать, если коммит уже находится на GitHub? В интерфейсе сервиса GitHub я не нашел нужной кнопки, чтобы удалять конкретный коммит и тем самым возвращать репозиторий до нужного состояния.&lt;/p&gt;

&lt;p&gt;Это потому, что управление коммитами на GitHub производится через локальный репозиторий. Ниже приведу три несложных шага для того, чтобы показать, каким образом это выполняется.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Шаг первый&lt;/h2&gt;

&lt;p&gt;Первое - необходимо получить список hash-сумм последних коммитов репозитория. Это и понятно - нужно иметь перед собой дерево коммитов, чтобы видеть - куда двигаться. В дереве коммитов hash-суммы являются опорными точками, идентификационными номерами каждого из коммитов:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ниже показан краткий вывод команды &lt;code&gt;git log&lt;/code&gt; - четыре самых поздних коммита репозитория:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ee3a2ae6888fb87d5013786f6cf3b18da63f7bbb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Author&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gearmobile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gearmobile&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@gmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;Mon&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;08&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;2015&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;0300&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;End&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;6d92268e42eace0c78a5150144645333b769623d&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Author&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gearmobile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gearmobile&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@gmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;Mon&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;2015&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;0400&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;855404bf39b5fabd45ba0c6f5702e7a28949a02e&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Author&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gearmobile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gearmobile&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@gmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;Mon&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;2015&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;0400&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;16&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;3eb55145a79f9f8f732338a0e80bd71b2325b6da&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Author&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gearmobile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gearmobile&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@gmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;Mon&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;2015&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;0400&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;End&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Мне нужно вернуть репозиторий из состояния, описанного в коммите &lt;code&gt;ee3a2ae6888fb87d&lt;/code&gt;, в состояние, зафиксированное в коммите &lt;code&gt;6d92268e42eace0c&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;Шаг второй&lt;/h2&gt;

&lt;p&gt;Для этого я воспользуюсь командой &lt;code&gt;reset&lt;/code&gt;, с ключом &lt;code&gt;--hard&lt;/code&gt;. Эта команда мне подходит потому, что я не собираюсь сохранять изменения, зафиксированные в коммите &lt;code&gt;ee3a2ae6888fb87d&lt;/code&gt;, так как они полностью ошибочны.&lt;/p&gt;

&lt;p&gt;Как подробно описывается в статье &lt;a href=&quot;/git/git-undoing-changes/&quot;&gt;Отмена изменений в Git&lt;/a&gt;, такую задачу можно выполнить командой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-hard&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;6d92268e42eace0c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;где &lt;code&gt;6d92268e42eace0c&lt;/code&gt; - начальные 16 символов hash-суммы коммита, на который я хочу “перепрыгнуть”. Полный вид hash-суммы в 40 символов можно не использовать - достаточно 16 символов для надежной идентификации конкретного коммита.&lt;/p&gt;

&lt;p&gt;После выполнения этой команды локальный репозиторий будет сброшен к состоянию, зафиксированному в коммите &lt;code&gt;6d92268e42eace0c&lt;/code&gt;. Другими словами, я избавился от последних ошибочных изменений и вернул репозиторий в предыдущее его состояние.&lt;/p&gt;

&lt;p&gt;Однако, это всего лишь половина дела, так как откат коснулся только локального репозитория. В этой статье речь идет прежде всего об удаленном репозитории, размещенном на GitHub. Как добиться внесения аналогичных изменений на GitHub?&lt;/p&gt;

&lt;p&gt;Казалось бы - просто! Достаточно выполнить команду:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Но, на самом деле это не получится сделать - Git не позволит это выполнить. По той причине, что на данный момент состояние локального репозитория имеет более раннюю версию, нежели состояние удаленного репозитория.&lt;/p&gt;

&lt;p&gt;Вместо этого Git предложит выполнить комнаду &lt;code&gt;git pull&lt;/code&gt;, чтобы привести локальный репозиторий к удаленному.&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;Шаг третий&lt;/h2&gt;

&lt;p&gt;Чтобы заставить Git выполнить обратную задачу - привести удаленный репозиторий к локальному, необходимо использовать ключ &lt;code&gt;-f&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;То есть, форсировать внесение изменений и тем самым “сказать” Git - синхронизировать удаленный репозиторий с локальным репозиторием несмотря на то, что последний имеет более ранюю версию:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-f&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section-3&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;Теперь, если проверить состояние удаленного репозитория на сервере GitHub, то увидим, что оно идентично состоянию локального репозитория. Но самое главное - удален последний ошибочный коммит, чего я и добивался.&lt;/p&gt;

&lt;p&gt;На этом все,&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/git/github-fallback-commit/&quot;&gt;Откат коммитов на GitHub&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on April 07, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[EasyTAG - работаем с программой]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/linux/easytag-several-operations/" />
  <id>http://zencoder.ru/linux/easytag-several-operations</id>
  <published>2015-04-02T00:00:00+03:00</published>
  <updated>2015-04-02T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Как оказалось, работа в программе EasyTAG - это нетривиальная задача. Интерфейс программы не является интуитивно понятным (по крайней мере - для меня).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;У меня стояло несколько задач для обработки файлов аудио-книг:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;одновременное редактирование тегов для нескольких mp3-файлов&lt;/li&gt;
  &lt;li&gt;добавление изображений к mp3-файлу&lt;/li&gt;
  &lt;li&gt;переименование mp3-файлов по их тегам&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Во всех трех случаях мне пришлось заглядывать в справку &lt;kbd&gt;F1&lt;/kbd&gt; программы EasyTAG, чтобы разобраться с вопросами.&lt;/p&gt;

&lt;h2 id=&quot;easytag-----mp3-&quot;&gt;EasyTAG - редактирование нескольких mp3-файлов&lt;/h2&gt;

&lt;p&gt;Если стоит задача редактирования тегов для нескольких mp3-файлов одновременно (а такая задача возникает часто), для этого необходимо выполнить несложную последовательность действий.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Выделить в окне EasyTAG все редактируемые mp3-файлы&lt;/li&gt;
  &lt;li&gt;Изменить значение тега&lt;/li&gt;
  &lt;li&gt;Нажать на значок “Ab” в поле тега&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/easytag_multiple-rename.png&quot; alt=&quot;Редактирования нескольких файлов одновременно&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Сохранить внесенные изменения&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;easytag----&quot;&gt;EasyTAG - добавление изображения&lt;/h2&gt;

&lt;p&gt;Для добавления изображений (обложек) к аудио-файлам, нужно воспользоваться соответствующей вкладкой в панели редактирования тегов EasyTAG. Значок плюса добавляет изображение к файлу (можно добавить несколько изображений); но есть еще два значка, не столь очевидных.&lt;/p&gt;

&lt;p&gt;Первый значок (шестренка) служит для открытия окна редактирования изображения (обложки) файла. Можно изменить заголовок изображения, а также его тип.&lt;/p&gt;

&lt;p&gt;Второй значок служит для того, чтобы назначить изображение для всех выбранных mp3-файлов. Это аналог значка “Ab”, только для изображений.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/easytag_cover_edit.png&quot; alt=&quot;Добавление изображения&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;easytag----mp3---&quot;&gt;EasyTAG - переименование mp3-файлов по тегам&lt;/h2&gt;

&lt;p&gt;Еще одна крайне важная и полезная функция, которая необходима в программе EasyTAG - это переименование mp3-файлов по значениям тега этого mp3-файла. Другими словами, имеется mp3-файл такого (примерного) вида - &lt;code&gt;2013-04-02-Альфред-ван-Вогт-Зачарованная деревня.mp3&lt;/code&gt;. Это mp3-файл нужно переименовать в программе EasyTAG и привести к виду &lt;code&gt;Альфред-ван-Вогт - Зачарованная деревня.mp3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Программа EasyTAG обладает такой возможностью, вот только “добраться” (точнее - догадаться) до этой функции с первого раза не получиться. Ниже приведена последовательность действий для достижения этой цели.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Выделить в окне EasyTAG все редактируемые mp3-файлы&lt;/li&gt;
  &lt;li&gt;Нажать иконку “Show scanner”. Откроется окно “Tag and Filename Scan”, в котором в поле “Scanner” из выпадающего списка необходимо выбрать запись “Rename File and Directory”. Во втором поле окна размещен обширный список готовых масок для переименования файлов. Можно выбрать готовую маску, а можно создать свою - это очень просто сделать. Должно получиться нечто похожее на следующее:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/easytag_file-rename-via-tag.png&quot; alt=&quot;Переименование файлов по тегам&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Нажать кнопку “Scan Files”, чтобы применить маску к ранее выбранным mp3-файлам.&lt;/li&gt;
  &lt;li&gt;Закрыть окно “Tag and Filename Scan”, нажав кнопку “Close”.&lt;/li&gt;
  &lt;li&gt;Сохранить внесенные изменения. При этом появиться окно с предупреждением о переименовании mp3-файла (-ов)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/04/easytag_file-rename-via-tag-confirm.png&quot; alt=&quot;Подтверждение переименования файлов&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В принципе, на это все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/linux/easytag-several-operations/&quot;&gt;EasyTAG - работаем с программой&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on April 02, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[EasyTag - из Windows-1251 в UTF-8]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/linux/linux-mp3tag-convert-to-utf8/" />
  <id>http://zencoder.ru/linux/linux-mp3tag-convert-to-utf8</id>
  <published>2015-03-29T00:00:00+03:00</published>
  <updated>2015-03-29T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Тема статьи - конвертация mp3-тегов, созданных в кодировке &lt;code&gt;windows-1251&lt;/code&gt;, в кодировку &lt;code&gt;utf-8&lt;/code&gt;, под управлением операционной системы Linux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;В чем проблема&lt;/h2&gt;

&lt;p&gt;Причина возникновения такого вопроса заключается в том, что я уже достаточно давно стал поклонником аудио-книг. И передачи “Модель для сборки” - в частности. И хотя сама передача уже давно закрыта, ее архивы в Интернете доступны для скачивания.&lt;/p&gt;

&lt;p&gt;Дома у меня имеются только две операционные системы - Mac OS X 10.10 и Linux Mint 17 Cinnamon. И вот тут возникает небольшая проблема, связанная с тем, что Audacious под Linux и iTunes под Mac не отображают правильно мета-информацию проигрываемых mp3-файлов аудио-книг, если эти файлы созданы под Windows.&lt;/p&gt;

&lt;p&gt;Другими словами, аудио-проигрыватель “читает” аудио-книгу, но вот понять визуально - какую, нельзя. Не видно названия книги, ее автора, имени чтеца. Происходит это потому, что оба вышеназванных проигрывателя не могут правильно отображать мета-данные mp3-файлов, если эти мета-данные созданы в кодировке &lt;code&gt;windows-1251&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;Как решить проблему&lt;/h2&gt;

&lt;p&gt;Решением вопроса является перекодировка мета-данных mp3-файлов, перевод символов из кодировки &lt;code&gt;windows-1251&lt;/code&gt; в кодировку &lt;code&gt;utf-8&lt;/code&gt;, с которой умеют работать Audacious и iTunes.&lt;/p&gt;

&lt;p&gt;Решение оказалось на удивление простое и “под рукой”. Популярный редактор mp3-тегов под Linux с названием EasyTAG в два счета справляется с задачей. Главное - нужно правильно настроить чтение mp3-тегов этой программой.&lt;/p&gt;

&lt;h2 id=&quot;easytag&quot;&gt;Последовательность действий по настройке EasyTAG&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Устанавливаем программу EasyTAG&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Переходим в настройки программы EasyTAG - “Edit - Preferences”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;К окне настроек программы EasyTAG переходим на вкладку “ID3 Tag Settings”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Устанавливаем параметры программы EasyTAG так, как это показано на скриншоте:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/03/easytag.png&quot; alt=&quot;Параметры программы EasyTAG&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Если описать двумя словами, то необходимо для “ID3v1 tags” выбрать кодировку Windows-1251, для “ID3v1 tags” выбрать кодировку &lt;code&gt;utf-8&lt;/code&gt;. Для поля “Character Set for reading ID3 tags” также выбрать кодировку &lt;code&gt;windows-1251&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;easytag-1&quot;&gt;Конвертация в программе EasyTAG&lt;/h2&gt;

&lt;p&gt;Когда программа EasyTAG настроена, то процесс конвертации mp3-тегов из кодировки &lt;code&gt;windows-1251&lt;/code&gt; в кодировку &lt;code&gt;utf-8&lt;/code&gt; выполнить проще простого.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Открываем в программе EasyTAG папку с коллекцией mp3-файлов, которые необходимо обработать (переконвертировать).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Выделяем в окне программы EasyTAG все эти файлы.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Сохраняем их.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Да, именно так - “открыл-сохранил”, ничего больше. И теперь Audacious вместе с iTunes прекрасно читают обработанные файлы музыки (и аудио-книг).&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/linux/linux-mp3tag-convert-to-utf8/&quot;&gt;EasyTag - из Windows-1251 в UTF-8&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on March 29, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Миксины библиотеки Nib]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/css/nib-mixins/" />
  <id>http://zencoder.ru/css/nib-mixins</id>
  <published>2015-03-26T00:00:00+03:00</published>
  <updated>2015-03-26T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;О чем будет речь? О миксинах библиотеки Nib. Ранее я уже писал о том, как подключать эту библиотеку в свой проект. Ничего сложного в этом нет - достаточно установить Nib и подключить ее в проект.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Но вот вопрос о миксинах этой библиотеки - это отдельный вопрос. Дело в двух моментах - размере библиотеки и документации к ней.&lt;/p&gt;

&lt;p&gt;Во-первых - Nib гораздо меньше, чем Compass (&lt;em&gt;это чтобы было, с чем сравнивать&lt;/em&gt;). Compass больше, тщательнее сработан - в этой библиотеке есть миксины практически на все случаи жизни. У Nib миксинов меньше, ощутимо меньше.&lt;/p&gt;

&lt;p&gt;На это можно ответить вполне резонно. Первое - из личного опыта, на своей практике из всего большого многообразия миксинов Compass я использовал только 10 штук (максимум). Второе - написать миксин на Stylus не просто, а очень просто! Так что, если возникает в этом необходимость - никаких проблем в создании пользовательского миксина не может быть.&lt;/p&gt;

&lt;p&gt;Вторая проблема с Nib более существена и неприятна, скажем так. Заключается она в отсутствии хорошо сделанной документации к библиотеке Nib. То есть, есть официальный сайт проекта Nib, есть репозиторий на GitHub. Но вот такой хорошо оформленной документации, как у Compass, вы не найдете.&lt;/p&gt;

&lt;p&gt;Именно поэтому у меня и возникла мысль, перевоплотившаяся в желание написать маленькое пособие для небольшой доли миксинов, которые доступны в Nib.&lt;/p&gt;

&lt;h2 id=&quot;size&quot;&gt;Миксин Size&lt;/h2&gt;

&lt;p&gt;Миксин для задания размеров элементам &lt;code&gt;display: block&lt;/code&gt; или &lt;code&gt;display: inline-block&lt;/code&gt;. Преимущество у данного миксина - в краткости его написания. Не нужно писать - &lt;code&gt;width: 20px; height: 20px;&lt;/code&gt;, достаточно написать одну строчку:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;30px&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;overflow&quot;&gt;Миксин Overflow&lt;/h2&gt;

&lt;p&gt;Миксин для задания свойства &lt;code&gt;text-overflow: ellipsis&lt;/code&gt;. Полезный миксин, которые реально может помочь в написании одной строки стилей вместо трех правил:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;overflow&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ellipsis&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;nowrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;text-overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ellipsis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;absolutefixedrelative&quot;&gt;Миксин Absolute/Fixed/Relative&lt;/h2&gt;

&lt;p&gt;Миксин для генерирования CSS-свойства &lt;code&gt;position: absolute&lt;/code&gt;, &lt;code&gt;position: fixed&lt;/code&gt; или &lt;code&gt;position: relative&lt;/code&gt;. Этот миксин очень похож на миксин &lt;code&gt;size&lt;/code&gt; - все преимущество его использования только в краткости записи:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;absolute&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;left&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;absolute&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;30px&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;absolute&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;bottom&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;30px&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;relative&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;fixed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;border&quot;&gt;Миксин Border&lt;/h2&gt;

&lt;p&gt;Миксин для генерирования CSS &lt;code&gt;border: 1px solid color&lt;/code&gt;. Достаточно бесполезный миксин, так как проще и быстрее воспользоваться shortcut’ом &lt;code&gt;bd+&lt;/code&gt; из Emmet.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;border&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#800&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#800&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;clearfix&quot;&gt;Миксин Clearfix()&lt;/h2&gt;

&lt;p&gt;Миксин для генерации &lt;code&gt;clearfix&lt;/code&gt;. У &lt;code&gt;jeet.gs&lt;/code&gt; есть свой миксин &lt;code&gt;cf()&lt;/code&gt; для генерации &lt;code&gt;clearfix&lt;/code&gt;. Однако, миксин &lt;code&gt;clearfix()&lt;/code&gt; имеет более понятное название, говорящее - что этот миксин делает. Поэтому использование этого миксина более логичное - читая код, можно сразу сказать, что этот миксин делает.&lt;/p&gt;

&lt;h2 id=&quot;rgba&quot;&gt;Функция rgba()&lt;/h2&gt;

&lt;p&gt;Если быть точным, функция &lt;code&gt;rgba()&lt;/code&gt; не относится к миксинам библиотеки Nib. Это функция препроцессора Stylus. И задача ее - преобразование значения цвета в формате HEX в формат RGBA(). Достаточно бесполезная функция, если только кодер не привык писать значения цветов в RGBA-формате:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;#ff0000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;background&quot;&gt;Миксин Background&lt;/h2&gt;

&lt;p&gt;Вот этот миксин является действительно полезным - благодаря краткости записи и результату генерации этого миксина. Как уже можно догадаться, этот миксин генерирует &lt;em&gt;линейный градиент&lt;/em&gt;. Направление градиента управляется служебным словом, стоящим вначале миксина - &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;background&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;#f00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;#0f0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Миксин для генерации радиального градиента - очень похож на линейный градиент. Разница только в некоторых моментах:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;background&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;radial-gradient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;#f00&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#fff&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;box-sizing&quot;&gt;Миксин Box-sizing&lt;/h2&gt;

&lt;p&gt;Еще один полезный миксин - для генерации CSS-свойства &lt;code&gt;box-sizing: border-box&lt;/code&gt;. Что это за свойство, говорить не приходиться:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;box-sizing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;border-box&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sizing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sizing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sizing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;image&quot;&gt;Миксин Image&lt;/h2&gt;

&lt;p&gt;Миксин для генерации CSS-свойства &lt;code&gt;background-image&lt;/code&gt;. Генерируются два свойства - для нормального разрешения и для дисплеев Retina. Для этого необходимо подготовить два варианта изображений как было сказано выше - тогда миксин сработает.&lt;/p&gt;

&lt;p&gt;Первое изображение - &lt;em&gt;нормального размера&lt;/em&gt; для нормального разрешения. Второе изображение - &lt;em&gt;увеличенная вдвое&lt;/em&gt; версия нормального изображения, для Retina-экранов (это версия &lt;code&gt;@2x&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;images/background.jpg&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(&amp;quot;images/background.jpg&amp;quot;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(&amp;quot;images/background@2x.jpg&amp;quot;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/css/nib-mixins/&quot;&gt;Миксины библиотеки Nib&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on March 26, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[HTML5 Form Validation]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/html/html5-form-validation/" />
  <id>http://zencoder.ru/html/html5-form-validation</id>
  <published>2015-03-07T00:00:00+03:00</published>
  <updated>2015-03-07T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;К вопросу о типах форм в HTML5, регулярных выражениях и валидации форм на основе регулярных выражений. Философское рассуждение на ночь глядя.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;required&quot;&gt;Атрибут required&lt;/h2&gt;

&lt;p&gt;Наиболее простой способ реализации валидации html-форм - это добавить к &lt;code&gt;input(type=&quot;text&quot;)&lt;/code&gt; атрибут &lt;code&gt;required&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Данный атрибут сообщает браузерам, что содержимое поля ввода необходимо для заполнения. Теперь браузеры будут проверять содержимое поля ввода - то есть, выполнять его валидацию.&lt;/p&gt;

&lt;p&gt;Заметьте - браузеры сами будут это выполнять, без какого-либо участия Javascript/jQuery с нашей стороны (&lt;em&gt;это и есть одна из многогранных сторон HTML5&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;В CSS3 для форм ввода разработаны два псевдо-класса:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;:valid&lt;/li&gt;
  &lt;li&gt;:invalid&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Оба псевдокласса предназначены для управления видом форм (&lt;code&gt;border&lt;/code&gt;, &lt;code&gt;background&lt;/code&gt;, помещения маркеров внутрь или снаружи формы) в случае валидности или невалидности содержимого этой формы.&lt;/p&gt;

&lt;p&gt;Например, такой простейший код будет изменять фон поля ввода при валидности или невалидности содержимого:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;__input&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;border&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#ddd&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;border-radius&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;5px&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;padding&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;3px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10px&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:valid&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;245&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:invalid&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;220&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Тут возникает законный вопрос - а каким образом браузер определяет, валидное или невалидное содержимое у этого поля?&lt;/p&gt;

&lt;p&gt;В данном случае - очень просто и примитивно (&lt;em&gt;для наглядности примера&lt;/em&gt;). Если поле не содержит никакого (&lt;em&gt;любого&lt;/em&gt;) символа, то поле считается невалидным и браузер генерирует для данного поля псевдо-класс &lt;code&gt;:invalid&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Если же поле содержит хотя бы один символ (&lt;em&gt;любой - не обязательно текстовый&lt;/em&gt;), то данное поле уже считается валидным и браузер генерирует для этого поля псевдо-класс &lt;code&gt;:valid&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note! Содержимое атрибута &lt;code&gt;placeholder&lt;/code&gt; не рассматривается браузером как содержимое формы. Другими словами, если поле ввода имеет атрибут &lt;code&gt;placeholder&lt;/code&gt; с каким-то значением, то это поле будет считаться браузером все равно невалидным.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;input&quot;&gt;Типы input&lt;/h2&gt;

&lt;p&gt;Конечно, на практике такое поведение браузера имеет мало смысла, поэтому для валидации форм были созданы различные способы фильтрации введенных данных.&lt;/p&gt;

&lt;p&gt;Одним из таких способов фильтрации введенных данных является задание для элемента &lt;code&gt;input&lt;/code&gt; его типа. Это также одна из “фишек” HTML5 и заключается она в том, что для поля ввода &lt;code&gt;input&lt;/code&gt; можно указать, какого типа данные ожидаются в нем.&lt;/p&gt;

&lt;p&gt;Например, &lt;code&gt;input(type=“email”)&lt;/code&gt; говорит о том, что в это поле нужно вводить только адреса электронной почты; &lt;code&gt;input(type=“number”)&lt;/code&gt; - только числа; &lt;code&gt;input(type=“tel”)&lt;/code&gt; - только номера телефонов; &lt;code&gt;input(type=“date”)&lt;/code&gt; - только дату; &lt;code&gt;input(type=“url”)&lt;/code&gt; - только URL-адреса; и так далее.&lt;/p&gt;

&lt;p&gt;Краткий список HTML5-типов &lt;code&gt;input&lt;/code&gt;’ов:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;email&lt;/li&gt;
  &lt;li&gt;number&lt;/li&gt;
  &lt;li&gt;tel&lt;/li&gt;
  &lt;li&gt;date&lt;/li&gt;
  &lt;li&gt;url&lt;/li&gt;
  &lt;li&gt;time&lt;/li&gt;
  &lt;li&gt;week&lt;/li&gt;
  &lt;li&gt;color&lt;/li&gt;
  &lt;li&gt;search&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Эти различные типы input’ов в HTML5 - не просто блаж в угоду призрачной HTML-семантики, как я сам воспринимал их ранее. На самом деле - это именованные &lt;em&gt;регулярные выражения&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Ну как - испугал я читателя? На самом деле &lt;em&gt;регулярные выражения&lt;/em&gt; - это очень просто. Фактически - это набор символов, собранных воедино по определенному правилу и записанных в определенном синтаксисе.&lt;/p&gt;

&lt;p&gt;Грубо говоря - &lt;code&gt;[1,2,3,4,5,6,7,8,9]&lt;/code&gt; - это уже &lt;em&gt;регулярное выражение&lt;/em&gt;. Если этому регулярному выражению присвоить имя &lt;code&gt;number&lt;/code&gt;, то получится &lt;em&gt;именованное регулярное выражение&lt;/em&gt; &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Фактически типы &lt;code&gt;input&lt;/code&gt;’ов, которые были рассмотрены выше - это &lt;em&gt;именованные регулярные выражения&lt;/em&gt;, предустановленные разработчиками HTML5\браузеров.&lt;/p&gt;

&lt;p&gt;И когда для элемента &lt;code&gt;input&lt;/code&gt; устанавливается тип &lt;code&gt;type=&quot;email&quot;&lt;/code&gt; (&lt;em&gt;к примеру&lt;/em&gt;), то этим фактом браузеру всего лишь указывается &lt;em&gt;предустановленное регулярное выражение&lt;/em&gt;, которое браузер должен будет использовать при проверке введенных данных.&lt;/p&gt;

&lt;p&gt;Вот я и подошел к самому интересному моменту - для чего нужны регулярные выражения? А нужны они для проверки введенных данных. Это маска, которую браузер накладывает на введенные пользователем данные. Совпала маска и данные - данные валидные; не совпала маска и введенные данные - данные невалидные.&lt;/p&gt;

&lt;p&gt;Помимо предустановленных регулярных выражений, можно создавать свои собственные, для определенных задач. Но для этого необходимо использовать соответствующий синтаксис и другие несложные знания по этой теме.&lt;/p&gt;

&lt;p&gt;Подключаются пользовательские регулярные выражения в HTML с помощью атрибута &lt;code&gt;pattern&lt;/code&gt; и выглядит это таким образом (&lt;em&gt;регулярное выражение для проверки IPv4-адреса&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;input type=&amp;quot;text&amp;quot; pattern=&amp;quot;\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note! Использование пользовательского &lt;code&gt;pattern&lt;/code&gt; совместно с любым HTML5-типом (&lt;em&gt;email, date, range, tel, number и так далее&lt;/em&gt;) для элемента input почти никогда не имеет смысла по определению.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/html/html5-form-validation/&quot;&gt;HTML5 Form Validation&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on March 07, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Отмена изменений в Git]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/git/git-undoing-changes/" />
  <id>http://zencoder.ru/git/git-undoing-changes</id>
  <published>2015-01-28T00:00:00+03:00</published>
  <updated>2015-01-28T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Обширная и достаточно сложная тема. Однако необходимая, если стоит задача изучить и иметь возможность работать в Git.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Эта тема касается отмены изменений в Git. Так как эта система контроля версий представляет из себя три ветки - рабочая директория, буфер, репозиторий - то будут рассмотрены все три способа.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Отмена изменений в рабочей директории&lt;/h2&gt;

&lt;p&gt;Для отмены изменений в рабочей директории необходимо выполнить одну команду:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Данная команда говорит Git вернуть состояние файла &lt;code&gt;name_of_file&lt;/code&gt; до того, каким оно было зафиксировано в репозитории. Другими словами, произойдет сброс изменений файла в рабочей директории проекта.&lt;/p&gt;

&lt;p&gt;Обязательным условием использования команды &lt;code&gt;checkout&lt;/code&gt; является двойной дефис. Это “говорит” команде &lt;code&gt;checkout&lt;/code&gt;, что в данном случае нужно оставаться в текущей ветке (branche).&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;Отмена изменений в буфере&lt;/h2&gt;

&lt;p&gt;Для отмены изменений в буфере нужно использовать команду:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEAD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Эта команда “вернет” файл &lt;code&gt;name_of_file&lt;/code&gt; из буфера в рабочую директорию.&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;Отмена изменений в репозитории&lt;/h2&gt;

&lt;p&gt;Что касается репозитория, то здесь ситуация намного сложнее. Связано это с тем, что все коммиты в репозитории взаимосвязаны между собой.&lt;/p&gt;

&lt;p&gt;Нельзя просто так взять и изменить какой-либо определенный коммит - все они находятся в своеобразной цепочке и один коммит проистекает из предыдущего коммита.&lt;/p&gt;

&lt;p&gt;Другими словами, у каждого коммита есть свой коммит-родитель и коммит-потомок. Изменить какой-либо коммит - это значит вырвать его из этой цепочки взаимосвязей. Тем самым нарушится целостность всего репозитория и работа Git также нарушится. Ведь дело в том, что сама суть системы контроля версий Git основана на такой взаимосвязанной цепочке коммитов - один коммит проистекает из другого, второй из первого, третий из второго и так далее.&lt;/p&gt;

&lt;p&gt;Как же поступить в данной ситуации?&lt;/p&gt;

&lt;p&gt;Не все так мрачно, как кажется на первый взгляд. На самом деле существует много способов отмены изменений в репозитории. Ниже мы познакомимся с ними.&lt;/p&gt;

&lt;h3 id=&quot;amend&quot;&gt;Опция amend&lt;/h3&gt;

&lt;p&gt;Если следовать из логического рассуждения, представленного выше, то получается, что в цепочке коммитов должен быть крайний коммит - тот, который был внесен совсем недавно. У этого коммита есть коммит-родитель, но нет коммита-потомка, так как этот коммит - крайний в цепочке.&lt;/p&gt;

&lt;p&gt;Соответственно, раз у этого коммита нет потомков, то изменение этого коммита не повлечет за собой нарушение целостности всей цепочки коммитов. Измениться только этот коммит - и только.&lt;/p&gt;

&lt;p&gt;Изменить крайний коммит можно просто перезаписав его. Для этой цели служит ключ &lt;code&gt;--amend&lt;/code&gt;. Команда в целом представляет из себя следующее:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-amend&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Add some commit&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Как только будет выполнена подобная команда, крайний коммит (тот, на котором находится указатель HEAD) будет перезаписан и это очень легко проследить - достаточно сравнить контрольную сумму SHA этого коммита до и после изменений.&lt;/p&gt;

&lt;h3 id=&quot;checkout&quot;&gt;Команда checkout&lt;/h3&gt;

&lt;p&gt;С помощью команды &lt;code&gt;checkout&lt;/code&gt; можно выполнять откат репозитория до нужной версии. Данный способ основан на самом факте существования цепочки коммитов, в которой в роли узлов выступают сами коммиты.&lt;/p&gt;

&lt;p&gt;Образно можно представить данную ситуацию очень наглядно - как обычную магнитофонную ленту в старых кассетных магнитофонах. То место на ленте, где произошла последняя остановка и на котором находится звукозаписывающая головка - это и есть крайний коммит. Предыдущие коммиты - это места на ленте, когда происходила остановка записи в те самые моменты.&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;checkout&lt;/code&gt; может заставить указатель HEAD вернуться назад, на предыдущее место остановки - на предыдущий коммит. И необязательно этот коммит должен быть предыдущим - он может быть любым более ранним.&lt;/p&gt;

&lt;p&gt;Все что для этого нужно - это указать тот коммит, к которому должен вернуться HEAD. Указать коммит просто - у каждого коммита есть уникальный идентификатор - контрольная SHA-сумма.&lt;/p&gt;

&lt;p&gt;Команда возврата к нужному коммиту выглядит таким образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;4a2f59a32bd1074c42&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Можно указать только часть SHA-суммы, так как это показано выше.&lt;/p&gt;

&lt;p&gt;И тогда Git произведет сброс состояния (&lt;em&gt;которые были сделаны в последнем коммите&lt;/em&gt;) файла &lt;code&gt;name_of_file&lt;/code&gt; в буфер. Если ввести команду &lt;code&gt;git status&lt;/code&gt; то увидим, что в буфере будут изменения, готовые для коммита. Это те самые изменения файла &lt;code&gt;name_of_file&lt;/code&gt;, которые мы “выбросили” из репозитория.&lt;/p&gt;

&lt;p&gt;Дальше выполняем “выброс” изменений файла &lt;code&gt;name_of_file&lt;/code&gt; из буфера в рабочую директорию, чтобы мы смогли внести правки в этот файл:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEAD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Все, что будет внесено в этот файл, а затем закоммичено - будет иметь уже другую контрольную сумму. А следовательно - это уже будет совсем другой коммит.&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;Зеркалирование коммитов&lt;/h3&gt;

&lt;p&gt;Одной из разнообразных команд Git для внесения изменений в репозиторий является команда &lt;code&gt;revert&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Суть ее очень проста - она отменяет все изменения, зафиксированные в крайнем коммите; и создает новый коммит, который является потомком предыдущего коммита, но в тоже время его зеркальной копией, противоположностью.&lt;/p&gt;

&lt;p&gt;Синтаксис команды revert также прост:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;4a2f59a32bd1074c42&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;где &lt;code&gt;4a2f59a32bd1074c42&lt;/code&gt; - это часть SHA-суммы крайнего коммита.&lt;/p&gt;

&lt;h3 id=&quot;reset&quot;&gt;Команда reset&lt;/h3&gt;

&lt;p&gt;Команда &lt;code&gt;reset&lt;/code&gt; также может изменять репозиторий Git. Делает она это путем смещения указателя HEAD на нужный коммит.&lt;/p&gt;

&lt;p&gt;После такого смещения HEAD все более поздние коммиты никуда не пропадут из репозитория - они все еще там. Но теперь любое закоммиченное изменение произведет перезапись более поздних коммитов - и тогда они будут потеряны навсегда.&lt;/p&gt;

&lt;p&gt;Ситуация очень похожа на то образное сравнение цепочки коммитов Git с магнитофонной лентой. Стоит отмотать ленту на 10-20 минут назад и снова начать запись, то все более поздние записи (&lt;em&gt;относительно этого места&lt;/em&gt;) будут перезаписаны.&lt;/p&gt;

&lt;p&gt;У команды &lt;code&gt;reset&lt;/code&gt; есть три ключа, которые незначительно видоизменяют ее работу:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-soft&lt;/li&gt;
  &lt;li&gt;-mixed&lt;/li&gt;
  &lt;li&gt;-hard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Команда &lt;code&gt;git reset --soft 4a2f59a32bd1074c42&lt;/code&gt; произведет смещение указателя HEAD на указанный коммит 4a2f59a32bd1074c42. При этом Git произведет сброс изменений в буфер. В результате буфер и рабочая директория будут идентичными между собой; а репозиторий будет переведен в более ранее состояние.&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;git reset --mixd 4a2f59a32bd1074c42&lt;/code&gt; аналогична предыдущей. Также будет произведено смещение указателя HEAD. Но теперь Git сбросит изменения в рабочую директорию. Репозиторий и буфер будут идентичными друг другу и находиться в более раннем состоянии.&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;git reset --hard 4a2f59a32bd1074c42&lt;/code&gt; самая “жесткая”. Также будет произведено смещение указателя HEAD на указанный коммит, но при этом будет произведен сброс всех трех деревьев Git - репозитория, буфера и рабочей директории. Все три будут идентичными друг другу.&lt;/p&gt;

&lt;h2 id=&quot;clean&quot;&gt;Команда clean&lt;/h2&gt;

&lt;p&gt;В системе Git существует команда &lt;code&gt;clean&lt;/code&gt; для удаления не отслеживаемых файлов в рабочей директории.&lt;/p&gt;

&lt;p&gt;Разница между командой &lt;code&gt;git rm&lt;/code&gt; и &lt;code&gt;clean&lt;/code&gt; заключается в том, что при удалении файлов из рабочей директории первой командой они вроде как удаляются. Но на самом деле удаленные файлы все еще остаются в системе Git. Просто они помещены в раздел мусора и являются теперь мусором.&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;clean&lt;/code&gt; как раз и выполняет очистку мусора в системе. Она удаляет все не отслеживаемые и неиспользуемые файлы.&lt;/p&gt;

&lt;p&gt;Но даже это она делает очень осторожно. Если просто запустить &lt;code&gt;git clean&lt;/code&gt;, то ничего не произойдет. Система Git скажет, что команду &lt;code&gt;clean&lt;/code&gt; необходимо запускать либо с ключом &lt;code&gt;-n&lt;/code&gt;, либо с ключом &lt;code&gt;-f&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Запуск &lt;code&gt;git clean -n&lt;/code&gt; - это тестовый запуск команды удаления. Ничего удалено не будет - система лишь покажет, что она собирается удалить, какие файлы.&lt;/p&gt;

&lt;p&gt;А вот запуск &lt;code&gt;git clean -f&lt;/code&gt; произведен реальное удаление всех файлов, которые Git считает мусором. И в этом случае эти файлы будут потеряны навсегда.&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/git/git-undoing-changes/&quot;&gt;Отмена изменений в Git&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on January 28, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Игнорирование файлов в Git]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/git/git-gitignoring-files/" />
  <id>http://zencoder.ru/git/git-gitignoring-files</id>
  <published>2015-01-28T00:00:00+03:00</published>
  <updated>2015-01-28T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Два способа игнорирования файлов - локальный и глобальный. Шаблоны для игнорирования файлов в для различных операционных систем, языков программирования, CMS и т. д. Игнорирование уже отслеживаемого файла в Git. Отслеживание пустых директорий.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;gitignore&quot;&gt;Шаблоны правил для .gitignore&lt;/h2&gt;

&lt;p&gt;Два ресурса на GitHub, в которых собраны шаблоны файла &lt;code&gt;.gitignore&lt;/code&gt; для разных случаев - разных операционных систем, разных языков программирования и т. д.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Общий список правил&lt;/h3&gt;

&lt;p&gt;По ссылке ниже представлен набор общих правил и рекомендаций при создании файла &lt;code&gt;.gitignore&lt;/code&gt;. Помимо этого, в данном разделе показан шаблон для самого общего случая использования &lt;code&gt;.gitignore&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/ignoring-files/&quot;&gt;Общий список правил игнорирования файлов в Git&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Детализированный список правил&lt;/h3&gt;

&lt;p&gt;По ссылке ниже представлен более детальный и полезный список правил, по которым создается файл &lt;code&gt;.gitignore&lt;/code&gt;. В этом списке можно найти рекомендации для разных операционных систем (Linux, Mac OS X, Windows, Android), разных языков программирования (Java, Perl и т. д.), различных CMS (к примеру - Joomla, Magento, Jekyll). Даже для README есть свой набор правил!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/github/gitignore&quot;&gt;Деталированный список правил игнорирования файлов в Git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Помимо списка языков программирования, в котором для каждого пункта этого списка представлены рекомендованные правила для файла &lt;code&gt;.gitignore&lt;/code&gt;, имеется еще дополнительная директория “Global”.&lt;/p&gt;

&lt;p&gt;Как раз в этой директории располагается список рекомендаций применительно к операционным системам. Достаточно найти нужную систему, перейти по ссылке и воспользоваться набором правил.&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;Глобальное игнорирование&lt;/h2&gt;

&lt;p&gt;В Git возможно игнорирование файлов двумя способами:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;локально&lt;/li&gt;
  &lt;li&gt;глобально&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В последнем случае (&lt;em&gt;глобально&lt;/em&gt;) имеется ввиду, что Git будет игнорировать указанные файлы всегда, в любом из проектов.&lt;/p&gt;

&lt;p&gt;Ярким примером такого глобального игнорирования являются служебные файлы операционной системы - они должны игнорироваться всегда и в любом проекте Git.&lt;/p&gt;

&lt;p&gt;Файл конфигурации с глобальным игнорированием может быть назван как угодно (в отличие от файла &lt;code&gt;.gitignore&lt;/code&gt;). Главное - он должен располагаться в домашней директории пользователя, а не в директории с проектом. И это его главное отличие от файла &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;После того, как файл глобального игнорирования создан, необходимо добавить его в конфигурационный файл Git. То есть, “сказать” Git, что “у тебя есть список файлов, которые ты должен игнорировать; этот список называется так и расположен он здесь”.&lt;/p&gt;

&lt;p&gt;Выполняется это командой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;excludesfile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~/.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitignore_global&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Если теперь взглянуть на конфигурационный файл Git, то увидим следующее:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~/.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitconfig&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;[user]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@gmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;[core]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;excludesfile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitignore_global&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section-3&quot;&gt;Игнорирование отслеживаемого файла&lt;/h2&gt;

&lt;p&gt;Может возникнуть ситуация, когда файл был создан и помещен в репозиторий Git. То есть, теперь он является отслеживаемым.&lt;/p&gt;

&lt;p&gt;Но это была ошибка - этот файл не нужно было отслеживать! Как сказать Git, чтобы он не отслеживал этот файл?&lt;/p&gt;

&lt;p&gt;Для этого нужно выполнить два шага.&lt;/p&gt;

&lt;p&gt;Первый - это внести имя нужного файла в список игнорируемых файлов - отредактировать файл &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Однако, этот шаг еще ничего не даст - Git все также будет его отслеживать, так как он уже внесен в буфера обмена.&lt;/p&gt;

&lt;p&gt;Для этого нужно “вынуть” данный файл из буфера обмена. Это выполняется командой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-cached&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Данная команда удалит указанный файл из буфера обмена, однако оставит в рабочей директории и в репозитории. Последующий коммит произведет удаление этого файла и из репозитория.&lt;/p&gt;

&lt;p&gt;Осталось только выполнить коммит обоих изменений - &lt;em&gt;добавление файла в игнорируемые&lt;/em&gt; и &lt;em&gt;удаление его из репозитория&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Все последующие изменения в этом файле &lt;em&gt;отслеживаться не будут&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;Отслеживание пустых директорий&lt;/h2&gt;

&lt;p&gt;У Git имеется одна очень не очевидная особенность, которая сбивает с толку прозелитов и в один прекрасный момент может их подвести, если они не знают о данном факте.&lt;/p&gt;

&lt;p&gt;Заключается он в том, что Git - это система контроля версий для файлов! Другими словами - Git умеет отслеживать только файлы!&lt;/p&gt;

&lt;p&gt;Поэтому, если в проекте имеется пустая директория, то Git ее просто “выкинет”. По той простой причине, что точки зрения Git директория - всего лишь путь к файлу, способ найти отслеживаемый файл. А раз файла нет, то путь ведет &lt;em&gt;вникуда&lt;/em&gt;, так как отслеживать &lt;em&gt;нечего&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Кстати сказать, я сам когда-то был таким новичком и столкнулся с этим непонятным для меня фактом. Интуитивно догадался, в чем дело и поступал таким “корявым” (&lt;em&gt;как я считал&lt;/em&gt;) способом.&lt;/p&gt;

&lt;p&gt;К примеру, для директории psd я создавал файл-заглушку &lt;code&gt;dummy.psd&lt;/code&gt; размером 1px*1px. Главное - чтобы в директории psd что-то лежало - тогда Git не удалит ее! )&lt;/p&gt;

&lt;p&gt;Как оказалось, я был прав! И это единственный правильный способ заставить Git &lt;em&gt;отслеживать пустые директории&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Одна только &lt;em&gt;маленькая поправка&lt;/em&gt; - в мире Unix такой файл-заглушку можно создать с помощью команды &lt;code&gt;touch&lt;/code&gt; и выглядеть такой файл будет так (&lt;em&gt;общепринятое соглашение&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitkeep&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Что же - этот способ более аккуратный и грамотный!&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/git/git-gitignoring-files/&quot;&gt;Игнорирование файлов в Git&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on January 28, 2015.&lt;/p&gt;
  </content>
</entry>

</feed>
