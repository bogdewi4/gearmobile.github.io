<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Zencoder</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://zencoder.ru/feed.xml" />
<link rel="alternate" type="text/html" href="http://zencoder.ru" />
<updated>2015-11-10T22:45:11+03:00</updated>
<id>http://zencoder.ru/</id>
<author>
  <name>zencoder</name>
  <uri>http://zencoder.ru/</uri>
  <email>gearmobile@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[let и const в ES2015]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/javascript/let-const/" />
  <id>http://zencoder.ru/javascript/let-const</id>
  <published>2015-11-11T00:00:00+03:00</published>
  <updated>2015-11-11T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;em&gt;Прочтение&lt;/em&gt; и &lt;em&gt;переосмысление&lt;/em&gt; замечательного руководства &lt;a href=&quot;https://learn.javascript.ru/let-const&quot;&gt;“Переменные: let и const”&lt;/a&gt; по новшествам в ES6. Не более и не менее. Статья ни на что большее не претендует, разве слегка помочь хозяину в освоении новшевств ES2015.&lt;/p&gt;

&lt;p&gt;В ES6 &lt;strong&gt;взамен&lt;/strong&gt; служебного слова &lt;code&gt;var&lt;/code&gt;, служащего для объявления переменной, введены два служебных слова - &lt;code&gt;let&lt;/code&gt; и &lt;code&gt;const&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Другими словами, это новый способ объявления переменных.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Например:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;let&quot;&gt;Переменная let&lt;/h3&gt;

&lt;h4 id=&quot;let-1&quot;&gt;Область видимости let&lt;/h4&gt;

&lt;p&gt;Переменная, объявленная через &lt;code&gt;var&lt;/code&gt;, является видимой внутри всего js-файла:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Код выше читается таким образом. Объявляется переменная &lt;code&gt;number&lt;/code&gt; и присваивается ей значение &lt;code&gt;5&lt;/code&gt;. Внутри функции переменная &lt;code&gt;number&lt;/code&gt; &lt;strong&gt;не создается заново&lt;/strong&gt;; берется “старая” переменная &lt;code&gt;number&lt;/code&gt; и переопределяется значением &lt;code&gt;10&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Оба последующих &lt;code&gt;alert&lt;/code&gt; выведут одно и тоже значение &lt;code&gt;10&lt;/code&gt;, ибо “старая добрая” &lt;code&gt;number&lt;/code&gt; как была в самом начале, так и осталась - просто ей придали другое значение.&lt;/p&gt;

&lt;p&gt;Переменная, объявленная через &lt;code&gt;let&lt;/code&gt;, имеет область видимости только &lt;strong&gt;внутри блока&lt;/strong&gt;, внутри которого она была объявлена:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// вернет значение 10&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// вернет значение 5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Здесь, фактически, две &lt;strong&gt;независимые переменные&lt;/strong&gt; &lt;code&gt;number&lt;/code&gt;, одна — &lt;strong&gt;глобальная&lt;/strong&gt;, вторая — &lt;strong&gt;локальная&lt;/strong&gt; (&lt;em&gt;внутри функции&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Заметим, что если объявление &lt;code&gt;let number&lt;/code&gt; в первой строке удалить, то в последнем &lt;code&gt;alert&lt;/code&gt; будет ошибка: &lt;strong&gt;переменная неопределена&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ошибка, так как переменная number не объявлена&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Это потому что переменная &lt;code&gt;let&lt;/code&gt; всегда видна именно в &lt;strong&gt;том блоке, где объявлена, и не более&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&quot;let----&quot;&gt;Переменная &lt;code&gt;let&lt;/code&gt; видна только после объявления&lt;/h4&gt;

&lt;p&gt;Как мы помним, переменные &lt;code&gt;var&lt;/code&gt; существуют и &lt;strong&gt;до объявления&lt;/strong&gt;. Они равны &lt;code&gt;undefined&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// number is undefined&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;С переменными &lt;code&gt;let&lt;/code&gt; все проще. &lt;strong&gt;До объявления их вообще нет&lt;/strong&gt;. Такой доступ приведет к ошибке:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// error - переменной number не существует&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Заметим также, что переменные &lt;code&gt;let&lt;/code&gt; &lt;strong&gt;нельзя повторно объявлять&lt;/strong&gt;. То есть, такой код выведет ошибку:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ошибка - переменная `number` уже объявлена&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Это — хоть и выглядит ограничением по сравнению с &lt;code&gt;var&lt;/code&gt;, но на самом деле проблем не создает. Например, два таких цикла совсем &lt;strong&gt;не конфликтуют&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// каждый цикл имеет свою переменную `i`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ошибка - глобальной `i` нет&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;При объявлении &lt;strong&gt;внутри цикла&lt;/strong&gt; переменная &lt;code&gt;i&lt;/code&gt; будет &lt;strong&gt;видна только в блоке цикла&lt;/strong&gt;. Она &lt;strong&gt;не видна снаружи&lt;/strong&gt;, поэтому будет ошибка в последнем &lt;code&gt;alert&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;При использовании в цикле, для каждой итерации создается своя переменная&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeArmy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shooters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;shooters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// выводит свой номер&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shooters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;army&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeArmy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;army&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;army&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Каждому повторению цикла соответствует своя независимая переменная &lt;code&gt;let&lt;/code&gt;. Если внутри цикла есть вложенные объявления функций, то в замыкании каждой будет та переменная, которая была при соответствующей итерации.&lt;/p&gt;

&lt;h3 id=&quot;const&quot;&gt;const&lt;/h3&gt;

&lt;p&gt;Объявление &lt;code&gt;const&lt;/code&gt; задает &lt;strong&gt;константу&lt;/strong&gt;, то есть &lt;strong&gt;переменную, которую нельзя менять&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ошибка при изменении значения константы&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В остальном объявление &lt;code&gt;const&lt;/code&gt; полностью аналогично &lt;code&gt;let&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/javascript/let-const/&quot;&gt;let и const в ES2015&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on November 11, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Различие между exports и module.exports]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/javascript/exports-module_exports/" />
  <id>http://zencoder.ru/javascript/exports-module_exports</id>
  <published>2015-11-10T00:00:00+03:00</published>
  <updated>2015-11-10T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Попытка разобраться, в чем различие между &lt;code&gt;exports&lt;/code&gt; и &lt;code&gt;module.exports&lt;/code&gt;, основанная на статье &lt;a href=&quot;http://www.sitepoint.com/understanding-module-exports-exports-node-js/&quot;&gt;Understanding module.exports and exports in Node.js&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;moduleexports--exports--nodejs&quot;&gt;Что такое module.exports и exports в Node.js&lt;/h2&gt;

&lt;p&gt;Как web-разработчики, мы часто сталкиваемся с ситуацией, когда необходимо иметь дело с малознакомым кодом. И тогда сам собою возникает логичный вопрос - сколько времени мне потребуется для того, чтобы разобраться с чужим кодом и понять принцип его работы?&lt;/p&gt;

&lt;p&gt;Типичный ответ на этот вопрос - ровно столько, чтобы начать самому писать код; а затем вернуться к изучению этой темы позже, когда позволит на это время. Ну что-же, как мне кажется, пришло время получше разобраться с такими понятиями, как &lt;code&gt;module.exports&lt;/code&gt; и &lt;code&gt;exports&lt;/code&gt; в Node.js. Спешу поделиться с вами тем, что я узнал по этому вопросу.&lt;/p&gt;

&lt;h3 id=&quot;module&quot;&gt;Что такое модуль (module)&lt;/h3&gt;

&lt;p&gt;Основная концепция модуля заключается в том, что он инкапсулирует логически связанный между собой код в &lt;strong&gt;единый блок&lt;/strong&gt;. Можно сказать иначе - создание модуля заключается в помещении всех взаимосвязанных между собой функций в &lt;strong&gt;один единый файл&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Для понимания вышесказанного лучше всего создать пример приложения под Node.js. Давайте создадим файл с именем &lt;code&gt;greetings.js&lt;/code&gt;, внутри которого размещены &lt;strong&gt;две функции&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;sayHelloInEnglish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sayHelloInSpanish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hola&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;Экспорт модуля&lt;/h3&gt;

&lt;p&gt;Польза от файла (модуля) &lt;code&gt;greetings.js&lt;/code&gt; (&lt;em&gt;и функций, которые находятся в этом файле&lt;/em&gt;) появляется в том случае, когда файл &lt;code&gt;greetings.js&lt;/code&gt; можно использовать внутри других файлов (модулей).&lt;/p&gt;

&lt;p&gt;Для достижения этого необходимо слегка изменить исходный код файла &lt;code&gt;greetings.js&lt;/code&gt;. Чтобы понять, что происходит на самом деле, в данном случае будем выполнять пошаговый процесс:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Представьте себе, что эта строка существует в качестве первой линии кода в &lt;code&gt;greetings.js&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Видоизменим обе функции в файле &lt;code&gt;greetings.js&lt;/code&gt; с помощью выражения &lt;code&gt;exports&lt;/code&gt; таким образом, чтобы они были доступны для внешних файлов (модулей):&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHelloInEnglish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHelloInSpanish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hola&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В приведенном выше коде можно было бы заменить выражение &lt;code&gt;exports&lt;/code&gt; на &lt;code&gt;exports.module&lt;/code&gt; и получить точно такой же результат. Если этот момент кажется вам непонятным, то помните, что выражение &lt;code&gt;exports&lt;/code&gt; и выражение &lt;code&gt;exports.module&lt;/code&gt; ссылаются на один и тот же объект.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Это текущее значение выражения &lt;code&gt;module.exports&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;sayHelloInEnglish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;sayHelloInSpanish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hola&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Импортирование модуля&lt;/h3&gt;

&lt;p&gt;Давайте сделаем методы модуля &lt;code&gt;greetings.js&lt;/code&gt; общедоступными для другого файла (модуля) с именем &lt;code&gt;main.js&lt;/code&gt;. Этот процесс также разобьем пошагово для более лучшего понимания:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;В Node.js используется команда &lt;code&gt;require&lt;/code&gt; для импортирования одного модуля в другой модуль:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Давайте подключим модуль &lt;code&gt;greetings.js&lt;/code&gt; в модуль &lt;code&gt;main.js&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// main.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./greetings.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Приведенная выше строка кода равнозначна нижеследующему коду:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// main.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sayHelloInEnglish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sayHelloInSpanish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hola&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Теперь можно использовать функции модуля &lt;code&gt;greetings.js&lt;/code&gt; внутри модуля &lt;code&gt;main.js&lt;/code&gt; как методы объекта &lt;code&gt;greeting&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// main.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./greetings.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Hello&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHelloInEnglish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Hola&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHelloInSpanish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Hola&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Отличительные моменты&lt;/h3&gt;

&lt;p&gt;Команда &lt;code&gt;require&lt;/code&gt; возвращает объект, свойства и методы которого доступны другим внешним модулям при помощи команды &lt;code&gt;module.exports&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Нижеприведенный пример поможет разобраться в данном вопросе:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// greetings.js&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// var exports = module.exports = {};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHelloInEnglish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHelloInSpanish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hola&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Эта строка кода выполняет повторное переопределение,&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Bonjour&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Теперь сделаем подключение модуля &lt;code&gt;greetings.js&lt;/code&gt; в модуль &lt;code&gt;main.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// main.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greetings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./greetings.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;На данный момент в нашем примере ничего не поменялось. В переменную &lt;code&gt;greetings&lt;/code&gt; помещается код, доступный из модуля &lt;code&gt;greetings.js&lt;/code&gt;. Не более того.&lt;/p&gt;

&lt;p&gt;Однако, если мы попытаемся воспользоваться каким-либо из методов модуля &lt;code&gt;greetings.js&lt;/code&gt; - &lt;code&gt;sayHelloInEnglish&lt;/code&gt; или &lt;code&gt;sayHelloInSpanish&lt;/code&gt;, то мы получим ошибку. Это произошло в следствие того, что было произведено переопределение экспортируемой структуры модуля при помощи команды &lt;code&gt;module.exports&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Другими словами, последней командой &lt;code&gt;module.exports&lt;/code&gt; экспортируется совсем другой модуль - &lt;code&gt;Bonjour&lt;/code&gt;, у которого другие свойства и методы. Происходит &lt;strong&gt;переопределение&lt;/strong&gt; экспортируемого модуля и вызов метода &lt;code&gt;sayHelloInEnglish&lt;/code&gt; или &lt;code&gt;sayHelloInSpanish&lt;/code&gt; вызовет ошибку:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// main.js&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// var greetings = require(&amp;quot;./greetings.js&amp;quot;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * TypeError: object Bonjour has no&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * method &amp;#39;sayHelloInEnglish&amp;#39;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;greetings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHelloInEnglish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * TypeError: object Bonjour has no&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * method &amp;#39;sayHelloInSpanish&amp;#39;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;greetings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHelloInSpanish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Чтобы отследить ошибки при использовании модуля &lt;code&gt;greetings&lt;/code&gt;, можно вывести их в консоль:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// &amp;quot;Bonjour&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;greetings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;Заключение&lt;/h3&gt;

&lt;p&gt;Импорт и экспорт модулей в Node.js является ежедневной задачей. Я надеюсь, что благодаря этой статье стала ясна разница между командой &lt;code&gt;exports&lt;/code&gt; и командой &lt;code&gt;module.exports&lt;/code&gt;. Более того, если у вас когда-либо произойдет ошибка при доступе к общедоступным методам модуля в будущем, то я надеюсь, что у вас есть лучшее понимание того, почему может возникнуть эти ошибки.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/javascript/exports-module_exports/&quot;&gt;Различие между exports и module.exports&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on November 10, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Что такое require и module.exports]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/javascript/require-nodejs/" />
  <id>http://zencoder.ru/javascript/require-nodejs</id>
  <published>2015-11-09T00:00:00+03:00</published>
  <updated>2015-11-09T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Данная статья является &lt;em&gt;прочтением&lt;/em&gt; и &lt;em&gt;переосмыслением&lt;/em&gt; перевода &lt;a href=&quot;http://habrahabr.ru/post/217901/&quot;&gt;Node.js, Require и Exports&lt;/a&gt; статьи-оригинала &lt;a href=&quot;http://openmymind.net/2012/2/3/Node-Require-and-Exports/&quot;&gt;Node.js, Require and Exports&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Помимо этого, существует еще одна неплохая статья, посвященная данной тематике - &lt;a href=&quot;http://www.sitepoint.com/understanding-module-exports-exports-node-js/&quot;&gt;Understanding module.exports and exports in Node.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Тематика данного поста посвящена двум командам Node.js - &lt;code&gt;require&lt;/code&gt; и &lt;code&gt;module.exports&lt;/code&gt;. Обе эти команды являются &lt;em&gt;служебными&lt;/em&gt; и “принадлежат” Node.js.&lt;/p&gt;

&lt;p&gt;С помощью этих команд Node.js осуществляет взаимодействие своих модулей между друг другом.&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;require&lt;/code&gt; &lt;strong&gt;подключает&lt;/strong&gt; один модуль к другому. Команда &lt;code&gt;module.exports&lt;/code&gt; делает модуль &lt;strong&gt;доступным&lt;/strong&gt; для других модулей.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Ниже - краткое изложение статьи-оригинала …&lt;/p&gt;

&lt;p&gt;В Node.js все &lt;em&gt;штуки&lt;/em&gt; видны друг другу только &lt;strong&gt;в рамках одного и того же файла&lt;/strong&gt;. Под штуками я подразумеваю &lt;em&gt;переменные&lt;/em&gt;, &lt;em&gt;функции&lt;/em&gt;, &lt;em&gt;классы и их члены&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Например, у нас есть файл &lt;code&gt;misc.js&lt;/code&gt; следующего содержания:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;summ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Привычный &lt;strong&gt;доступ&lt;/strong&gt; к константе &lt;code&gt;x&lt;/code&gt; и переменной &lt;code&gt;summ&lt;/code&gt; из &lt;strong&gt;другого файла невозможен&lt;/strong&gt;. Это никак не связано с использованием &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Дело в том, что Node.js состоит из &lt;strong&gt;блоков&lt;/strong&gt;, называемых &lt;strong&gt;модулями&lt;/strong&gt;; и каждый &lt;strong&gt;отдельный файл&lt;/strong&gt; по своей сути — &lt;strong&gt;отдельный блок&lt;/strong&gt; (модуль), чья &lt;strong&gt;область видимости изолирована&lt;/strong&gt; от других таких же блоков (модулей).&lt;/p&gt;

&lt;p&gt;Теперь перед тем как мы узнаем, как &lt;strong&gt;сделать эти штуки видимыми вне модуля&lt;/strong&gt;, рассмотрим более подробно, как &lt;strong&gt;загружаются модули&lt;/strong&gt; в Node.js.&lt;/p&gt;

&lt;p&gt;Сейчас речь пойдет о том месте, где пишется - &lt;code&gt;require&lt;/code&gt;. Служебное слово &lt;code&gt;require&lt;/code&gt; используют для &lt;strong&gt;загрузки модуля&lt;/strong&gt;, обычно &lt;strong&gt;присваивая результат его работы какой-то переменной&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./some_module&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Другими словами можно сказать, что в Node.js служебное слово &lt;code&gt;require&lt;/code&gt; служит для подключения одного независимого модуля (файла) к другому независимому модулю (файлу). Принцип подключения через &lt;code&gt;require&lt;/code&gt; заключается в создании в целевом модуле &lt;strong&gt;объекта&lt;/strong&gt; и помещении в этот объект подключаемого модуля.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Конечно же, до тех пор, пока наш модуль (&lt;code&gt;some_module&lt;/code&gt;) ничего не &lt;strong&gt;отдает&lt;/strong&gt;, все приведенные примеры бесполезны.&lt;/p&gt;

&lt;p&gt;А чтобы наш модуль (&lt;code&gt;some_module&lt;/code&gt;) что-нибудь &lt;strong&gt;отдал&lt;/strong&gt;, мы будем использовать служебное слово &lt;code&gt;module.exports&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;summ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// сделали константу 5 доступной из других модулей&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;summ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;summ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// сделали переменную summ доступной из других модулей&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вот теперь наш модуль (&lt;code&gt;some_module&lt;/code&gt;) стал гораздо &lt;strong&gt;более полезным&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./some_module&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В результате в целевом модуле будет создан объект &lt;code&gt;someModule&lt;/code&gt; со свойством &lt;code&gt;x = 5&lt;/code&gt; (&lt;code&gt;someModule.x&lt;/code&gt;) и методом &lt;code&gt;summ&lt;/code&gt; (&lt;code&gt;someModule.summ&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Есть ещё такой способ отдать &lt;em&gt;штуки&lt;/em&gt; из нашего модуля:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;То есть, в исходном модуле создается объект &lt;code&gt;User&lt;/code&gt; со свойствами &lt;code&gt;User.name&lt;/code&gt; и &lt;code&gt;User.email&lt;/code&gt;. Затем с помощью служебного слова &lt;code&gt;module.exports&lt;/code&gt; объект &lt;code&gt;User&lt;/code&gt; делается доступным для других модулей Node.js.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Разница&lt;/strong&gt; между этими подходами &lt;strong&gt;не велика, но важна&lt;/strong&gt;. Как видно, в данном случае мы экспортируем &lt;strong&gt;функцию напрямую&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// vs&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Всё это к тому, что потом ее будет &lt;strong&gt;легче использовать&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// vs&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Выгода от использования такого способа заключается в том, что в данном случае нам не важно, будет ли ваш модуль представлять контейнер c экспортируемыми значениями или нет.&lt;/p&gt;

&lt;p&gt;Чтобы еще &lt;strong&gt;более красочно&lt;/strong&gt; представить &lt;strong&gt;процесс взаимодействия модулей&lt;/strong&gt;, давайте рассмотрим следующий пример:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;powerLevel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;level&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9000&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;it&amp;#39;s over 9000&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;powerLevel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Когда вы подключите данный модуль используя &lt;code&gt;require&lt;/code&gt;, фактически им будет являться &lt;strong&gt;функция&lt;/strong&gt;, что позволит вам сделать следующее:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./powerlevel&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Что, по сути, является &lt;strong&gt;упрощенной записью&lt;/strong&gt; следующего кода:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./powerlevel&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;someModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вот и все кратко о командах &lt;code&gt;require&lt;/code&gt; и &lt;code&gt;module.exports&lt;/code&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/javascript/require-nodejs/&quot;&gt;Что такое require и module.exports&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on November 09, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Создаем первоклассное портфолио]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/freelance/first-class-portfolio/" />
  <id>http://zencoder.ru/freelance/first-class-portfolio</id>
  <published>2015-11-02T00:00:00+03:00</published>
  <updated>2015-11-02T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Данная статья &lt;a href=&quot;http://speckyboy.com/2015/08/19/tips-for-creating-a-first-class-personal-portfolio/&quot; title=&quot;Tips for Creating a First-Class Personal Portfolio&quot;&gt;Tips for Creating a First-Class Personal Portfolio&lt;/a&gt; показалась мне интересной в качестве повышения личного опыта. Советы в этой статье больше относятся к дизайнерам; но их в полной мере можно отнести и к Frontend Developer’у. Статья написана редактором и основателем &lt;a href=&quot;http://speckyboy.com/&quot; title=&quot;Speckyboy Design Magazine&quot;&gt;Speckyboy Design Magazine&lt;/a&gt; Полом Эндрю (&lt;a href=&quot;http://speckyboy.com/author/apaulandrew/&quot; title=&quot;Paul Andrew&quot;&gt;Paul Andrew&lt;/a&gt;). Ниже привожу &lt;em&gt;вольный перевод&lt;/em&gt; статьи.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Логотип и слоган&lt;/h2&gt;

&lt;p&gt;Для начала начнем с основ. Ваш &lt;strong&gt;логотип - это ваш бренд&lt;/strong&gt;; а &lt;strong&gt;ваш слоган - кто вы есть&lt;/strong&gt;. С помощью логотипа и слогана вы должны &lt;strong&gt;привлечь внимание&lt;/strong&gt; потенциальных клиентов и быстро ответить на их вопрос - “Почему?”. В противном случае посетитель быстро уйдет со страницы и тотчас забудет о вашем портфолио.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-01.png&quot; alt=&quot;Уникальный логотип из портфолио Inal&quot; title=&quot;Уникальный логотип из портфолио Inal&quot; /&gt; Уникальный логотип из портфолио &lt;a href=&quot;http://www.inaldjafar.com/#/about&quot;&gt;Inal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Логотип должен представлять вас и ваш стиль перед потенциальным клиентом; слоган должен кратко и ясно сказать клиенту, что вы можете сделать для него ценного и полезного.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Итак, запомните:&lt;/strong&gt; быстрый и краткий ответ на вопрос “Зачем” или же потенциальный клиент забудет о вашем портфолио раньше, нежели вы можете себе это представить.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-02.png&quot; alt=&quot;Слоган из портфолио Mike Etheridge&quot; title=&quot;Слоган из портфолио Mike Etheridge&quot; /&gt; Слоган из портфолио &lt;a href=&quot;http://lickscreative.com/&quot;&gt;Mike Etheridge&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;Простая навигация&lt;/h2&gt;

&lt;p&gt;Это истина, не требующая доказательств. Однако, все же стоить упомянуть еще раз: даже самый лучший сайт - это плохой сайт, если его навигация не интуитивно понятная.&lt;/p&gt;

&lt;p&gt;Если в портфолио нельзя быстро и легко увидеть примеры ваших работ, то становится неважным сам факт, насколько хороши ваши работы сами по себе.&lt;/p&gt;

&lt;p&gt;Потенциальный клиент будет чувствовать себя обманутым в своих ожиданиях и скорее всего отправиться искать другого исполнителя.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-03.png&quot; alt=&quot;Простая и доступная навигация из портфолио Robin Man&quot; title=&quot;Простая и доступная навигация из портфолио Robin Man&quot; /&gt; Простая и доступная навигация из портфолио &lt;a href=&quot;http://www.robinman.com/&quot;&gt;Robin Man&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Сделайте навигацию в вашем портфолио &lt;strong&gt;настолько простой, насколько это возможно&lt;/strong&gt;. Упростите и укоротите пункты меню; сделайте страницы меньшими по размеру и объедините их; сделайте стиль навигации настолько же простым, насколько и понятным.&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;Доступные контакты&lt;/h2&gt;

&lt;p&gt;Какая самая главная задача, ради которой создается портфолио? Привлечь клиентов и получить хорошо оплачиваемые заказы от них. И самый простой способ сделать это - помощь потенциальному заказчику &lt;strong&gt;связаться с вами&lt;/strong&gt;; тем самым вы увеличите шансы получить от клиента оплачиваемый заказ.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-04.png&quot; alt=&quot;Кнопка &amp;quot;Связаться со мной&amp;quot; из портфолио Matthew Miller&quot; title=&quot;Кнопка &amp;quot;Связаться со мной&amp;quot; из портфолио Matthew Miller&quot; /&gt; &lt;a href=&quot;http://mmmatt.com/&quot;&gt;Matthew Miller&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;Показывайте только лучшее&lt;/h2&gt;

&lt;p&gt;В портфолио должны быть представлены &lt;strong&gt;только самые лучшие работы&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-05.png&quot; alt=&quot;Страница из портфолио Camille Leonard&quot; title=&quot;Страница из портфолио Camille Leonard&quot; /&gt; Страница из портфолио &lt;a href=&quot;http://camille-leonard.fr/&quot;&gt;Camille Leonard&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Думайте о своем портфолио как об альбоме с лучшими хитами. В вашем портфолио должны быть только &lt;strong&gt;самые лучшие&lt;/strong&gt;, &lt;strong&gt;самые выразительные&lt;/strong&gt;, &lt;strong&gt;самые яркие&lt;/strong&gt; работы; все, что не отвечает этим требованиям, должно быть убрано из портфолио.&lt;/p&gt;

&lt;p&gt;Точно также, как безупречный альбом с лучшими хитами снова и снова привлекает новых фанатов, так и портфолио с безупречным дизайном должно снова и снова поражать воображение и привлекать новых заказчиков.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-06.png&quot; alt=&quot;Продвинутая страница портфолио Kata Farkas&quot; title=&quot;Продвинутая страница портфолио Kata Farkas&quot; /&gt; Продвинутая страница портфолио &lt;a href=&quot;http://katafarkas.com/&quot;&gt;Kata Farkas&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;Сортируйте ваши работы&lt;/h2&gt;

&lt;p&gt;Этот совет является частью ранее рассмотренного совета по созданию простой и понятной навигации портфолио. Отсортируйте образцы ваших работ таким образом, чтобы можно было легко и просто перемещаться между ними.&lt;/p&gt;

&lt;p&gt;Скажем так: даже если у вас имеется только десять самых лучших работ, то отсортировав их по логотипам, сайтам, баннерам и так далее, вы тем самым сделаете просмотр этих образцов &lt;strong&gt;более удобным и простым&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-07.png&quot; alt=&quot;Каталогизация работ в портфолио Huncwot&quot; title=&quot;Каталогизация работ в портфолио Huncwot&quot; /&gt; Каталогизация работ в портфолио &lt;a href=&quot;http://huncwot.com/&quot;&gt;Huncwot&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;Добавьте отзывы&lt;/h2&gt;

&lt;p&gt;Подтверждение ваших навыков клиентами, с которыми вы уже работали, является наиболее эффективным способом свести в минимуму риски для новых потенциальных заказчиков.&lt;/p&gt;

&lt;p&gt;Судите сами: вы лично не уверены в профессиональных способностях дизайнера, которому хотели бы предложить работу; но при этом вы видите, что остальные люди высоко оценивают его работу; насколько высока вероятность того, что вы сами предложите ему работу?&lt;/p&gt;

&lt;p&gt;Основная цель наличия отзывов в портфолио - уменьшить риск для потенциальных заказчиков и расположить их к тому, чтобы дать вам шанс попробовать поработать с ними.&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;Что вы умеете&lt;/h2&gt;

&lt;p&gt;Как вы уже могли заметить, основная идея всех советов, представленных в этой статье - помочь заказчику определиться в своем выборе &lt;strong&gt;настолько легко, насколько это возможно&lt;/strong&gt;. И данный совет ничем не отличается от всех предыдущих - четко и ясно расскажите потенциальному клиенту, &lt;strong&gt;какие виды работ вы готовы выполнить&lt;/strong&gt;. Не заставляйте посетителей догадываться о том, чем именно вы занимаетесь - просто &lt;strong&gt;скажите им об этом&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-08.png&quot; alt=&quot;Страница с услугами из портфолио Studio Sweep&quot; title=&quot;Страница с услугами из портфолио Studio Sweep&quot; /&gt; Страница с услугами из портфолио &lt;a href=&quot;http://studiosweep.com/about/&quot;&gt;Studio Sweep&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Так что общая картина выглядит примерно таким образом - посетитель заходит на ваш сайт с портфолио, сразу же видит присущий вашим работам стиль и их стоимость, оценивает ваши работы, читает отзывы предыдущих заказчиков и наконец последний недостающий кусочек в его мозаике - нужно посмотреть, что именно вы можете &lt;strong&gt;сделать для него&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;section-7&quot;&gt;Личная информация&lt;/h2&gt;

&lt;p&gt;Так как потенциальный заказчик, скорее всего, не будет встречаться с вами в личной беседе, добавьте в портфолио &lt;strong&gt;информацию о себе&lt;/strong&gt;. Прежде всего, бизнес - &lt;em&gt;это очень личное&lt;/em&gt;; это то, о чем договариваются люди (&lt;em&gt;не роботы&lt;/em&gt;) лично между собой; и личные взаимоотношения между вами и потенциальным клиентом могут быть даже более важным моментом, нежели ваши профессиональные качества.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-09.png&quot; alt=&quot;Страница с личной информацией из портфолио Calvin Teoh&quot; title=&quot;Страница с личной информацией из портфолио Calvin Teoh&quot; /&gt; Страница с личной информацией из портфолио &lt;a href=&quot;http://calvinteoh.com/&quot;&gt;Calvin Teoh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Вы можете добавить в свое портфолио &lt;strong&gt;простую страницу&lt;/strong&gt; или же &lt;strong&gt;раздел&lt;/strong&gt; с кратким описанием вас самих (&lt;em&gt;не ваши навыки и знания, а именно информацию о вас как о личности; о том, что вы любите и что не любите&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Вы можете также добавить &lt;strong&gt;ссылки на свои профили&lt;/strong&gt; в различных социальных сетях, если вы чувствуете, что это поможет еще лучше раскрыть вас как личность. Тем самым вы еще больше упрочите потенциального клиента в его решении.&lt;/p&gt;

&lt;h2 id=&quot;x-&quot;&gt;X-фактор&lt;/h2&gt;

&lt;p&gt;Этот раздел можно считать продолжением предыдущего раздела, в котором говорилось о правильной подаче личной информации о себе. Сделайте так, чтобы ваша &lt;strong&gt;уникальность читалась в каждой черте вашего портфолио&lt;/strong&gt;. В вашем конкретном случае вышесказанное относится к дизайну сайтов, размещенных в вашем портфолио.&lt;/p&gt;

&lt;p&gt;Почему? Да потому, что помимо вас существуют еще великое множество дизайнеров с профессиональным портфолио. И почему в таком случае потенциальный клиент должен будет прийти именно к вам, а не к любому из них?&lt;/p&gt;

&lt;p&gt;И снова вернемся к теме ответа на вопрос “Почему?” Если принимать во внимание X-фактор, то это поможет потенциальному заказчику ответить на его вопрос.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/portfolio-examples-10.png&quot; alt=&quot;Уникальность дизайна из портфолио Colin Snow&quot; title=&quot;Уникальность дизайна из портфолио Colin Snow&quot; /&gt; Уникальность дизайна из портфолио &lt;a href=&quot;http://colinsnow.us/&quot;&gt;Colin Snow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;В заключение можно привести ссылку на подборку из &lt;strong&gt;50 креативных портфолио&lt;/strong&gt;, которые могут послужить образцом для подражания и примера - &lt;a href=&quot;http://speckyboy.com/2013/08/15/creative-portfolios-of-50-designers/&quot; title=&quot;50 Inspirational and Creative Portfolios Sites&quot;&gt;50 Inspirational and Creative Portfolios Sites&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/freelance/first-class-portfolio/&quot;&gt;Создаем первоклассное портфолио&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on November 02, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Workrave - бережем зрение]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/linux/workrave/" />
  <id>http://zencoder.ru/linux/workrave</id>
  <published>2015-11-01T00:00:00+03:00</published>
  <updated>2015-11-01T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Тема этого поста не совсем относится к web-разработке, хотя косвенно касается ее. Данный пост будет посвящен здоровью - а точнее, &lt;strong&gt;проблеме поддержания зрения в более или менее нормальном состоянии&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Frontend-разработчики, так как же как и программисты, проводят огромное количество часов за мониторами компьютеров. Такая непосильная нагрузка на зрение не может не сказаться отрицательно на последнем.&lt;/p&gt;

&lt;p&gt;Чтобы облегчить нагрузку на глаза, необходимо периодически давать возможность отдохнуть последним. Для этой цели существуют программы особого рода, которые относят к классу &lt;a href=&quot;https://en.wikipedia.org/wiki/Repetitive_strain_injury&quot; title=&quot;Repetitive Strain Injury&quot;&gt;Repetitive Strain Injury (RSI)&lt;/a&gt;. По-русски такой термин звучит как &lt;a href=&quot;https://goo.gl/HlnEny&quot; title=&quot;Спазм аккомодации&quot;&gt;Спазм аккомодации&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Такое нарушение зрения хоть и не является болезненным, но все же это неприятное явление. Которое, если не лечить (или не предупредить) его, приводит к дальнейшему прогрессу близорукости со всеми вытекающими последствиями.&lt;/p&gt;

&lt;p&gt;В статье будет рассмотрен процесс знакомства с программой &lt;a href=&quot;http://www.workrave.org/&quot; title=&quot;Workrave&quot;&gt;Workrave&lt;/a&gt;, бесплатной и хорошо проработанной. Эта программа доступна под OS Linux любого семейства из соответствующего репозитория.&lt;/p&gt;

&lt;p&gt;Под OS X автор не нашел достойного бесплатного аналога программы &lt;a href=&quot;http://www.workrave.org/&quot; title=&quot;Workrave&quot;&gt;Workrave&lt;/a&gt;. Как заменитель, автор использует программу из класса &lt;a href=&quot;https://en.wikipedia.org/wiki/Pomodoro_Technique&quot; title=&quot;Pomodoro Technique&quot;&gt;Pomodoro&lt;/a&gt; - удобное сочетание &lt;em&gt;планирования рабочего времени&lt;/em&gt; и &lt;em&gt;предупреждения &lt;a href=&quot;https://en.wikipedia.org/wiki/Repetitive_strain_injury&quot; title=&quot;Repetitive Strain Injury&quot;&gt;RSI&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Под Windows программы класса &lt;a href=&quot;https://en.wikipedia.org/wiki/Repetitive_strain_injury&quot; title=&quot;Repetitive Strain Injury&quot;&gt;Repetitive Strain Injury (RSI)&lt;/a&gt; рассматриваться не будут, ибо - если вы используете Windows - мои вам соболезнования.&lt;/p&gt;

&lt;h2 id=&quot;workrave&quot;&gt;Workrave&lt;/h2&gt;

&lt;p&gt;В этом разделе я хочу поделиться своим видением процесса настройки и использования программы &lt;a href=&quot;http://www.workrave.org/&quot; title=&quot;Workrave&quot;&gt;Workrave&lt;/a&gt;. Почему так? Как мне кажется, &lt;a href=&quot;http://www.workrave.org/documentation/&quot; title=&quot;Workrave Documentation&quot;&gt;документация&lt;/a&gt; на официальном сайте Workrave весьма скудная и плохо организованная. Русскоязычные статьи по использованию программы Workrave есть, но меня не удовлетворило их качество.&lt;/p&gt;

&lt;p&gt;А вот настройка и использование программы Workrave автору кажется делом &lt;strong&gt;не совсем интуитивно понятным&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Установка Workrave не должна вызывать каких-либо проблем. Она имеется в репозитории любого Linux-дистрибутива. После установки нужно обязательно ее настроить. Но - не забыть добавить программу в автозагрузку! ))&lt;/p&gt;

&lt;p&gt;Панель настроек &lt;strong&gt;Preferences&lt;/strong&gt; разбита на &lt;strong&gt;три основных раздела&lt;/strong&gt; - &lt;strong&gt;Timers&lt;/strong&gt;, &lt;strong&gt;User Interface&lt;/strong&gt;, &lt;strong&gt;Network&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Раздел &lt;strong&gt;Timers&lt;/strong&gt; - самый обширный и самый главный. С него и начнем.&lt;/p&gt;

&lt;h3 id=&quot;workrave---timers&quot;&gt;Workrave - Timers&lt;/h3&gt;

&lt;p&gt;Чтобы легко разобраться в настройках этого раздела, нужно понять принцип работы программы Workrave.&lt;/p&gt;

&lt;p&gt;Все время в Workrave делится на &lt;strong&gt;три категории&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;краткие перерывы (&lt;strong&gt;Micro Break&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;длинные перерывы (&lt;strong&gt;Rest Break&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;дневной лимит работы (&lt;strong&gt;Daily Limit&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Вот как это выглядит “на деле”.&lt;/p&gt;

&lt;p&gt;Пользователь работает за компьютером, на котором запущена программа Workrave &lt;em&gt;в фоновом режиме&lt;/em&gt;. Она отслеживает продолжительность работы пользователя.&lt;/p&gt;

&lt;p&gt;Прошло 15 минут непрерывной работы на компьютером - настало время &lt;strong&gt;краткого перерыва&lt;/strong&gt; (Micro Break) продолжительностью 30 секунд. Нужно отвести взгляд от монитора и по желанию - просто посмотреть вдаль или сделать какое-либо упражнение для глаз (&lt;em&gt;советую просто закрыть глаза - прекрасный способ дать отдохнуть&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Обмануть программу и продолжить работать не получиться - Workrave выводит &lt;a href=&quot;https://goo.gl/8N25Dm&quot; title=&quot;Модальное окно&quot;&gt;модальное окно&lt;/a&gt; с отсчетом времени, которое блокирует Desktop и не дает доступа к нему.&lt;/p&gt;

&lt;p&gt;Прошло 30 секунд - модальное окно пропадает и пошел отсчет нового 15-минутного отрезка работы. И так до тех пор, пока не настает черед &lt;strong&gt;длинного перерыва&lt;/strong&gt; (Rest Break) продолжительностью 10 минут.&lt;/p&gt;

&lt;p&gt;Конечно, 10 минут торчать за компом (&lt;em&gt;бездельничая&lt;/em&gt;) никто не будет, поэтому есть смысл встать, сходить за кофе и так далее - по вкусу.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Длинный перерыв&lt;/strong&gt; (Rest Break) закончился - начался отчет нового длинного перерыва (Rest Break), состоящего из серии кратких перерывов (Micro Break).&lt;/p&gt;

&lt;p&gt;Когда общее время работы за компьютером достигнет четырех часов - все, пора бросать работу за компом, ибо настал &lt;strong&gt;Daily Limit&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Приведенные выше цифры являются предустановками по умолчанию (&lt;em&gt;и то - я привел их по памяти, так как изменил на свои собственные&lt;/em&gt;). Но суть не в цифрах - суть в принципе работы программы Workrave; а он, как мне кажется, стал понятен.&lt;/p&gt;

&lt;p&gt;Поэтому давайте откроем окно настроек программы Workrave и несколько углубимся в детали.&lt;/p&gt;

&lt;p&gt;На каждой из вкладок - &lt;strong&gt;Micro Break&lt;/strong&gt;, &lt;strong&gt;Rest Break&lt;/strong&gt;, &lt;strong&gt;Daily Limit&lt;/strong&gt; имеется галочка &lt;strong&gt;Enable Timer&lt;/strong&gt;, смысл которой должен быть понятен - включить или выключить этот тип таймера. Другими словами, нужен ли такой тип таймера в вашем рабочем процессе.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/workrave-microbreak.png&quot; alt=&quot;Workrave Microbreak&quot; title=&quot;Workrave Microbreak&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На вкладках &lt;strong&gt;Micro Break&lt;/strong&gt; и &lt;strong&gt;Rest Break&lt;/strong&gt; имеются одинаковые разделы &lt;strong&gt;Timers&lt;/strong&gt;. Здесь устанавливаются продолжительность работы (&lt;em&gt;Time between breaks&lt;/em&gt;) и продолжительность отдыха (&lt;em&gt;Break duration&lt;/em&gt;) в каждом конкретном случае.&lt;/p&gt;

&lt;p&gt;Например, в моем случае для &lt;strong&gt;Micro Break&lt;/strong&gt; я установил продолжительность работы (&lt;em&gt;Time between breaks&lt;/em&gt;) в 19 минут, а продолжительность отдыха (&lt;em&gt;Break duration&lt;/em&gt;) - в 1 минута. В сумме получается - 60 минут.&lt;/p&gt;

&lt;p&gt;Для &lt;strong&gt;Rest Break&lt;/strong&gt; я установил (&lt;em&gt;Time between breaks&lt;/em&gt;) в 1 час. То есть, один &lt;strong&gt;Rest Break&lt;/strong&gt; состоит из трех &lt;strong&gt;Micro Break&lt;/strong&gt;. Продолжительность отдыха (&lt;em&gt;Break duration&lt;/em&gt;) для &lt;strong&gt;Rest Break&lt;/strong&gt; я установил в 10 минут. Другими словами - один час поработал, встал и отдохнул 10 минут.&lt;/p&gt;

&lt;p&gt;Продолжительность дневной работы &lt;strong&gt;Daily Limit&lt;/strong&gt; я установил в 6 часов с перерывом 20 минут. То есть - отработал 6 часов (или 6 &lt;strong&gt;Rest Breaks&lt;/strong&gt;) и отдыхаешь 20 минут. Название &lt;strong&gt;Daily Limit&lt;/strong&gt; (&lt;em&gt;Дневной лимит&lt;/em&gt;) конечно чисто условное - можно установить и 12-часовой режим работы ))&lt;/p&gt;

&lt;p&gt;Таймер &lt;strong&gt;Postpone time&lt;/strong&gt; служит для установки времени, на которое следует &lt;strong&gt;отложить прерыв&lt;/strong&gt;. Здесь нужно немного подробнее остановиться.&lt;/p&gt;

&lt;p&gt;Дело в том, что на каждом &lt;a href=&quot;https://goo.gl/8N25Dm&quot; title=&quot;Модальное окно&quot;&gt;модальном окне&lt;/a&gt; программы Workrave имеется кнопка &lt;strong&gt;Postpone&lt;/strong&gt; (&lt;em&gt;Отложить&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Смысл этой кнопки вот в чем - вам в голову пришла светлая идея и вы в азарте стучите по клавишам, чтобы материализовать ее; и тут бац - выскакивает надоедливое окно программы Workrave с предупреждением - “Бросай работать!”.&lt;/p&gt;

&lt;p&gt;И тут на помощь приходит кнопка &lt;strong&gt;Postpone&lt;/strong&gt; - вы нажимаете ее и Workrave соглашается на три минуты (&lt;em&gt;значение по умолчанию&lt;/em&gt;) заткнуться и не беспокоить вас, чтобы дать возможность закончить важный момент работы.&lt;/p&gt;

&lt;p&gt;Если вы не доверяете самому себе, то можно убрать кнопку &lt;strong&gt;Postpone&lt;/strong&gt; из модального окна Workrave. Для этого в разделе &lt;strong&gt;Options&lt;/strong&gt; нужно снять галочку &lt;strong&gt;Show ‘Postpone’ button&lt;/strong&gt;. И тогда вы не сможете обмануть программу Workrave, так как не сможете отсрочить очередной запанированный перерыв.&lt;/p&gt;

&lt;p&gt;Помимо кнопки &lt;strong&gt;Postpone&lt;/strong&gt;, в модальном окне Workrave имеется еще одна кнопка - &lt;strong&gt;Skip&lt;/strong&gt;. Смысл ее понятен без перевода - это когда время не терпит и плевать на все перерывы. При нажатии на нее пропускается конкретный текущий таймер (&lt;strong&gt;Micro Break&lt;/strong&gt; или &lt;strong&gt;Rest Break&lt;/strong&gt;) и тотчас запускается отсчет нового таймера.&lt;/p&gt;

&lt;p&gt;Если был пропущен &lt;strong&gt;Micro Break&lt;/strong&gt;, то начнется отсчет нового &lt;strong&gt;Micro Break&lt;/strong&gt;; если был пропущен &lt;strong&gt;Rest Break&lt;/strong&gt;, то начнется отсчет нового &lt;strong&gt;Rest Break&lt;/strong&gt; с входящими в его состав &lt;strong&gt;Micro Breaks&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Также есть возможность отключить кнопку &lt;strong&gt;Skip&lt;/strong&gt; в модальном окне Workrave. Это делается в разделе &lt;strong&gt;Options&lt;/strong&gt;, строка &lt;strong&gt;Show ‘Skip’ button&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Секция &lt;strong&gt;Break prompting&lt;/strong&gt; наименее важная и смысл ее существования сводится к одной вещи - предупреждать о готовящемся очередном перерыве (Prompt before breaking). Число попыток (Maximum number of prompts), которые программа Workrave сделает, чтобы выполнить перерыв, по умолчанию равно трем.&lt;/p&gt;

&lt;p&gt;На вкладке &lt;strong&gt;Rest Break&lt;/strong&gt; имеются две дополнительные строки. Первая строка &lt;strong&gt;Number of exercises&lt;/strong&gt; служит для установки количества упражнений. Что это такое - упражнения?&lt;/p&gt;

&lt;p&gt;Дело в том, что в программе Workrave имеются слайды с упражнениями-гимнастикой, служащей для снятия напряжения, разминки. Количество слайдов - это количество упражнений (от 1 до 10), которые программа Workrave будет предлагать вам сделать во время длительного перерыва (Rest Break).&lt;/p&gt;

&lt;p&gt;Вторая строка &lt;strong&gt;Start restbreak when screen is locked&lt;/strong&gt; - это предложить программе запускать длительный перерыв (Rest Break) когда подойдет его время даже тогда, когда экран монитора заблокирован.&lt;/p&gt;

&lt;p&gt;Мне данная настройка кажется немножко лукавой, ибо монитор в Linux блокируется, как правило, при неактивности системы в течение заданного промежутка времени; или когда хозяин вышел отдохнуть и заблокировал монитор от взглядов любопытных коллег. Другими словами - пользователь и так отдыхает от монитора.&lt;/p&gt;

&lt;p&gt;Вкладка &lt;strong&gt;Daily Limit&lt;/strong&gt; также практически ничем не отличается от предыдущих двух. За одним исключением - есть строка &lt;strong&gt;Regard micro-breaks as activity&lt;/strong&gt;. Она просто говорит о том, что &lt;strong&gt;Daily Limit&lt;/strong&gt; нужно запускать несмотря на то, что одновременно запущен краткий перерыв &lt;strong&gt;Micro Break&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;С самым большим и важным разделом &lt;strong&gt;Timers&lt;/strong&gt; разобрались. Пора переходить к остальным двум.&lt;/p&gt;

&lt;h3 id=&quot;workrave---user-interface&quot;&gt;Workrave - User interface&lt;/h3&gt;

&lt;p&gt;Раздел &lt;strong&gt;User interface&lt;/strong&gt; не столь важен для настройки программы Workrave. Первые две вкладки &lt;strong&gt;General&lt;/strong&gt; и &lt;strong&gt;Sounds&lt;/strong&gt; можно смело пропустить.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPD.&lt;/strong&gt; Хотя нет - на вкладке &lt;strong&gt;Sounds&lt;/strong&gt; можно поиграться с настройкой звуковых эффектов предупреждения появления окна, самого появления и закрытия окна. На мой вкус, установленные для этих событий звуки уж слишком похожи друг на друга. Трудно отличить на слух, открывается оно или закрывается. Но для этого нужно подбирать свои собственные звуковые файлы - а это время нужно.&lt;/p&gt;

&lt;p&gt;На третьей вкладке &lt;strong&gt;Status Window&lt;/strong&gt; убрать галочки в секции &lt;strong&gt;Display&lt;/strong&gt; - строки &lt;strong&gt;Show status window&lt;/strong&gt; и &lt;strong&gt;The status windows stays always on top of other windows&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/workrave-preferences-user_interface-status_window.png&quot; alt=&quot;User Interface Status Window&quot; title=&quot;User Interface Status Window&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На вкладке &lt;strong&gt;Applet&lt;/strong&gt; мне кажется весьма полезным убрать галочку &lt;strong&gt;Applet enabled&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/11/workrave-preferences-user_interface-applet.png&quot; alt=&quot;User Interface Applet&quot; title=&quot;User Interface Applet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Все эти действия позволят “запрятать” программу Workrave в фоновый режим и не мешать основной работе. Теперь напоминания о перерывах (&lt;strong&gt;Micro Rest&lt;/strong&gt;, &lt;strong&gt;Rest Break&lt;/strong&gt;, &lt;strong&gt;Daily Limit&lt;/strong&gt;) будут появляться только тогда, когда наступит их черед.&lt;/p&gt;

&lt;h3 id=&quot;workrave---network&quot;&gt;Workrave - Network&lt;/h3&gt;

&lt;p&gt;Раздел &lt;strong&gt;Network&lt;/strong&gt; для меня не представляет никакого интереса, поэтому я оставил его “как есть”. Но возможности данного раздела достаточно интересные.&lt;/p&gt;

&lt;p&gt;Как говорится в Википедии:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Workrave можно управлять по сети — например, чтобы контролировать отдых детей от компьютерных игр или получать сообщения о перерывах, пользуясь несколькими компьютерами.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;Вот и все, что мне кажется нужным сказать о программе Workrave.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/linux/workrave/&quot;&gt;Workrave - бережем зрение&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on November 01, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[SublimeLinter - обнаружение ошибок]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/sublime/text/sublime-linting/" />
  <id>http://zencoder.ru/sublime/text/sublime-linting</id>
  <published>2015-08-30T00:00:00+03:00</published>
  <updated>2015-08-30T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Термин &lt;em&gt;linting&lt;/em&gt; применяется для обозначения процесса обнаружения ошибок в исходных файлах программ, скриптов или документов. Программа такого рода должна иметься в инструментарии каждого разработчика, так как с помощью таких программ можно обнаруживать ошибки в процессе написания кода. Популярный редактор кода Sublime Text не имеет встроенных возможностей для обнаружения ошибок; однако такую ситуацию легко исправить.&lt;/p&gt;

&lt;p&gt;При помощи &lt;em&gt;linting&lt;/em&gt;‘а можно обнаруживать небольшие ошибки кода “на лету”, в процессе написания этого кода - например, пропущенную точку с запятой в JavaScript-коде. Возможность обнаружения ошибок в редакторе Sublime Text осуществляется с помощью плагина &lt;a href=&quot;http://www.sublimelinter.com/en/latest/about.html&quot; title=&quot;SublimeLinter&quot;&gt;SublimeLinter&lt;/a&gt;, который необходимо установить прежде всего.&lt;/p&gt;

&lt;p&gt;Если в какой-либо строке кода этот редактор обнаружит ошибку, то данная строка будет подсвечена в gutter редактора Sublime. Более того, если поместить курсор мыши в строку с ошибкой, то в &lt;em&gt;status bar&lt;/em&gt; редактора Sublime Text отобразится краткое описание ошибки, что поможет принять меры для ее правильного устранения.&lt;/p&gt;

&lt;p&gt;Ниже представлен наглядный пример подсветки ошибок в Sublime Text с помощью плагина SublimeLinter:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-fill.jpg&quot; alt=&quot;SublimeLinter&quot; title=&quot;SublimeLinter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Плагин &lt;a href=&quot;http://www.sublimelinter.com/en/latest/about.html&quot; title=&quot;SublimeLinter&quot;&gt;SublimeLinter&lt;/a&gt; сам по себе не выполняет процесса “отлавливания” ошибок в коде, так как является всего-лишь фреймворком, основой для других плагинов (linter), каждый из которых создан для обнаружения ошибок в каком-то определенном языке - JavaScript, PHP, Ruby, Python, HTML, CSS и так далее.&lt;/p&gt;

&lt;h2 id=&quot;sublimelinter--sublime-text&quot;&gt;SublimeLinter в Sublime Text&lt;/h2&gt;

&lt;p&gt;Как уже упоминалось ранее, плагин SublimeLinter является фреймворком, основой для более маленьких плагинов (linter), которые осуществляют непосредственный поиск синтаксических ошибок в программном коде.&lt;/p&gt;

&lt;p&gt;Поэтому первоначально необходимо установить этот фреймворк (как плагин) в редактор Sublime Text и самый простой способ это сделать - воспользоваться менеджером пакетов &lt;a href=&quot;https://packagecontrol.io/&quot; title=&quot;Package Control&quot;&gt;Package Control&lt;/a&gt;. Для этого нажимаем сочетание клавиш &lt;kbd&gt;Shift+Ctrl+P&lt;/kbd&gt; (Linux \ Windows) или &lt;kbd&gt;Shift+Cmd+P&lt;/kbd&gt; (Mac OSX). В поле поиска вводим название устанавливаемого пакета - &lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter&quot; title=&quot;SublimeLinter Package Control&quot;&gt;SublimeLinter&lt;/a&gt;. Далее - производим установку.&lt;/p&gt;

&lt;p&gt;Теперь необходимо определиться с тем, в каких языках программирования необходимо “отлавливать” ошибки. Другими словами, на каких языках программирования вы пишете и в каких из них вам необходима поддержка SublimeLinter.&lt;/p&gt;

&lt;p&gt;Допустим, это серверный язык PHP. Тогда для включения возможности обнаружения ошибок в Sublime Text необходимо установить плагин &lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-php&quot; title=&quot;Sublime​Linter-php&quot;&gt;Sublime​Linter-php&lt;/a&gt;, так же через менеджер пакетов &lt;a href=&quot;https://packagecontrol.io/&quot; title=&quot;Package Control&quot;&gt;Package Control&lt;/a&gt;. Стоит оговориться, что дополнительной зависимостью этого плагина является язык PHP, который предустановлен в операционных системах Linux\MacOSX, но который необходимо заранее установить отдельно в операционной системе Windows.&lt;/p&gt;

&lt;p&gt;Примером работы связки Sublime​Linter + Sublime​Linter-php в редакторе Sublime Text может послужить нижеследующее изображение:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-php-error.jpg&quot; alt=&quot;SublimeLinter PHP&quot; title=&quot;SublimeLinter PHP&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Рассмотрим другой случай, когда в редакторе Sublime Text используется язык программирования JavaScript. Тогда для возможности отлавливания ошибок в JS-коде необходимо установить плагин &lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-jshint&quot; title=&quot;Sublime​Linter-jshint&quot;&gt;Sublime​Linter-jshint&lt;/a&gt;. В этом случае вопрос зависимостей этого пакета выглядит несколько сложнее. Плагин Sublime​Linter-jshint основывает свою работу на &lt;a href=&quot;http://jshint.com/about/&quot; title=&quot;JSHint&quot;&gt;JSHint&lt;/a&gt;, который необходимо установить в виде пакета под &lt;a href=&quot;https://nodejs.org/&quot; title=&quot;Node.js&quot;&gt;Node.js&lt;/a&gt; и устанавливается с помощью менеджера пакетов &lt;abbr&gt;npm&lt;/abbr&gt;. Поэтому в операционной системе заранее должны быть установлены Node.js, &lt;abbr&gt;npm&lt;/abbr&gt; и JSHint.&lt;/p&gt;

&lt;p&gt;Примером работы плагина Sublime​Linter-jshint может послужить нижеследующее изображение:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-js-error.jpg&quot; alt=&quot;Sublime​Linter JSHint&quot; title=&quot;Sublime​Linter JSHint&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Рассмотрим еще один случай, когда в редакторе Sublime Text используется язык таблиц каскадных стилей CSS (куда же без него?). Тогда необходимо доустановить в Sublime Text плагин &lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-csslint&quot; title=&quot;Sublime​Linter-csslint&quot;&gt;Sublime​Linter-csslint&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Рассмотрение подобных плагинов (linter) можно продолжать еще долго. Поэтому ограничимся только тремя вышеприведенными. Стоит сказать, что для поиска какого-либо конкретного плагина (linter) удобно воспользоваться online-сервисом &lt;a href=&quot;https://packagecontrol.io/&quot; title=&quot;Package Control&quot;&gt;Package Control&lt;/a&gt;, в поисковой строке которого достаточно ввести начало названия искомого пакета, например, так - “SublimeLinter-“. Система автоматически выдаст список все плагинов под фреймворк SublimeLinter.&lt;/p&gt;

&lt;p&gt;Как нетрудно заметить, окончание (суффикс) в названии каждого из плагинов является подсказкой, для поддержки какого языка был создан этот плагин. Например, для языка Ruby существует плагин Sublime​Linter-ruby, для препроцессора Haml имеется плагин Sublime​Linter-haml.&lt;/p&gt;

&lt;p&gt;Также стоит сказать, что необходимо внимательно читать описание к каждому из тех плагинов, которые планируется установить, так как каждый из них имеет разные зависимости. Наглядный пример зависимостей у плагинов Sublime​Linter-php и Sublime​Linter-jshint был приведен выше.&lt;/p&gt;

&lt;h2 id=&quot;sublimelint&quot;&gt;Настройка SublimeLint&lt;/h2&gt;

&lt;p&gt;В плагине SublimeLint имеется большое количество настроек. Однако, с большинством из них не составит труда разобраться. Ниже приведено краткое описание некоторых из них.&lt;/p&gt;

&lt;h3 id=&quot;linting-modes&quot;&gt;Linting Modes&lt;/h3&gt;

&lt;p&gt;Эта настройка отвечает за поведение плагина SublimeLinter - когда плагин должен оповещать об обнаруженной ошибке в коде программы или документа.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Background&lt;/strong&gt; - это поведение по умолчанию плагина SublimeLinter. Сообщения об обнаруженных ошибках будут появляться по мере их обнаружения (другими словами - по мере написания строк кода) и будут обновляться каждый раз, когда будет производиться исправление обнаруженных ошибок. Такой режим может показаться излишне назойливым, так как иногда сообщение об ошибке может появиться прежде, чем будет дописана до конца инструкция, в которой вкралась ошибка.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Load\Save&lt;/strong&gt; - в этом случае сообщения об ошибках будут отображаться плагином только после сохранения или загрузки сохраненного документа.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Save Only&lt;/strong&gt; - сообщения об обнаруженных ошибках будут отображаться только при сохранении документа.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Manual&lt;/strong&gt; - ручной вызов проверки на ошибки, из командной панели редактора Sublime Text.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Лично я предпочитаю режим &lt;strong&gt;Load\Save&lt;/strong&gt;, так как в этом случае плагин SublimeLinter не мешает работать с кодом до тех пор, пора не будет выполнено сохранение этого кода в файле. Режим &lt;strong&gt;Background&lt;/strong&gt; может показаться излишне назойливым, так как сообщения об ошибках будут появляться постоянно, мешая работе.&lt;/p&gt;

&lt;p&gt;Для того, чтобы изменить поведение плагина SublimeLinter через настройку Linting Modes, необходимо зайти в командную панель редактора Sublime Text с помощью сочетания клавиш (&lt;kbd&gt;Shift+Ctrl+P&lt;/kbd&gt; или &lt;kbd&gt;Shift+Cmd+P&lt;/kbd&gt;) и ввести в строке поиска следующее:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sublimelinter lint mode&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;… откроется выпадающий список со всеми настройками плагина SublimeLinter, из которого необходимо выбрать &lt;strong&gt;SublimeLinter: Choose Lint Mode&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/choose-lint-mode.jpg&quot; alt=&quot;SublimeLinter Lint Mode&quot; title=&quot;SublimeLinter Lint Mode&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mark-style&quot;&gt;Mark Style&lt;/h3&gt;

&lt;p&gt;Настройка &lt;strong&gt;Mark Style&lt;/strong&gt; отвечает за внешний вид выделения ошибки в строке кода. Значением по умолчанию является &lt;strong&gt;outline&lt;/strong&gt;. Но можно выбрать любое другое значение из предустановленных настроек.&lt;/p&gt;

&lt;p&gt;В соответствии с &lt;a href=&quot;http://www.sublimelinter.com/en/latest/mark_styles.html&quot; title=&quot;SublimeLinter Mark Style&quot;&gt;официальной документацией&lt;/a&gt; SublimeLinter имеются несколько вариантов выделения ошибок в строке кода:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;fill&lt;/li&gt;
  &lt;li&gt;outline&lt;/li&gt;
  &lt;li&gt;solid underline&lt;/li&gt;
  &lt;li&gt;squiggly underline&lt;/li&gt;
  &lt;li&gt;stippled underline&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Аналогично с режимом &lt;strong&gt;Linting Modes&lt;/strong&gt;, режим &lt;strong&gt;Mark Style&lt;/strong&gt; настраивается через командную панель редактора Sublime Text - &lt;kbd&gt;Shift+Ctrl+P&lt;/kbd&gt; (Linux \ Windows) или &lt;kbd&gt;Shift+Cmd+P&lt;/kbd&gt; (Mac OSX). В выпадающм списке нужно выбрать строку &lt;strong&gt;Sublime Linter: Choose Mark Style&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ниже представлены скриншоты всех пяти режимов выделения ошибок в строке, чтобы можно было сравнить и выбрать наиболее подходящий вариант.&lt;/p&gt;

&lt;h4 id=&quot;fill&quot;&gt;Fill&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-mode-fill.jpg&quot; alt=&quot;Mark Style Fill&quot; title=&quot;Mark Style Fill&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;outline&quot;&gt;Outline&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-mode-outline.jpg&quot; alt=&quot;Mark Style Outline&quot; title=&quot;Mark Style Outline&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;solid-underline&quot;&gt;Solid Underline&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-mode-solid-underline.jpg&quot; alt=&quot;Mark Style Solid Underline&quot; title=&quot;Mark Style Solid Underline&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;squiggly-underline&quot;&gt;Squiggly Underline&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-mode-squiggly-outline.jpg&quot; alt=&quot;Mark Style Squiggly Underline&quot; title=&quot;Mark Style Squiggly Underline&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;stippled-underline&quot;&gt;Stippled Underline&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-mode-stippled-outline.jpg&quot; alt=&quot;Mark Style Stippled Underline&quot; title=&quot;Mark Style Stippled Underline&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;gutter-themes&quot;&gt;Gutter Themes&lt;/h3&gt;

&lt;p&gt;В дополнение к настройке выделения ошибок в строке кода, можно выполнить настройку иконок, который помещаются в области gutter редактора Sublime Text напротив строки с обнаруженной ошибкой. Такое выделение строки служит для большей информативности.&lt;/p&gt;

&lt;p&gt;В плагине SublimeLinter имеется &lt;a href=&quot;http://www.sublimelinter.com/en/latest/gutter_themes.html#standard-gutter-themes&quot; title=&quot;Standard gutter themes&quot;&gt;набор предустановленных иконок&lt;/a&gt;, наглядное изображение которых представлено ниже.&lt;/p&gt;

&lt;h4 id=&quot;blueberry--cross&quot;&gt;Blueberry – cross&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-gutter-blueberry-cross.jpg&quot; alt=&quot;SublimeLinter Gutter Blueberry Cross&quot; title=&quot;SublimeLinter Gutter Blueberry Cross&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;blueberry--round&quot;&gt;Blueberry – round&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-gutter-blueberry-round.jpg&quot; alt=&quot;SublimeLinter Gutter Blueberry Round&quot; title=&quot;SublimeLinter Gutter Blueberry Round&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;circle&quot;&gt;Circle&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-gutter-circle.jpg&quot; alt=&quot;SublimeLinter Gutter Blueberry Circle&quot; title=&quot;SublimeLinter Gutter Blueberry Circle&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;danish-royalty&quot;&gt;Danish Royalty&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-gutter-danish-royalty.jpg&quot; alt=&quot;SublimeLinter Gutter Danish Royalty&quot; title=&quot;SublimeLinter Gutter Danish Royalty&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;hands&quot;&gt;Hands&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-gutter-hands.jpg&quot; alt=&quot;SublimeLinter Gutter Hands&quot; title=&quot;SublimeLinter Gutter Hands&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;knob--simple&quot;&gt;Knob – simple&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-gutter-knob-simple.jpg&quot; alt=&quot;SublimeLinter Gutter Knob Simple&quot; title=&quot;SublimeLinter Gutter Knob Simple&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;knob--symbol&quot;&gt;Knob – symbol&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-gutter-knob-symbol.jpg&quot; alt=&quot;SublimeLinter Gutter Knob Symbol&quot; title=&quot;SublimeLinter Gutter Knob Symbol&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;koloria&quot;&gt;Koloria&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/linter-gutter-koloria.jpg&quot; alt=&quot;SublimeLinter Gutter Koloria&quot; title=&quot;SublimeLinter Gutter Koloria&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;projecticons&quot;&gt;ProjectIcons&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/images/linter-gutter-projecticons.jpg&quot; alt=&quot;SublimeLinter Gutter Project Icons&quot; title=&quot;SublimeLinter Gutter Project Icons&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Изменить настройки отображения иконок можно, зайдя в командную панель редактора Sublime Text и выбрав в выпадающем списке строку &lt;strong&gt;Sublime Linter: Choose Gutter Theme&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;Плагин SublimeLinter является очень мощным и гибким, а количество поддерживаемых им язык - очень большое. Вы можете посетить &lt;a href=&quot;https://packagecontrol.io/search/sublimelinter&quot; title=&quot;Package Control Sublime Linter List&quot;&gt;страницу поддерживаемых языков&lt;/a&gt;, чтобы убедиться в богатом выборе поддерживаемых языков программирования, разметки и многих других.&lt;/p&gt;

&lt;p&gt;Рассмотренные в этой статье возможности плагина SublimeLinter являются далеко не исчерпывающими. На &lt;a href=&quot;http://www.sublimelinter.com/en/latest/about.html&quot; title=&quot;SublimeLinter&quot;&gt;официальной странице документации&lt;/a&gt; вы всегда найдете для себя что-то новое. Для этого нужно только периодически просматривать эту документацию.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/sublime/text/sublime-linting/&quot;&gt;SublimeLinter - обнаружение ошибок&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on August 30, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Создание диаграмм с помощью Chart.js]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/javascript/chartjs/" />
  <id>http://zencoder.ru/javascript/chartjs</id>
  <published>2015-08-13T00:00:00+03:00</published>
  <updated>2015-08-13T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;“Контент - это король”. Все мы слышали или читали эту фразу, в которой выражена важность качественного содержания ресурса для повышения конверсии сайта, как следствие хорошей поисковой оптимизации. Однако, в то время как качественное текстовое наполнение прекрасно работает для поисковых машин, часто бывает так, что посетителям сайта гораздо проще понять основную информацию сайта, глядя на изображение или диаграмму.&lt;/p&gt;

&lt;p&gt;Например, если конкретный сайт специализируется на освещении вопросов каких-либо исследований, описание самих исследований конечно же является важной информацией; но диаграмма, в которой обобщаются данные исследования, будет не менее полезной для посетителей данного сайта.&lt;/p&gt;

&lt;p&gt;В этой статье будет идти речь о JavaScript-библиотеке под названием Chart.js, которая использует HTML-элемент &lt;code&gt;canvas&lt;/code&gt; для создания диаграмм на странице. После краткого обзора библиотеки в статье будут представлены два примера использования Chart.js.&lt;/p&gt;

&lt;h2 id=&quot;chartjs&quot;&gt;Что такое Chart.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chartjs.org/&quot; title=&quot;Chart.js&quot;&gt;Chart.js&lt;/a&gt; является JavaScript-библиотекой, с помощью которой можно создавать на странице различные типы диаграмм; при этом используются возможности HTML5-элемента &lt;code&gt;canvas&lt;/code&gt;. Если речь зашла об элементе &lt;code&gt;canvas&lt;/code&gt;, то это означает, что необходимо использовать &lt;code&gt;polyfill&lt;/code&gt; для обеспечения поддержки этого элемента в старых версиях браузеров. В качестве примера одного из таких &lt;code&gt;polyfill&lt;/code&gt; можно привести &lt;a href=&quot;https://github.com/arv/explorercanvas&quot; title=&quot;ExplorerCanvas&quot;&gt;ExplorerCanvas&lt;/a&gt;, находящийся по указанной ссылке.&lt;/p&gt;

&lt;p&gt;Библиотека Chart.js не имеет каких-либо зависимостей; размер ее так мал, что составляет примерно 11Kb в минифицированном, конкатенированном и архивированном виде. Однако, есть возможность еще уменьшить размер библиотеки путем включения в нее только тех модулей, которые необходимы в конкретном случае; то есть, если нет необходимости в поддержке всех шести типов диаграмм, включенных по умолчанию в ядро Chart.js.&lt;/p&gt;

&lt;p&gt;К примеру, если на конкретной странице нужно создать только диаграмму линейного типа (bar chart), то можно подключить лишь ядро библиотеки Chart.js и модуль, с помощью которого создаются диаграммы подобного типа; таким образом, будет уменьшен общий размер библиотеки Chart.js и увеличена скорость загрузки сайта в целом.&lt;/p&gt;

&lt;p&gt;Другой замечательной особенностью библиотеки Chart.js является тот факт, что создаваемые ею диаграммы адаптивные; то есть, они могут изменять свой размер при изменения размеров окна браузера таким образом, чтобы эффективно занимать все доступное для этого пространство страницы.&lt;/p&gt;

&lt;p&gt;И наконец, в отличие от многих других библиотек подобного рода, которые можно найти на просторах Интернет, Chart.js имеет &lt;a href=&quot;http://www.chartjs.org/docs/&quot; title=&quot;Chart.js Documentation&quot;&gt;подробную и хорошо изложенную документацию&lt;/a&gt;, с помощью которой можно легко создавать как простые, так и сложные образцы диаграмм.&lt;/p&gt;

&lt;p&gt;В следующем разделе статьи будет рассмотрен процесс получения и подключения библиотеки Chart.js в текущий проект.&lt;/p&gt;

&lt;h2 id=&quot;chartjs-1&quot;&gt;Начало работы с Chart.js&lt;/h2&gt;

&lt;p&gt;Перед использованием библиотеки Chart.js ее необходимо скачать и подключить к странице, на которой планируется создать одну или несколько диаграмм. Существует два способа получить библиотеку Chart.js. Первый способ заключается в использовании &lt;a href=&quot;https://github.com/nnnick/Chart.js&quot; title=&quot;Chart.js GitHub&quot;&gt;GitHub репозитория&lt;/a&gt;. Второй способ - это воспользоваться менеджером Bower при помощи команды такого вида:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bower install chartjs --save&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Будучи скачанной, библиотека подключается на страницу как обычный JavaScript-файл. В приведенном ниже примере производится подключение Chart.js со всеми ее модулями по-умолчанию:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;path/to/Chart.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В приведенном примере обратите внимание на заглавную букву в имени подключаемой библиотеки Chart.js. Это не совсем обычный способ, когда имя подключаемой библиотеки начинается с заглавной буквы. Поэтому, если после подключения Chart.js на странице отображается 404-я ошибка, то знайте, в чем заключается данная ошибка.&lt;/p&gt;

&lt;p&gt;После подключения библиотека Chart.js предоставляет все встроенные в нее методы через глобальную переменную с именем Chart. Теперь все готово для того, чтобы создать нашу первую диаграмму.&lt;/p&gt;

&lt;p&gt;Для этого необходимо инициализировать новый Chart-объект путем передачи ему 2d-контекста элемента &lt;code&gt;canvas&lt;/code&gt;, который будет использоваться для создания в нем диаграммы. Чтобы понять основную идею этого шага, представим себе, что на странице имеется следующий элемент:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;skills&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Если нужно в этом элементе нарисовать круговую диаграмму (pie chart), то пишется следующее выражение:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;skills&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;skillsChart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Pie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;где аргумент &lt;code&gt;data&lt;/code&gt;, не представленный в данном примере, является переменной, в которой содержатся данные для отображения в диаграмме.&lt;/p&gt;

&lt;p&gt;Теперь, когда нам известны основные принципы подключения Chart.js, пора переходить к конкретным примерам. Для краткости изложения материала я буду использовать в нижеследующих примерах полную версию библиотеки Chart.js; но при желании читатель может найти все необходимые модули по отдельности, в директории “src”.&lt;/p&gt;

&lt;p&gt;Примечание переводчика: автор статьи немногословен; в данном случае требуется некоторая расшифровка вышесказанного; примерный вид подключения ядра библиотеки Chart.js и необходимого модуля выглядит таким образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;../src/Chart.Core.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;../src/Chart.Doughnut.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;Создание круговой диаграммы&lt;/h2&gt;

&lt;p&gt;В этом разделе статьи будет показан пример создания круговой диаграммы, в которой представлены профессиональные навыки гипотетического web-разработчика (в эту диаграмму будет включен язык Java, поэтому этим гипотетическим разработчиком я не могу быть ни в коей мере).&lt;/p&gt;

&lt;p&gt;Как уже можно было догадаться, первым шагом будет создание нового элемента &lt;code&gt;canvas&lt;/code&gt;, в котором и будет прорисовываться круговая диаграмма:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;skills&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;300&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;300&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Теперь необходимо воспользоваться данными, которые будут отображаться в диаграмме. В реальной жизни такие данные получаются с сервера каким-либо образом; в нашем же случае будет использоваться статический вариант, без использования сервера. Для круговой диаграммы необходимо получить массив объектов, каждый из которых обладает несколькими свойствами.&lt;/p&gt;

&lt;p&gt;Однако, для простоты и легкости понимания эти объекты будут обладать минимумом свойств - значение, которое будет отображено в диаграмме; цвет сектора на круговой диаграмме; надпись для сектора:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pieData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Java&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#811bd6&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Scala&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#9cbaba&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;HTML&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#6ae128&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В завершение, как было показано в предыдущем разделе статьи, необходимо получить 2d-контекст конкретного canvas-элемента и инициализировать новый Chart-объект:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;skills&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;skillsChart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Pie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pieData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ниже показан примерный результат того, что можно получить с помощью библиотеки Chart.js:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/pie-chartjs.png&quot; alt=&quot;Pie Chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Результатом приведенного выше кода будет круговая диаграмма (pie chart), код которого можно увидеть на странице примера - &lt;a href=&quot;http://jsfiddle.net/fq6hy784/&quot; title=&quot;Pie Chart JSFiddle&quot;&gt;Pie Chart JSFiddle&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;Создание столбцовой диаграммы&lt;/h2&gt;

&lt;p&gt;В следующем примере будет создана столбцовая (bar chart) диаграмма, на которой будет отображена динамика изменения количества клиентов гипотетической компании в зависимости от их национальности, за 2010 год и за 2014 год. Также, как и в предыдущем примере, для этой цели будет использоваться элемент &lt;code&gt;canvas&lt;/code&gt;, размещенный на странице в виде такого примера:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clients&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;400&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Затем создаем данные для нашей вымышленной компании:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;barData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Italy&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;USA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Germany&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;France&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Japan&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;2010 customers #&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;fillColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#382765&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1902&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1041&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;610&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1245&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;952&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;2014 customers #&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;fillColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#7bc225&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3104&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1689&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1318&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;589&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1199&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1436&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Как видно из примера, для создаваемой столбцовой диаграммы необходимо представить объект, содержащий свойство с именем &lt;code&gt;labels&lt;/code&gt;, внутри которого размещены предметы сравнения - то, что будет сравниваться между собой. В нашем случае этими предметами являются названия стран: Italy, UK, USA, Germany, France, Japan.&lt;/p&gt;

&lt;p&gt;В дополнение к этому, нам необходимо предоставить еще одно свойство, по имени &lt;code&gt;datasets&lt;/code&gt;, в котором размещены наборы объектов, каждый из которых содержит данные для сравнения. В нашем случае будет производиться сравнение между 2010 и 2014 годом, поэтому нам потребуется только два объекта.&lt;/p&gt;

&lt;p&gt;Внутри каждого из этих объектов необходимо задать &lt;code&gt;label&lt;/code&gt; для визуальной подсказки на диаграмме, значение для каждого из объектов; а также цвет заливки для каждого из участков диаграммы.&lt;/p&gt;

&lt;p&gt;В результате, код для создания столбцовой диаграммы (bar chart) должен быть таким:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;clients&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientsChart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;barData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ниже показан примерный результат того, что можно получить с помощью библиотеки Chart.js:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/08/bar-chartjs.png&quot; alt=&quot;Bar Chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Результатом созданного нами выше кода будет столбцовая диаграмма (bar chart), исходный код которого можно посмотреть по этой ссылке - &lt;a href=&quot;http://jsfiddle.net/6bjy9nxh/&quot; title=&quot;Bar Chart JSFiddle&quot;&gt;Bar Chart JSFiddle&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;В этой статье вы познакомились с Chart.js, JavaScript-библиотекой для быстрого и удобного создания красивых диаграмм. Как вы могли заметить, использование библиотеки не представляет каких-либо трудностей; мною были продемонстрированы примеры ее использования.&lt;/p&gt;

&lt;p&gt;Библиотека Chart.js также предоставляет несколько дополнительных возможностей, о которых я не упомянул в этой статье. Но вы можете легко восполнить свой пробел в этих знаниях и почитать &lt;a href=&quot;http://www.chartjs.org/docs/&quot; title=&quot;Chart.js Documentation&quot;&gt;официальную документацию&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Знакомы ли были вы с этой библиотекой ранее и использовали ли ее в своей практике? Как часто и в каких проектах вы ее использовали? Если нет, то какую другую библиотеку подобного типа вы использовали?&lt;/p&gt;

&lt;p&gt;Оригинал статьи размещен здесь - &lt;a href=&quot;http://www.sitepoint.com/creating-beautiful-charts-chart-js/&quot; title=&quot;Creating Beautiful Charts with Chart.js&quot;&gt;Creating Beautiful Charts with Chart.js&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/javascript/chartjs/&quot;&gt;Создание диаграмм с помощью Chart.js&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on August 13, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Adobe Extract - замена Project Parfait]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/css/adobe-extract/" />
  <id>http://zencoder.ru/css/adobe-extract</id>
  <published>2015-08-03T00:00:00+03:00</published>
  <updated>2015-08-03T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;В июне 2014 года была написана &lt;a href=&quot;http://webdesign.tutsplus.com/articles/quick-tip-converting-photoshop-files-to-code-with-project-parfait--cms-21179&quot; title=&quot;Converting Photoshop Files to Code With Project Parfait&quot;&gt;статья&lt;/a&gt;, посвященная прекрасному инструменту для извлечения кода из PSD-макета - проекту компании Adobe под названием Project Parfait. Это был бесплатный online-инструмент, цель которого состояла в создании процесса преобразования PSD-макетов в код для команд разработчиков, использующих Photoshop как основной инструмент  при создании различных дизайнов.&lt;/p&gt;

&lt;p&gt;Компания Adobe произвела реинкарнацию проекта Project Parfait, добавив в него поддержку бесплатного дискового пространства и сервиса обмена &lt;a href=&quot;https://creative.adobe.com/products/assets&quot; title=&quot;Creative Cloud Assets&quot;&gt;Creative Cloud Assets&lt;/a&gt;, а также переименовав его в &lt;strong&gt;Extract&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/extractoverview.png&quot; alt=&quot;Adobe Extract&quot; title=&quot;Adobe Extract&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Проект Extract сохранил всю существующую функциональность Project Parfait, а интеграция с CC Files наряду с новой возможностью обмена файлами позволила улучшить и ускорить взаимодействие между веб-дизайнерами и веб-разработчиками.&lt;/p&gt;

&lt;p&gt;Ниже представлен пример работы в Extract.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Загрузка или синхронизация файлов&lt;/h2&gt;

&lt;p&gt;Использование Extract начинается с загрузки или синхронизации PSD-файлов в личном дисковом online-пространстве Creative Cloud, размер которого составляет как минимум 2GB и бесплатно предоставляется любому пользователю, зарегистрированному в Creative Cloud.&lt;/p&gt;

&lt;p&gt;Загрузить файлы на сервер можно двумя способами. Первый способ заключается в использовании &lt;a href=&quot;http://www.adobe.com/ru/creativecloud.html&quot; title=&quot;Adobe Creative Cloud&quot;&gt;web-интерфейса&lt;/a&gt;, доступного через любой web-браузер. Второй способ основан на использовании специального &lt;a href=&quot;https://helpx.adobe.com/ru/creative-cloud/help/creative-cloud-desktop.html&quot; title=&quot;Creative Cloud Desktop&quot;&gt;desktop-приложения&lt;/a&gt;, с помощью которого можно автоматически синхронизировать файлы на локальном компьютере с файлами в облачном сервисе Creative Cloud:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/ccfiles.png&quot; alt=&quot;Creative Cloud&quot; title=&quot;Creative Cloud&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Второй способ является наиболее простым и надежным, поэтому в дальнейших шагах этой статьи будет использоваться именно этот способ.&lt;/p&gt;

&lt;p&gt;Первым делом, необходимо &lt;a href=&quot;https://helpx.adobe.com/ru/creative-cloud/help/creative-cloud-desktop.html&quot; title=&quot;Creative Cloud Desktop&quot;&gt;скачать приложение&lt;/a&gt; и установить его в системе, а затем авторизоваться в нем с помощью личного Adobe ID. Открыв приложение, необходимо в нем перейти на вкладку &lt;strong&gt;Assets&lt;/strong&gt;, а внутри этой вкладки перейти в еще одну вкладку &lt;strong&gt;Files&lt;/strong&gt;. Должно получиться примерно следующее:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/ccapp.png&quot; alt=&quot;Creative Cloud Application&quot; title=&quot;Creative Cloud Application&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В этом окне опускаемся вниз и нажимаем кнопку &lt;strong&gt;Open Folder&lt;/strong&gt;, что приведет к автоматическому открытию папки &lt;strong&gt;Creative Cloud Files&lt;/strong&gt; на локальном компьютере. Находясь внутри этой папки, необходимо скопировать PSD-файл из другого источника сюда, что автоматически запустит синхронизацию с облачным пространством Creative Cloud.&lt;/p&gt;

&lt;p&gt;Когда операция загрузки на сервер Creative Cloud будет успешно завершена, на миниатюре PSD-файла появиться маленькая зеленая галочка, как в данном случае:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/ccfinder.png&quot; alt=&quot;Creative Cloud Upload&quot; title=&quot;Creative Cloud Upload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Если теперь снова вернуться назад, в web-интерфейс Creative Cloud, то обнаружим там миниатюру только что загруженного PSD-файла, готового для открытия в Extract:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/clickthumbnail.png&quot; alt=&quot;Creative Cloud Thumbnail&quot; title=&quot;Creative Cloud Thumbnail&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;extract&quot;&gt;Работа в Extract&lt;/h2&gt;

&lt;p&gt;Для того, чтобы открыть загруженный в Creative Cloud файл Photoshop, нужно щелкнуть мышью по миниатюре этого файла, затем снова щелкнуть мышью на этот раз по вкладке &lt;strong&gt;Extract&lt;/strong&gt; (на изображении ниже она помечена как &lt;strong&gt;Preview&lt;/strong&gt;). PSD-файл тотчас же отобразится в окне приложения Extract, готовый для извлечения из него CSS-кода:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/extracttab.png&quot; alt=&quot;Extract Tab&quot; title=&quot;Extract Tab&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Процесс извлечения кода из PSD-файла в Extract остался неизменным, каким он был в приложении Project Parfait, о чем было подробно описано в предыдущей статье “Конвертирование файлов Photoshop с помощью Project Parfait”. Однако, с того момента в Extract были добавлены несколько новых возможностей, которые будут рассмотрены ниже.&lt;/p&gt;

&lt;h2 id=&quot;extract-1&quot;&gt;Новые возможности Extract&lt;/h2&gt;

&lt;p&gt;Некоторые из новых возможностей приложения Extract были унаследованы им от Project Parfait спустя некоторое время после опубликования ранее упоминавшейся статьи-обзора “Конвертирование файлов Photoshop с помощью Project Parfait”. Другие же новшества появились в Extract благодаря его интеграции с сервисом Creative Cloud.&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Прозрачность тени&lt;/h3&gt;

&lt;p&gt;Ранее тени на CSS генерировались без поддержки прозрачности, значениями в формате HEX. Теперь имеется поддержка прозрачности теней в сгенерированном CSS-коде, значениями в формате RGBA:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/rgbashadow.png&quot; alt=&quot;Прозрачность тени&quot; title=&quot;Прозрачность тени&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Настройки шрифта&lt;/h3&gt;

&lt;p&gt;Теперь нет необходимости работать только с пикселями (px) в качестве размера шрифтов в сгенерированном CSS-коде. В Extract добавлена поддержка единиц измерения &lt;code&gt;em&lt;/code&gt; и &lt;code&gt;rem&lt;/code&gt; для шрифтов:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/preferredfontunit.png&quot; alt=&quot;Единицы измерения шрифта&quot; title=&quot;Единицы измерения шрифта&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Также добавлена возможность установки базового шрифта для всей страницы в целом. Размеры шрифтов всех остальных элементов страницы будут расчитываться на основе этого базового размера, в тех единицах измерения (&lt;code&gt;em&lt;/code&gt; или &lt;code&gt;rem&lt;/code&gt;), которые были выбраны ранее:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/basefontsize.png&quot; alt=&quot;Базовый размер шрифта&quot; title=&quot;Базовый размер шрифта&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;Препроцессоры и миксины&lt;/h3&gt;

&lt;p&gt;В Extract была добавлена поддержка препроцессоров &lt;a href=&quot;http://sass-lang.com/&quot; title=&quot;Sass&quot;&gt;Sass(SCSS)&lt;/a&gt; и &lt;a href=&quot;http://lesscss.org/&quot; title=&quot;LESS&quot;&gt;LESS&lt;/a&gt; совместно с библиотеками миксинов для этих препроцессоров. Таким образом, теперь можно выбрать - генерировать код не в чистом CSS, а в &lt;a href=&quot;http://sass-lang.com/&quot; title=&quot;Sass&quot;&gt;SCSS&lt;/a&gt; + &lt;a href=&quot;http://bourbon.io/&quot; title=&quot;Bourbon&quot;&gt;Bourbon&lt;/a&gt; или &lt;a href=&quot;http://lesscss.org/&quot; title=&quot;LESS&quot;&gt;LESS&lt;/a&gt; + &lt;a href=&quot;http://lesshat.madebysource.com/&quot; title=&quot;LESSHat&quot;&gt;LESSHat&lt;/a&gt;. Такая возможность дает большие преимущества для тех веб-разработчиков, которые используют какой-либо из этих препроцессоров:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/preprocessors.png&quot; alt=&quot;Поддержка препроцессоров&quot; title=&quot;Поддержка препроцессоров&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Я надеюсь, что в дальнейшем в Extract будет добавлена поддержка препроцессора &lt;a href=&quot;http://learnboost.github.io/stylus/&quot; title=&quot;Stylus&quot;&gt;Stylus&lt;/a&gt; (поклонником которого являюсь), совместно с библиотеками миксинов под этот препроцессор - &lt;a href=&quot;http://visionmedia.github.io/nib/&quot; title=&quot;Nib&quot;&gt;Nib&lt;/a&gt; и &lt;a href=&quot;http://kouto-swiss.io/&quot; title=&quot;Kuoto Swiss&quot;&gt;Kuoto Swiss&lt;/a&gt;. Этого было бы более чем достаточно в плане поддержки препроцессоров в Extract.&lt;/p&gt;

&lt;p&gt;Примечание переводчика: на момент перевода данной статьи в Extract добавлена поддержка препроцессора &lt;a href=&quot;http://learnboost.github.io/stylus/&quot; title=&quot;Stylus&quot;&gt;Stylus&lt;/a&gt; и его библиотеки миксинов &lt;a href=&quot;http://visionmedia.github.io/nib/&quot; title=&quot;Nib&quot;&gt;Nib&lt;/a&gt;; поддержка библиотеки &lt;a href=&quot;http://kouto-swiss.io/&quot; title=&quot;Kuoto Swiss&quot;&gt;Kuoto Swiss&lt;/a&gt; отсутствует; помимо этого, добавлена поддержка супер-популярной библиотеки &lt;a href=&quot;http://compass-style.org/&quot; title=&quot;Compass&quot;&gt;Compass&lt;/a&gt; под препроцессор &lt;a href=&quot;http://sass-lang.com/&quot; title=&quot;Sass&quot;&gt;Sass&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;Действия&lt;/h3&gt;

&lt;p&gt;В результате интеграции сервиса Creative Cloud в Extract добавилось новое меню &lt;strong&gt;Actions&lt;/strong&gt;, в котором можно выбрать действия над редактируемым PSD-файлом: скачать файл, переименовать файл, архивировать файл или переместить файл:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/actions.png&quot; alt=&quot;Действия с файлом&quot; title=&quot;Действия с файлом&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;Общий доступ&lt;/h3&gt;

&lt;p&gt;Также благодаря интеграции Creative Cloud в Extract появилась возможность предоставления общего доступа к файлам с помощью меню &lt;strong&gt;Share&lt;/strong&gt;, откуда можно выложить выполненную работу прямо в своем портфолио на &lt;a href=&quot;https://www.behance.net/&quot; title=&quot;Behance&quot;&gt;Behance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Наиболее привлекательной возможностью меню &lt;strong&gt;Share&lt;/strong&gt; является его опция &lt;strong&gt;Send Link&lt;/strong&gt;. С помощью которой можно отправить ссылку на файл-наработку веб-разработчику. При переходе по этой ссылке файл автоматически загрузиться и откроется для редактирования в Extract, у этого веб-разработчика.&lt;/p&gt;

&lt;p&gt;Веб-разработчику даже нет необходимости иметь учетную запись в Creative Cloud для того, чтобы пользоваться инструментом Extract. Это означает, что любой из членов команды разработчиков, который специализируется на создании кода, теперь совсем не обязан иметь дело с такими программами для рисования графики, как Photoshop:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/07/sharing.png&quot; alt=&quot;Общий доступ&quot; title=&quot;Общий доступ&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;timeline&quot;&gt;Timeline&lt;/h3&gt;

&lt;p&gt;Приложение Extract абсолютно бесплатно для использования. Проект Project Parfait все еще остается доступным вплоть до октября 2014 года, с целью предоставить достаточно времени всем разработчикам, использующим его, чтобы своевременно перейти на проект Extract.&lt;/p&gt;

&lt;p&gt;У вас нет никакой необходимости быть платным подписчиком, чтобы иметь возможность использовать приложение Extract; поэтому, даже если вы являетесь платным подписчиком программы Photoshop, вы можете свободно отправлять свои дизайнерские наработки другим веб-разработчикам для кодинга. С другой стороны, веб-разработчик, который получил от вас ссылку на вашу наработку, совсем необязательно должен быть платным подписчиком, чтобы открыть эту ссылку. И даже больше - этот разработчик может вообще не иметь учетной записи в Creative Cloud, чтобы пользоваться приложением Extract.&lt;/p&gt;

&lt;p&gt;Я приглашаю всех читателей этой статьи воспользоваться сервисом Adobe Extract и высказать свои пожелания по поводу использования этого ресурса.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/css/adobe-extract/&quot;&gt;Adobe Extract - замена Project Parfait&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on August 03, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Project Parfait - CSS-код из PSD-макета]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/css/project-parfait/" />
  <id>http://zencoder.ru/css/project-parfait</id>
  <published>2015-08-02T00:00:00+03:00</published>
  <updated>2015-08-02T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Вступление переводчика: приложения Project Parfait на момент перевода данной статьи уже не существует. Продолжателем и правоприемником этого проекта является приложение  &lt;a href=&quot;https://www.adobe.com/ru/creativecloud/extract.html&quot; title=&quot;Creative Cloud Extract&quot;&gt;Adobe Extract&lt;/a&gt;. Зачем же была переведена данная статья? Все просто - здесь подробно описан процесс извлечения CSS-кода, текста и изображений точно так, как это обстоит в приложении Extract. Другими словами, читая данную статью о Project Parfait, вы учитесь работать в Extract.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://projectparfait.adobe.com/&quot; title=&quot;Project Parfait&quot;&gt;Project Parfait&lt;/a&gt; - это новый продукт компании Adobe, на данный момент имеющий версию beta. С помощью него можно открыть в браузере любой файл формата PSD для того, чтобы извлечь из него такие составляющие, как текст, изображения или наборы CSS-правил. На момент написания статьи Project Parfait работает только в браузере Chrome, но компания Adobe планирует расширить его кросс-браузерную совместимость со всеми остальными браузерами по мере продвижения разработки Project Parfait.&lt;/p&gt;

&lt;h2 id=&quot;psd--project-parfait&quot;&gt;Загрузка PSD в Project Parfait&lt;/h2&gt;

&lt;p&gt;Задача открыть PSD файл в Project Parfait чрезвычайно проста. Для этого достаточно перейти по ссылке &lt;a href=&quot;https://projectparfait.adobe.com/&quot; title=&quot;Project Parfait&quot;&gt;“https://projectparfait.adobe.com/”&lt;/a&gt; и кликнуть мышью на большой синей кнопке &lt;strong&gt;Upload Your Own PSD&lt;/strong&gt;, которая размещается в правом верхнем углу страницы:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/upload.png&quot; alt=&quot;Загрузка PSD в Project Parfait&quot; title=&quot;Загрузка PSD в Project Parfait&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Затем нужно войти под своей учетной записью Adobe ID и перетащить (drag’n’drop) PSD-файл на пустую панель, после чего загрузка файла начнется автоматически:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/dragdrop.png&quot; alt=&quot;Drag and Drop PSD&quot; title=&quot;Drag and Drop PSD&quot; /&gt;&lt;/p&gt;

&lt;p&gt;После того, как загрузка PSD-файла на сервер будет закончена, достаточно кликнуть мышью на миниатюре загруженного файла для того, чтобы он открылся в Project Parfait:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/psdopen.png&quot; alt=&quot;Открытие файла в Project Parfait&quot; title=&quot;Открытие файла в Project Parfait&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;css-&quot;&gt;Извлечение CSS правил&lt;/h2&gt;

&lt;p&gt;Для того, чтобы сгенерировать набор CSS-правил, определяющих любой элемент дизайна страницы, достаточно выбрать этот элемент щелчком мыши. Соответствующий CSS-код автоматически отобразится в правой боковой панели, в поле &lt;strong&gt;CSS Inspector&lt;/strong&gt;. Из этой панели можно скопировать часть сгенерированного кода; или же весь код целиком, нажав кнопку &lt;strong&gt;Copy All&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/cssinspector.png&quot; alt=&quot;CSS Inspector&quot; title=&quot;CSS Inspector&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Другим способом получения сгенерированного CSS-кода является следующий. Когда любой из элементов дизайна выбран щелчком мыши, у этого элемента появляется синее всплывающее окно, в котором имеется ссылка &lt;strong&gt;Copy CSS&lt;/strong&gt;, с помощью которой можно получить весь CSS-код этого элемента:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/copycss.png&quot; alt=&quot;Копирование CSS кода&quot; title=&quot;Копирование CSS кода&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Извлечение текста&lt;/h2&gt;

&lt;p&gt;Синее всплывающее окно, о котором говорилось выше, может послужить еще одной задаче - извлечения текста из PSD-макета. Для этого нужно воспользоваться ссылкой &lt;strong&gt;Copy Text&lt;/strong&gt; внутри этого окна:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/copytext.png&quot; alt=&quot;Копирование текста&quot; title=&quot;Копирование текста&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;Извлечение изображений&lt;/h2&gt;

&lt;p&gt;Извлечение картинок из PSD-макета с помощью Project Parfait также очень просто. Для начала нужно выбрать на макете изображение, которое будет экспортировано. Если изображение состоит из нескольких слоев, то необходимо нажать и удерживать клавишу &lt;strong&gt;Shift&lt;/strong&gt; для того, чтобы выбрать все нужные слои. Затем щелчком мыши активируем большую подчеркнутую стрелочку в всплывающем окне. Отобразится диалоговое окно &lt;strong&gt;Save As&lt;/strong&gt;, в котором можно задать имя для экспортируемого изображения, формат файла и качество изображения:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/saveas.png&quot; alt=&quot;Экспортирование изображения&quot; title=&quot;Экспортирование изображения&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Как только изображение будет экспортировано, оно отобразится во вкладке &lt;strong&gt;Assets&lt;/strong&gt; правой панели инструментов, откуда его можно будет скачать на локальный компьютер простым щелчком мыши на этом изображении:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/assets.png&quot; alt=&quot;Изображение во вкладке Assets&quot; title=&quot;Изображение во вкладке Assets&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;project-parfait&quot;&gt;Недоработки Project Parfait&lt;/h2&gt;

&lt;p&gt;Проект Project Parfait совсем свежий - на момент написания статьи ему исполнился только месяц, поэтому в вопросе генерации CSS правил существуют некоторые недоработки и ряд CSS-свойств, которые этот продукт не может сгенерировать. Однако, число сторонников проекта Project Parfait на его &lt;a href=&quot;https://forums.adobe.com/community/project_parfait&quot; title=&quot;Project Parfait Forum&quot;&gt;форуме&lt;/a&gt; растет; как растет и колличество обновлений для этого продукта. Поэтому я уверен, что команда Adobe активно работает в этом направлении и в скором времени стоит ожидать значительных улучшений Project Parfait.&lt;/p&gt;

&lt;p&gt;Ниже представлен список недоработок Project Parfait.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;значения прозрачности, которые задаются для всего слоя в целом, как правило устанавливаются с помощью соответствующего значения фонового цвета слоя, в RGBA формате; альфа-канал фонового цвета используется для задания прозрачности; при экспортировании всего элемента целиком, вместе с границами, тенями и так далее, это значение прозрачности будет применено к ним вместо того отдельного значения, которое было установлено в макете для каждой из составляющих данного элемента&lt;/li&gt;
  &lt;li&gt;невозможно определить наличие множественных теней у элемента макета; если выбран элемент, у которого есть внешние и внутренние тени одновременно, то в Project Parfait они будут проигнорированы&lt;/li&gt;
  &lt;li&gt;не поддерживается прозрачность теней для элемента дизайна; вместо значений в RGBA формате Project Parfait выдает тень с непрозрачными цветами в HEX-формате&lt;/li&gt;
  &lt;li&gt;нет никакого способа извлечь изображение в качестве pattern’а, которое является фоновым изображением для макета; нет даже возможности определить границы этого pattern’а, чтобы экспортировать его как простое изображение&lt;/li&gt;
  &lt;li&gt;границы, размещенные внутри слоя, не определяются Project Parfait; однако, границы, заданные через &lt;strong&gt;Live Shape Properties&lt;/strong&gt;, могут быть легко экспортированы&lt;/li&gt;
  &lt;li&gt;градиенты, сгенерированные не через CSS-свойство &lt;code&gt;background-color&lt;/code&gt;, необходимо дополнять fallback’ом для браузеров, которые не поддерживают CSS-градиенты&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;project-parfait-1&quot;&gt;Что сейчас доступно в Project Parfait&lt;/h2&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Работа с текстом&lt;/h3&gt;

&lt;p&gt;В Project Parfait прекрасно реализована работа с текстом PSD-макета.&lt;/p&gt;

&lt;p&gt;Задача определения и генерирования целочисленных значений, таких как 100, 300, 900 для определения насыщенности шрифтов, отлично работает. Это означает, что если в PSD-макете, созданном в Photoshop, для обозначения насыщенности шрифтов были применены такие специальные слова, как “Thin”, “Light”, “Black” и так далее, то при генерации CSS-правил в Project Parfait эти обозначения будут заменены на более правильные целочисленные значения.&lt;/p&gt;

&lt;p&gt;В Project Parfait также прекрасно реализована работа с интерлиньяжем (line height), значение которого вычисляется как относительная величина на основе размера шрифта выбранного элемента макета.&lt;/p&gt;

&lt;p&gt;В дополнение к вышесказанному, если в строке текста имеются фрагменты, отличающиеся от основного теста, то Project Parfait прекрасно их распознает и для каждого из таких фрагментов сформирует дополнительный набор CSS-правил, со специальным комментарием &lt;code&gt;/* Inline Style */&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/inlinestyle.png&quot; alt=&quot;Текст с различными фрагментами&quot; title=&quot;Текст с различными фрагментами&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;Работа со слоями&lt;/h3&gt;

&lt;p&gt;Иногда случается так, что слои макета организованы таким образом, что расположены один над другим; или же расположены так близко друг у другу, что становится трудно выбрать один из них для дальнейшей работы с ним. В Project Parfait все слои макета вынесены в отдельную вкладку &lt;strong&gt;Layers&lt;/strong&gt;, где можно легко и удобно работать с ними:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/layerstab.png&quot; alt=&quot;Слои в отдельной вкладке&quot; title=&quot;Слои в отдельной вкладке&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;Цветовая палитра макета&lt;/h3&gt;

&lt;p&gt;Как только PSD-макет загружается на сервер, Project Parfait производит его анализ и определяется все цвета, которые использовались дизайнером в его работе. Цвета группируются в цветовую палитру, которая помещается в разделе &lt;strong&gt;Colors&lt;/strong&gt; правой панели инструментов. Помимо этого, при выборе любого элемента на макете, если хотя бы один цвет из созданной Project Parfait цветовой палитры использовался в этом элементе, то данный цвет автоматически подсвечивается в разделе &lt;strong&gt;Colors&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/colorextraction.png&quot; alt=&quot;Цветовая палитра макета&quot; title=&quot;Цветовая палитра макета&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Такая возможность может быть полезна для разработчиков, которые используют препроцессоры для кодинга. В этом случае значения используемых в макете цветов могут быть определены как переменные в самом начале процесса кодинга. Эти переменные затем будут использоваться по мере необходимости на протяжении всей разработки дизайна.&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;Работа с градиентами&lt;/h3&gt;

&lt;p&gt;Точно также, как Project Parfait может определять обычные цвета на макете, имеется возможность определения градиентов. Сгенерированные для них правила можно скопировать из правой панели инструментов и использовать в кодинге. И точно также, как и с простыми цветами, любой элемент на макете, в котором использованы градиенты, при его выделении автоматически подсвечивает набор CSS-правил, которые размещены в правой панели инструментов и использовались при стилизации этого элемента:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/gradientextraction.png&quot; alt=&quot;Работа с градиентами&quot; title=&quot;Работа с градиентами&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Для разработчиков, использующих препроцессоры, Project Parfait предоставляет удобный способ скопировать сгенерированные CSS-правила и использовать их как подмешивания (mixins) при разработке дизайна.&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;Общая информация о шрифтах&lt;/h3&gt;

&lt;p&gt;Точно также, как дело обстоит с цветами и градиентами, Project Parfait предоставляет обобщенную информацию обо всех шрифтах, которые были использованы в макете, а также о размерах и насыщенности этих шрифтов:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/fontsummary.png&quot; alt=&quot;Общая информация о шрифтах&quot; title=&quot;Общая информация о шрифтах&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Это означает, что как только PSD-макет был загружен в Project Parfait, уже имеется полная информация о том, какие шрифты и с каким параметрами необходимо использовать в дальнейшем при разработке дизайна. Также имеется возможность экспортировать все размеры шрифтов в виде переменных, котрые могут буть использованы в препроцессорах.&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;Общая информация о разметке&lt;/h3&gt;

&lt;p&gt;Когда при разработке дизайна работа выполняется непосредственно в программе Photoshop, то получение информации о ширине, высоте, дистанции, положении каждого из элементов дизайна - задача не и легких. По другому дело обстоит в Project Parfait.&lt;/p&gt;

&lt;p&gt;Для того, чтобы получить значения высоты, ширины или координаты любого элемента, достаточно его выбрать на макете щелчком мыши и во всплывающем синем окошке будут показана вся эта информация:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/sizeposinfo.png&quot; alt=&quot;Размеры и координаты элемента&quot; title=&quot;Размеры и координаты элемента&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Если необходимо узнать расстояние между соседними элементами на макете, для этого нужно нажать и держать клавишу &lt;strong&gt;Shift&lt;/strong&gt;, а затем поочередно щелчком мыши выбрать все необходимые элементы. Отобразиться информационное окно, в котором будут представлены размеры по горизонтали и вертикали, в пикселях:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zencoder.ru/images/uploads/2015/06/distance.png&quot; alt=&quot;Расстояние между элементами&quot; title=&quot;Расстояние между элементами&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;project-parfait-&quot;&gt;Project Parfait бесплатен&lt;/h2&gt;

&lt;p&gt;На данный момент проект Project Parfait является бесплатным для использования. Достаточно войти в систему под своим личным Adobe ID и все готово!&lt;/p&gt;

&lt;p&gt;Если вы являетесь дизайнером, который ищет улучшений для своего рабочего процесса; или вы разработчик, который стремится как можно проще и быстрее преобразовать PSD-макет с код, в обоих случая Project Parfait может послужить образцом нового подхода к веб-разработке.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/css/project-parfait/&quot;&gt;Project Parfait - CSS-код из PSD-макета&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on August 02, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Область применения селекторов jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/scope-selectors-jquery/" />
  <id>http://zencoder.ru/jquery/scope-selectors-jquery</id>
  <published>2015-05-27T00:00:00+03:00</published>
  <updated>2015-05-27T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;В библиотеке jQuery имется возможность использования области применения селекторов, с помощью &lt;em&gt;контекста&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Что такое &lt;em&gt;контекст&lt;/em&gt; в jQuery? Давайте рассмотрим “стандартную” запись кода на JavaScript(jQuery):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;someClass&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Видим в этом коде, что функции &lt;code&gt;$()&lt;/code&gt; передается &lt;strong&gt;один аргумент&lt;/strong&gt; - в данном случае это селектор &lt;code&gt;li&lt;/code&gt;. В качестве селектора может быть фрагмент разметки, имя класса или имя идентификатора. Но - в 90% случаев функции &lt;code&gt;$()&lt;/code&gt; передается один аргумент.&lt;/p&gt;

&lt;p&gt;Однако это не является правилом. И функции &lt;code&gt;$()&lt;/code&gt; можно передавать не один, а два аргумента.&lt;/p&gt;

&lt;p&gt;В этом случае второй аргумент является &lt;strong&gt;контекстом&lt;/strong&gt; и служит для указания &lt;strong&gt;области дерева DOM&lt;/strong&gt;, внутри которой необходимо осуществлять поиск.&lt;/p&gt;

&lt;p&gt;То есть, запись вида:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;someClass&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… говорит - найти все элементы &lt;code&gt;li&lt;/code&gt; во всем дереве DOM. Другими словами, отсутствие второго аргумента подразумевает область применения селекторов - все дерево DOM.&lt;/p&gt;

&lt;p&gt;А вот запись вида:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#primo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;block__item--first&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… говорит, что нужно найти все селекторы &lt;code&gt;li&lt;/code&gt; внутри элемента с идентификатором &lt;code&gt;#primo&lt;/code&gt;. Другими словами, идентификатор &lt;code&gt;#primo&lt;/code&gt; ограничивает область применения (или область видимости - как больше нравиться) селектора &lt;code&gt;li&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Можно слегка усложнить область видимости селекторов - указать не одну область, а две области:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#primo,#tetro&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;block__item--first&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… в этом случае будут возвращены только те элементы &lt;code&gt;li&lt;/code&gt;, которые находятся внутри блока с идентификатором &lt;code&gt;#primo&lt;/code&gt; и внутри блока с идентификатором &lt;code&gt;#tetro&lt;/code&gt;. Другими словами, были заданы две области видимости для селектора &lt;code&gt;li&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;В качестве второго аргумента (контекста) функции &lt;code&gt;$()&lt;/code&gt; может быть передан не только селектор, имя класса или имя идентификатора (как в рассмотренном выше случае).&lt;/p&gt;

&lt;p&gt;Контекстом может быть результат работы другой функции! То есть, можно одной функции выборки передавать результат выборки другой функции!&lt;/p&gt;

&lt;p&gt;Например, таким гипотетическим образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#primo &amp;gt; li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;block__link--decor&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/scope-selectors-jquery/&quot;&gt;Область применения селекторов jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 27, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Метод slice библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/slice-jquery/" />
  <id>http://zencoder.ru/jquery/slice-jquery</id>
  <published>2015-05-26T00:00:00+03:00</published>
  <updated>2015-05-26T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Достаточно интересный (для меня) метод выборки элементов из коллекции - метод &lt;code&gt;.slice()&lt;/code&gt;. Хотя чего-то эдакого в этом методе нет совсем.&lt;/p&gt;

&lt;p&gt;Просто этот метод позволяет установить диапазон (область), по которому (внутри которой) будут выбираться элементы.&lt;/p&gt;

&lt;p&gt;Синтаксис метода &lt;code&gt;.slice()&lt;/code&gt; таков:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает элементы с индексами от &lt;code&gt;start&lt;/code&gt; до &lt;code&gt;end&lt;/code&gt;, если последний задан или до конца, если параметр &lt;code&gt;end&lt;/code&gt; опущен.&lt;/p&gt;

&lt;p&gt;Элементы с индексом &lt;code&gt;start&lt;/code&gt; включаются в результат, а &lt;code&gt;end&lt;/code&gt; - нет (т.е. &lt;code&gt;.slice(3,5)&lt;/code&gt; вернет элементы, идущие под индексом 3 и 4, элемент с индексом 5 включен не будет).&lt;/p&gt;

&lt;p&gt;Кроме этого, параметры могут быть заданы в форме отрицательных чисел, в таком случае, отсчет элементов идет с конца набора: &lt;code&gt;-1&lt;/code&gt; – последний элемент, &lt;code&gt;-2&lt;/code&gt; – предпоследний элемент и т. д.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Примеры использования:&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;$(&quot;div&quot;).slice(3)&lt;/code&gt; - вернет все div-элементы, начиная с четвертого (с индексами 3, 4, …)
&lt;code&gt;$(&quot;div&quot;).slice(3, 5)&lt;/code&gt; - вернет div-элементы с индексами 3 и 4
&lt;code&gt;$(&quot;div&quot;).slice(-4, -2)&lt;/code&gt; - вернет div-элементы, идущие четвертым и третьим с конца
&lt;code&gt;$(&quot;div&quot;).slice(-2)&lt;/code&gt; - вернет предпоследний и последний div-элементы на странице&lt;/p&gt;

&lt;p&gt;Приведу пример HTML-разметки:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Такой javascript-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test__link--sliced&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… выполнит следующее:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;создаст переменную &lt;code&gt;list&lt;/code&gt; и поместит в нее результат выборки - &lt;code&gt;$('.test')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;найдет в переменной &lt;code&gt;list&lt;/code&gt; все элементы &lt;code&gt;li&lt;/code&gt; - &lt;code&gt;.find('li')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;в найденной коллекции определит диапазон элементов &lt;code&gt;li&lt;/code&gt; с индексами с 2-го по 10-й - &lt;code&gt;.slice(2,10)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;добавит к элементам &lt;code&gt;li&lt;/code&gt; этого диапазона класс - &lt;code&gt;.addClass('test__link--sliced')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;но не добавит класс &lt;code&gt;.test__link--sliced&lt;/code&gt; к элементу &lt;code&gt;li&lt;/code&gt; с индексом 10!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Результатом выполнения показанного выше js-кода будет такая HTML-разметка:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Обратите внимание, что нумерация элементов начинается с &lt;code&gt;0&lt;/code&gt; - это индекс элемента! Элемент с последним индексом не включен в выборку!&lt;/p&gt;

&lt;p&gt;Еще один пример, более краткий и наглядный.&lt;/p&gt;

&lt;p&gt;Начальный HTML-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;JavaScript-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bad&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.bad&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;bad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;bad__item--sliced&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Результат:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item bad__item--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item bad__item--sliced&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bad__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;На этом все. Материал частично основан на ресурсе &lt;a href=&quot;http://jquery.page2page.ru/&quot; title=&quot;jQuery Page2Page&quot;&gt;jquery.page2page&lt;/a&gt; и не претендует на оригинальность.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/slice-jquery/&quot;&gt;Метод slice библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 26, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Метод nth-child библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/nth-child-jquery/" />
  <id>http://zencoder.ru/jquery/nth-child-jquery</id>
  <published>2015-05-25T00:00:00+03:00</published>
  <updated>2015-05-25T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Этот метод очень похож на то, как это дело &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child&quot; title=&quot;nth-child&quot;&gt;обстоит в CSS&lt;/a&gt;. С помощью него можно выбрать любой элемент в коллекции ему подобных, если они имеют одного общего родителя.&lt;/p&gt;

&lt;p&gt;Приведу пример HTML-разметки, над которой буду тренироваться:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;И начну учиться выбирать элементы из такого списка с помощью метода &lt;code&gt;.nth-child()&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;nth-childeven--nth-childodd&quot;&gt;nth-child(even) и nth-child(odd)&lt;/h2&gt;

&lt;p&gt;Такой пример javascript-кода:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li:nth-child(even)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test__item--right&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li:nth-child(odd)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test__item--left&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… этот javascript-код читается так:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;создать переменную &lt;code&gt;list&lt;/code&gt; и поместить в нее результат выборки &lt;code&gt;$('.test')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;в переменной &lt;code&gt;list&lt;/code&gt; найти все четные (even) элементы &lt;code&gt;li&lt;/code&gt; - &lt;code&gt;.find('li:nth-child(even)')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;и присвоить этим элементам &lt;code&gt;li&lt;/code&gt; класс - &lt;code&gt;.addClass('test__item--right')&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--right&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--right&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--right&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--right&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--right&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--right&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… затем:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;в переменной &lt;code&gt;list&lt;/code&gt; найти все нечетные (odd) элементы &lt;code&gt;li&lt;/code&gt; - &lt;code&gt;.find('li:nth-child(odd)')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;и присвоить этим элементам &lt;code&gt;li&lt;/code&gt; класс - &lt;code&gt;.addClass('test__item--left')&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--left&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--left&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--left&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--left&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--left&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__item--left&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Как видим, все просто и в точности также, как это &lt;a href=&quot;https://css-tricks.com/almanac/selectors/n/nth-child/&quot; title=&quot;:nth-child&quot;&gt;обстоит в CSS&lt;/a&gt; с его селектором &lt;code&gt;nth-child&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;nth-childpattern&quot;&gt;nth-child(pattern)&lt;/h2&gt;

&lt;p&gt;Такой пример javascript-кода:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li:nth-child(2)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test__link--capitalize&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li:nth-child(11)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test__link--uppercase&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;найдет второй элемент &lt;code&gt;li&lt;/code&gt; из коллекции - &lt;code&gt;.find('li:nth-child(2)')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;и присвоить ему класс - &lt;code&gt;.addClass('test__link--capitalize')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;найдет 11-й элемент &lt;code&gt;li&lt;/code&gt; из коллекции - &lt;code&gt;.find('li:nth-child(11)')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;и присвоить ему класс - &lt;code&gt;.addClass('test__link--uppercase')&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--capitalize&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--uppercase&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;Вот и все, что можно сказать о методе &lt;code&gt;nth-child&lt;/code&gt; библиотеки jQuery.&lt;/p&gt;

&lt;p&gt;Но чуть не забыл упомянуть такой важный момент! Как уже можно было заметить, нумерация при использовании метода &lt;code&gt;nth-child&lt;/code&gt; начинается не с 0, а с 1!&lt;/p&gt;

&lt;p&gt;Впрочем, точно также обстоят дела и с селектором &lt;code&gt;nth-child&lt;/code&gt; в CSS.&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/nth-child-jquery/&quot;&gt;Метод nth-child библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 25, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Метод first и first-child библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/first-jquery/" />
  <id>http://zencoder.ru/jquery/first-jquery</id>
  <published>2015-05-24T00:00:00+03:00</published>
  <updated>2015-05-24T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Рассмотрю два метода, которые похожи внешне и внутренне, как может показаться с первого взгляда. Однако, между ними есть тонкая разница.&lt;/p&gt;

&lt;h2 id=&quot;first&quot;&gt;Метод first&lt;/h2&gt;

&lt;p&gt;Метод &lt;code&gt;first()&lt;/code&gt; призван возращать первый элемент из коллекции (выборки) этих элементов. Как всегда, чтобы не быть голословным и иметь наглядный пример перед глазами, приведу ниже HTML-разметку, на которой буду тренироваться:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;primo&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вот такая большая разметка &lt;code&gt;div class=&quot;wrapper&quot;&lt;/code&gt; с четырьмя блоками &lt;code&gt;ul class=&quot;block&quot;&lt;/code&gt;, у каждого из которых есть элементы-потомки &lt;code&gt;li class=&quot;block__item&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;И создам небольшой скрипт на JS/jQuery такого плана:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.wrapper&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li:first&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;block__item--firstSimple&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Работа вышеприведенного js-кода будет сводиться к следующему:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;создается переменная &lt;code&gt;wrapper&lt;/code&gt;, в которую помещается результат выборки &lt;code&gt;$('.wrapper')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;в переменной &lt;code&gt;wrapper&lt;/code&gt; находим элемент &lt;code&gt;li&lt;/code&gt;, который является первым в коллекции - &lt;code&gt;.find('li:first')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;этому элементу добавляется класс - &lt;code&gt;.addClass('block__item--firstSimple')&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Код несложный и вроде бы все понятно. Но вот вопрос - а какой элемент &lt;code&gt;li&lt;/code&gt; с точки зрения данного кода является первым в коллекции?&lt;/p&gt;

&lt;p&gt;Чтобы не ломать понапрасну голову, приведу сразу ответ:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;primo&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item block__item--firstSimple&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вот так - только он один и только этот элемент является первым в коллекции элементов &lt;code&gt;li&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Это объяснимо, если слегка подумать. В переменной &lt;code&gt;wrapper&lt;/code&gt; хранится коллекция элементов; и элементов &lt;code&gt;li&lt;/code&gt; - в том числе.&lt;/p&gt;

&lt;p&gt;Коллекция элементов - это не что иное, как массив. А в массиве только один элемент может быть первым. То есть, иметь индекс 0.&lt;/p&gt;

&lt;p&gt;Именно поэтому метод &lt;code&gt;.first()&lt;/code&gt; - это всего лишь синоним (alias) другого, более универсального метода &lt;code&gt;.eq()&lt;/code&gt; и может быть записан таким способом - &lt;code&gt;.eq(0)&lt;/code&gt; - вернуть элемент с нулевым индексом, то есть - первый элемент массива.&lt;/p&gt;

&lt;p&gt;Антагонистом метода &lt;code&gt;.first()&lt;/code&gt; является метод &lt;code&gt;last()&lt;/code&gt;, который возвращает последний элемент массива. И метод &lt;code&gt;.last()&lt;/code&gt; также можно записать по другому - &lt;code&gt;.eq(-1)&lt;/code&gt;; это также вернет последний элемент массива.&lt;/p&gt;

&lt;p&gt;Ок, с методом &lt;code&gt;.first()&lt;/code&gt; вроде разобрались. Двигаемся дальше и рассмотрим метод &lt;code&gt;.first-child()&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;first-child&quot;&gt;Метод first-child()&lt;/h2&gt;

&lt;p&gt;Казалось бы, в чем разница? Трудно догадаться, поэтому сразу приведу js-код с описанием работы. В качестве подопытной HTML-разметки будет выступать все та же, приведенная в самом начале статьи.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.wrapper&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li:first-child&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;block__item--firstChild&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Что делает приведенный выше код? А вот что:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;создает переменную &lt;code&gt;wrapper&lt;/code&gt; и присваивает ей значение выборки - $(‘.wrapper’)&lt;/li&gt;
  &lt;li&gt;в переменной &lt;code&gt;wrapper&lt;/code&gt; находим первый элемент &lt;code&gt;li&lt;/code&gt; - &lt;code&gt;.find('li:first-child')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;этому элементу присваивается класс - &lt;code&gt;.addClass('block__item--firstChild')&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Все просто и вроде бы точно также, как и в случае с методом &lt;code&gt;.first()&lt;/code&gt;. Вроде бы да, но возникает вопрос - а какой элемент &lt;code&gt;li&lt;/code&gt; данный код считает первым в данном случае?&lt;/p&gt;

&lt;p&gt;Чтобы не гадать, снова приведу готовый ответ:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;primo&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item block__item--firstChild&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item block__item--firstChild&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item block__item--firstChild&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item block__item--firstChild&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;block__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вот она - разница в подходе отбора первого элемента. Другими словами, метод &lt;code&gt;.first-child()&lt;/code&gt; находит все элементы, которые являются первыми потомками у своих непосредственных родителей. А в данном случае таких потомков насчиталось аж 4 штуки.&lt;/p&gt;

&lt;p&gt;Конечно, можно провести аналогию и рассмотреть метод &lt;code&gt;.last-child()&lt;/code&gt;. Но мне кажется, смысла в этом особого нет - все и так понятно. Выборка будет производиться с точностью до наоборот и будут отбираться последние потомки своих неспосредственных родителей.&lt;/p&gt;

&lt;p&gt;На этом думаю закончить сравнительный обзор двух методов - &lt;code&gt;.first()&lt;/code&gt; и &lt;code&gt;.first-child()&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/first-jquery/&quot;&gt;Метод first и first-child библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 24, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Методы next и prev библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/next-jquery/" />
  <id>http://zencoder.ru/jquery/next-jquery</id>
  <published>2015-05-23T00:00:00+03:00</published>
  <updated>2015-05-23T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Рассмотрю методы для нахождения &lt;strong&gt;следующих&lt;/strong&gt; и &lt;strong&gt;предыдущих&lt;/strong&gt; элементов из выборки. Предполагается, что имеется группа элементов, у которых один родитель.&lt;/p&gt;

&lt;p&gt;Чтобы не ходить вокруг да около, приведу пример HTML-разметки:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Видно, что у элемента-родителя &lt;code&gt;ul class=&quot;test&quot;&lt;/code&gt; имеется двенадцать элементов-потомков &lt;code&gt;li class=&quot;test__item&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Так вот, в библиотеке jQuery имеются несколько методов, с помощью которых можно “погулять” по этому DOM-дереву. Расссмотрю каждый из них в отдельности.&lt;/p&gt;

&lt;p&gt;Но стоит сразу сказать - как всегда, эти методы очень краткие и предельно понятные. Вся “прелесть” начинается, когда методы объединяют в jQuery-цепочку.&lt;/p&gt;

&lt;h2 id=&quot;next&quot;&gt;Метод next()&lt;/h2&gt;

&lt;p&gt;С помощью этого метода возвращается элемент, находящий &lt;strong&gt;следующим&lt;/strong&gt; по отношению к текущему элементу.&lt;/p&gt;

&lt;p&gt;Приведу такой JS-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test__link--nexted&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… который выполняет следующее:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;создать переменную &lt;code&gt;list&lt;/code&gt; и поместить в нее результат выборки &lt;code&gt;$('.test')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;в переменной &lt;code&gt;list&lt;/code&gt; найти все элементы &lt;code&gt;li&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;вернуть элемент &lt;code&gt;li&lt;/code&gt; с индексом 6 - &lt;code&gt;.eq(6)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;найти следующий за ним элемент &lt;code&gt;li&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;присвоить ему класс &lt;code&gt;.test__link--nexted&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В результате выполнения этого кода класс &lt;code&gt;.test__link--nexted&lt;/code&gt; будет присвоен элементу &lt;code&gt;li&lt;/code&gt; с индексом 7 (или восьмому - по счету):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--nexted&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;prev&quot;&gt;Метод prev()&lt;/h2&gt;

&lt;p&gt;Этот метод абсолютно аналогичен методу &lt;code&gt;next()&lt;/code&gt; за тем исключением, что его действие направлено в противоположную сторону. Метод &lt;code&gt;prev()&lt;/code&gt; возвращает элемент, который &lt;strong&gt;предшествует&lt;/strong&gt; текущему элементу.&lt;/p&gt;

&lt;p&gt;То есть, такой JS-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test__link--preved&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;создаст переменную &lt;code&gt;list&lt;/code&gt; и поместит в нее результат выборки &lt;code&gt;$('.test')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;в переменной &lt;code&gt;list&lt;/code&gt; найдет все элементы &lt;code&gt;li&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;вернет элемент &lt;code&gt;li&lt;/code&gt; с индексом 6 - &lt;code&gt;.eq(6)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;найдет предшествующий ему элемент &lt;code&gt;li&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;присвоит ему класс &lt;code&gt;.test__link--preved&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Результатом выполнения этого кода класс &lt;code&gt;.test__link--preved&lt;/code&gt; будет присвоен элементу &lt;code&gt;li&lt;/code&gt; с индексом 5 (или шестому - по счету):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item test__link--preved&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;Краткое заключение&lt;/h3&gt;

&lt;p&gt;Обобщением вышесказанного является такое предложение. Методы &lt;code&gt;next()&lt;/code&gt; и &lt;code&gt;prev()&lt;/code&gt; возвращают один элемент, который является &lt;strong&gt;следующим&lt;/strong&gt; или &lt;strong&gt;предшествует&lt;/strong&gt; текущему элементу. Все элементы имеют &lt;strong&gt;одного общего родителя&lt;/strong&gt; и поиск осуществляется только в этих рамках (другими словами - это sibling-элементы).&lt;/p&gt;

&lt;h2 id=&quot;nextall--prevall&quot;&gt;Методы nextAll() и prevAll()&lt;/h2&gt;

&lt;p&gt;Производными от рассмотренных мною выше методов &lt;code&gt;next()&lt;/code&gt; и &lt;code&gt;prev()&lt;/code&gt; являются методы &lt;code&gt;nextAll()&lt;/code&gt; и &lt;code&gt;prevAll()&lt;/code&gt;. Фактически, это те же самые методы &lt;code&gt;next()&lt;/code&gt; и &lt;code&gt;prev()&lt;/code&gt;, но в этих методах возвращается не один элемент, а &lt;strong&gt;все оставшиеся&lt;/strong&gt; элементы, которые являются sibling по отношению к текущему элементу.&lt;/p&gt;

&lt;p&gt;То есть, такой JS-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nextAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;block__item--squared&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;создаст переменную &lt;code&gt;list&lt;/code&gt; и поместит в нее результат выборки &lt;code&gt;$('.test')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;в переменной &lt;code&gt;list&lt;/code&gt; найдет все элементы &lt;code&gt;li&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;вернет элемент &lt;code&gt;li&lt;/code&gt; с индексом 3 - &lt;code&gt;.eq(3)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;найдет все следующие за ним элементы &lt;code&gt;li&lt;/code&gt; - &lt;code&gt;.nextAll()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;присвоит всем найденным элементам &lt;code&gt;li&lt;/code&gt; класс &lt;code&gt;.block__item--squared&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Результатом будет такой HTML-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--squared&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--squared&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--squared&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--squared&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--squared&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--squared&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--squared&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--squared&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Метод &lt;code&gt;prevAll()&lt;/code&gt; работает аналогично, но “в другую сторону”. Этот метод возвращает &lt;strong&gt;все элементы&lt;/strong&gt;, которые &lt;strong&gt;предшествуют&lt;/strong&gt; текущему элементу.&lt;/p&gt;

&lt;p&gt;То есть, такой JS-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.test&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prevAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;block__item--circled&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;создаст переменную &lt;code&gt;list&lt;/code&gt; и поместит в нее результат выборки &lt;code&gt;$('.test')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;в переменной &lt;code&gt;list&lt;/code&gt; найдет все элементы &lt;code&gt;li&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;вернет элемент &lt;code&gt;li&lt;/code&gt; с индексом 3 - &lt;code&gt;.eq(3)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;найдет все элементы &lt;code&gt;li&lt;/code&gt;, которые предшествуют ему - &lt;code&gt;.prevAll()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;присвоит всем найденным элементам &lt;code&gt;li&lt;/code&gt; класс &lt;code&gt;.block__item--circled&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Результатом работы этого js-скрипта будет такой HTML-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--circled&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--circled&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item block__item--circled&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;Общее заключение&lt;/h2&gt;

&lt;p&gt;Вывод по методам &lt;code&gt;nextAll()&lt;/code&gt; и &lt;code&gt;prevAll()&lt;/code&gt;. Эти методы работают с sibling-элементами, то есть - имеющими одного родителя. Эти методы возвращают все найденные элементы, которые предшествуют или расположены после текущего элемента.&lt;/p&gt;

&lt;p&gt;Методы &lt;code&gt;nextAll()&lt;/code&gt; и &lt;code&gt;prevAll()&lt;/code&gt; очень похожи также на рассмотренный мною в предыдущей статье метод &lt;code&gt;siblings&lt;/code&gt;. Вот только действие метода &lt;code&gt;siblings&lt;/code&gt; более “тупое” (если позволительно так сказать) - этот метод “фигачит” свое действие сразу в обе стороны от текущего элемента, по принципу - “от забора и до обеда”.&lt;/p&gt;

&lt;p&gt;Методы &lt;code&gt;nextAll()&lt;/code&gt; и &lt;code&gt;prevAll()&lt;/code&gt; более “интеллектуальные” - они “фигачат” свое действие только в одну сторону - указанную.&lt;/p&gt;

&lt;p&gt;Ну, а методы &lt;code&gt;next()&lt;/code&gt; и &lt;code&gt;prev()&lt;/code&gt; самые “умные” - “только один элемент, который ближайший и слева”; “только один элемент, который ближайший и справа”.&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/next-jquery/&quot;&gt;Методы next и prev библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 23, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Метод siblings библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/siblings-jquery/" />
  <id>http://zencoder.ru/jquery/siblings-jquery</id>
  <published>2015-05-22T00:00:00+03:00</published>
  <updated>2015-05-22T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Небольшое отступление - в одних постах я говорю о функциях jQuery, в других - о методах jQuery. Где же правильно? В принципе, и то и то правильно. И функция jQuery, и метод jQuery. Но последний вариант более правильный, поэтому в дальнейшем буду “обзывать” подобные вещи методами.&lt;/p&gt;

&lt;p&gt;Метод &lt;code&gt;.siblings()&lt;/code&gt; предназначен для выборки соседних элементов. С помощью этого метода выбираются все элементы, находящиеся на одном уровне DOM с элементом, служащим в качестве критерия отбора.&lt;/p&gt;

&lt;p&gt;Метод имеет один вариант использования (синтаксис):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;.parent([selector])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Все очень похоже на то, как эти дела &lt;a href=&quot;https://css-tricks.com/child-and-sibling-selectors/&quot; title=&quot;Child and Sibling Selectors&quot;&gt;обстоят в CSS&lt;/a&gt;, но приведу простой пример для иллюстрации:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link proba&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.proba&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;siblings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;selected&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… &lt;strong&gt;читается это так&lt;/strong&gt; - добавить класс &lt;code&gt;.selected&lt;/code&gt; для всех элементов, соседних (sibling) с элементом, имеющим класс &lt;code&gt;.proba&lt;/code&gt;. То есть, класс &lt;code&gt;.selected&lt;/code&gt; будет добавлен всем элементам &lt;code&gt;a&lt;/code&gt;, так как они находятся на одном уровне DOM с элементом &lt;code&gt;.proba&lt;/code&gt; и являются соседними по отношению к нему.&lt;/p&gt;

&lt;p&gt;По умолчанию можно не передавать методу &lt;code&gt;.siblings()&lt;/code&gt; аргумент в виде селектора - &lt;code&gt;.siblings('a')&lt;/code&gt;, так как подразумеваются элементы, которые являются соседними в текущей HTML-разметке. Но можно передавать методу в качестве аргумента имя класса  - &lt;code&gt;.siblings('.test__link')&lt;/code&gt;; или элемент с именем класса (идентификатора) - &lt;code&gt;.siblings('a.test__link')&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Краткие примеры использования метода &lt;code&gt;.siblings()&lt;/code&gt;, взятые с ресурса &lt;a href=&quot;http://jquery.page2page.ru/&quot; title=&quot;Siblings jQuery&quot;&gt;jQuery Page2Page&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;$(&quot;#block&quot;).siblings()&lt;/code&gt; - найдет элементы, которые имеют общего родителя с элементом, обладающим идентификатором &lt;code&gt;#block&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;$(&quot;.lBlock&quot;).siblings()&lt;/code&gt; - найдет элементы, которые имеют общих родителей с элементами класса &lt;code&gt;.lBlock&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;$(&quot;.lBlock&quot;).siblings(&quot;.cont&quot;)&lt;/code&gt; - найдет элементы класса &lt;code&gt;.cont&lt;/code&gt;, которые имеют общих родителей с элементами класса &lt;code&gt;.lBlock&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Важный момент - в этом случае класс &lt;code&gt;.selected&lt;/code&gt; не будет добавлен к элементу &lt;code&gt;.proba&lt;/code&gt;. Другими словами, в методе &lt;code&gt;.siblings()&lt;/code&gt; к элементу, служащему в качестве критерия, не применяются действия этого метода.&lt;/p&gt;

&lt;p&gt;Чтобы было еще понятнее, о чем идет речь, представлю ниже результат работы описанного выше javascript-кода:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link selected&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link selected&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link proba&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link selected&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link selected&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test link item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Метод &lt;code&gt;.siblings()&lt;/code&gt; прост и понятен. Единственным “подводным камнем” при работе с ним является такой момент - нужно быть внимательным с &lt;strong&gt;уровнями вложения элементов&lt;/strong&gt;. Другими словами, в дереве DOM элементы не расположены на одном уровне (не являются sibling), однако разработчик упрямо пытается применить к этим элементам метод &lt;code&gt;.sibling()&lt;/code&gt;. И потом сильно недоумевает, почему ничего не работает, хотя код то правильный!&lt;/p&gt;

&lt;p&gt;Приведу простой пример такой ошибки, с которой один раз сам столкнулся. Здесь пример кристально ясный и понятный, однако на деле все было не так прозрачно (в совокупности с другим кодом):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link proba&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.proba&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;siblings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;selected&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Представленный выше javascript-код &lt;strong&gt;работать не будет&lt;/strong&gt;, так как элементы &lt;code&gt;a&lt;/code&gt; (а код был сделан в расчете на эти элементы) соседними (siblings) не являются. Это хорошо заметно, если внимательно рассмотреть HTML-код примера.&lt;/p&gt;

&lt;p&gt;Вот, в принципе, и все, что можно сказать о методе &lt;code&gt;.siblings()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/siblings-jquery/&quot;&gt;Метод siblings библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 22, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Метод parent и children библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/parent-jquery/" />
  <id>http://zencoder.ru/jquery/parent-jquery</id>
  <published>2015-05-21T00:00:00+03:00</published>
  <updated>2015-05-21T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Два метода-антагониста, принцип работы которых ясен из имени самих методов.&lt;/p&gt;

&lt;h2 id=&quot;children&quot;&gt;Метод children&lt;/h2&gt;

&lt;p&gt;Метод &lt;code&gt;.children()&lt;/code&gt; возвращает все элементы, которые являются дочерними по отношению к элементу, указанному в качестве аргумента метода.&lt;/p&gt;

&lt;p&gt;Примеры использования:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;$('div').children()&lt;/code&gt; - вернет элементы, которые лежат непосредственно внутри div-элементов&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;$('div').children('.block')&lt;/code&gt; - вернет элементы класса &lt;code&gt;.block&lt;/code&gt;, которые лежат непосредственно внутри div-элементов&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;$('#area').children('.block') - вернет элементы класса .&lt;/code&gt;block&lt;code&gt;, которые лежат непосредственно внутри элемента с идентификатором &lt;/code&gt;#area`&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Метод &lt;code&gt;.children()&lt;/code&gt; в чем-то похож на метод &lt;code&gt;.find()&lt;/code&gt;, рассмотренный мною ранее. Но между двумя этими методами существует одно большая разница.&lt;/p&gt;

&lt;p&gt;Метод &lt;code&gt;.children()&lt;/code&gt; возвращает (другими словами - ищет) все элементы, расположенные на DOM-уровне ниже указанного элемента; и только на этом уровне. Другими словами - возвращаются все непосредственные &lt;a href=&quot;https://css-tricks.com/child-and-sibling-selectors/&quot; title=&quot;Child and Sibling Selectors&quot;&gt;children-элементы&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Метод &lt;code&gt;.find()&lt;/code&gt; производит поиск указанных элементов на всех уровнях DOM-дерева. Другими словами, будет производиться поиск элементов на всех уровнях, вне зависимости от глубины вложенности этих уровней.&lt;/p&gt;

&lt;h2 id=&quot;parent&quot;&gt;Метод parent&lt;/h2&gt;

&lt;p&gt;Метод &lt;code&gt;.parent()&lt;/code&gt; возвращает все элементы, являющиеся непосредственными родителями элемента(ов), указанных в качестве аргументов данного метода.&lt;/p&gt;

&lt;p&gt;Примеры использования:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;$('#block').parent()&lt;/code&gt; - вернет &lt;strong&gt;родителя элемента&lt;/strong&gt; с идентификатором &lt;code&gt;#block&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;$('div').parent()&lt;/code&gt; - вернет &lt;strong&gt;родительские элементы&lt;/strong&gt; всех div-ов&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;$('div').parent('.block')&lt;/code&gt; - вернет элементы класса &lt;code&gt;.block&lt;/code&gt;, которые являются родительскими для div-элементов на странице&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/parent-jquery/&quot;&gt;Метод parent и children библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 21, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Метод eq и index библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/index-jquery/" />
  <id>http://zencoder.ru/jquery/index-jquery</id>
  <published>2015-05-20T00:00:00+03:00</published>
  <updated>2015-05-20T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Достаточно интересные методы - &lt;code&gt;.eq()&lt;/code&gt; и &lt;code&gt;.index()&lt;/code&gt;, особенно в сочетании друг с другом. Поэтому и решил объединить рассмотрение этих методов. Каждый по отдельности - методы просты и мало показательны.&lt;/p&gt;

&lt;p&gt;Но для начала вкратце (по другому и не получиться) опищу каждый из методов, по возможности своими словами.&lt;/p&gt;

&lt;h2 id=&quot;index&quot;&gt;Метод index&lt;/h2&gt;

&lt;p&gt;Работа метода &lt;code&gt;.index()&lt;/code&gt; проста - он возвращает индекс (порядковый номер) указанного элемента среди группы ему подобных.&lt;/p&gt;

&lt;p&gt;Синтаксис метода &lt;code&gt;.index()&lt;/code&gt; также простой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;или&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;И пример для иллюстрации:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;primo&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;secondo&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;tetro&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;quattro&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cinque&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sei&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sedici&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ten&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Сделать выборку всех элементов &lt;code&gt;li&lt;/code&gt; и вернуть индекс элемента &lt;code&gt;li&lt;/code&gt; с классом &lt;code&gt;.cinque&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.cinque&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Index of &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Найти элемент с классом &lt;code&gt;.sei&lt;/code&gt; среди соседних элементов и вернуть его индекс:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Index of &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.sei&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Как видим, способы получения индекса элемента разные, а результат один.&lt;/p&gt;

&lt;h2 id=&quot;eq&quot;&gt;Метод eq&lt;/h2&gt;

&lt;p&gt;Метод &lt;code&gt;.eq()&lt;/code&gt; прямопротивоположен методу &lt;code&gt;.index()&lt;/code&gt;. Этот метод возвращает элемент (как объект) по его индексу (порядковому номеру).&lt;/p&gt;

&lt;p&gt;Если взять предыдущую HTML-разметку, то такой javascript-код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Secondo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… изменит содержимое второго по счету элемента &lt;code&gt;li&lt;/code&gt; на “Secondo”. Почему второго? Как можно догадаться, результатом выборки &lt;code&gt;$('li')&lt;/code&gt; является массив элементов; а в массиве индексирование элементов начинается с нуля (0).&lt;/p&gt;

&lt;h2 id=&quot;eq--index&quot;&gt;Методы eq и index&lt;/h2&gt;

&lt;p&gt;Рассмотренные выше примеры использования методов &lt;code&gt;.eq()&lt;/code&gt; и &lt;code&gt;.index()&lt;/code&gt; просты и понятны. И неинтересны.&lt;/p&gt;

&lt;p&gt;Гораздо более интеерсным примером является случай объединения обоих методов в jQuery-цепочке.&lt;/p&gt;

&lt;p&gt;Приведу такой гипотетический пример:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item primo&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item secondo&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item tetro&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item quattro&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item cinque&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item sei&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item sedici&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test__link&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;test item link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.test__item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;siblings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;test item link&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Javascript-код, написанный выше, читается таким образом:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;сделать выборку всех элементов с классом &lt;code&gt;.test__item&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;при клике мыши на любом из этих элементов выполнить функцию:
    &lt;ul&gt;
      &lt;li&gt;сделать выборку всех элементов &lt;code&gt;li&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;вернуть индекс активного элемента из выборки - &lt;code&gt;$(this).index()&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;вернуть активный элемент по его индексу - &lt;code&gt;.eq($(this).index())&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;для возвращенного элемента &lt;code&gt;.eq($(this).index())&lt;/code&gt; изменить его содержимое на значение его индекса - &lt;code&gt;html($(this).index())&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;всем соседним (sibling) элементам установить значение в - &lt;code&gt;.siblings().html(&quot;test item link&quot;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример рабочий, поэтому его можно свободно попробовать.&lt;/p&gt;

&lt;p&gt;В принципе, на этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/index-jquery/&quot;&gt;Метод eq и index библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 20, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Методы has и hasClass библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/has-jquery/" />
  <id>http://zencoder.ru/jquery/has-jquery</id>
  <published>2015-05-19T00:00:00+03:00</published>
  <updated>2015-05-19T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Два очень похожих метода библиотеки jQuery, служащих для фильтрации выборки - метод &lt;code&gt;.has()&lt;/code&gt; и метод &lt;code&gt;.hasClass()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;И действительно, оба этих метода похожи между собой. Чтобы было понятно, лучше сразу перейду к примерам.&lt;/p&gt;

&lt;h2 id=&quot;has&quot;&gt;Метод .has()&lt;/h2&gt;

&lt;p&gt;Метод &lt;code&gt;.has()&lt;/code&gt; фильтрует элементы, имеющие в своем составе указанные в &lt;code&gt;.has()&lt;/code&gt; &lt;strong&gt;селекторы&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Простой пример:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;active&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;То есть&lt;/strong&gt;: всем элементам &lt;code&gt;li&lt;/code&gt;, имеющим в качестве потомков (&lt;em&gt;в своем составе&lt;/em&gt;) элемент &lt;code&gt;a&lt;/code&gt;, присвоить класс &lt;code&gt;.active&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;На лицо, как бы это сказать, обратная фильтрация - &lt;em&gt;справа налево&lt;/em&gt;. Обычно все методы библиотеки jQuery работают &lt;em&gt;слева направо&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Этот метод чем-то похож на метод &lt;code&gt;.parent()&lt;/code&gt;. В качестве примера рассмотрим такой вариант:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;active&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… что читается таким образом: всем элементам &lt;code&gt;li&lt;/code&gt;, являющимся родителями элементов &lt;code&gt;a&lt;/code&gt;, присвоить класс &lt;code&gt;.active&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Напомню, что метод &lt;code&gt;.has()&lt;/code&gt; работает именно с селекторами и имеет такой синтаксис:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;selector&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;hasclass&quot;&gt;Метод .hasClass()&lt;/h2&gt;

&lt;p&gt;Метод &lt;code&gt;.hasClass()&lt;/code&gt; очень похож по принципу действия на предыдущий метод &lt;code&gt;has()&lt;/code&gt; - но это только кажущееся впечатление.&lt;/p&gt;

&lt;p&gt;Во-первых, как понятно из имени метода &lt;code&gt;.hasClass()&lt;/code&gt;, что он работает с &lt;strong&gt;классами&lt;/strong&gt;, а не &lt;strong&gt;селекторами&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;То есть, синтаксис метода &lt;code&gt;.hasClass()&lt;/code&gt; таков:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Во-вторых, метод &lt;code&gt;.hasClass()&lt;/code&gt; возвращает логическое &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt;, в отличие от метода &lt;code&gt;.has()&lt;/code&gt;, который возвращает &lt;strong&gt;массив объектов&lt;/strong&gt;, доступных для дальнейшей обработки.&lt;/p&gt;

&lt;p&gt;Простой пример:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;active&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;activeLink&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;inactiveLink&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… что читается таким образом: если элементы &lt;code&gt;li&lt;/code&gt; имеют класс &lt;code&gt;.active&lt;/code&gt;, то всем элементам &lt;code&gt;a&lt;/code&gt;, являющимся потомками элементов &lt;code&gt;li&lt;/code&gt;, присвоить класс &lt;code&gt;.activeLink&lt;/code&gt;; иначе всем элементам &lt;code&gt;a&lt;/code&gt; присвоить класс &lt;code&gt;.inactiveLink&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Стоит обратить внимание, что в случае метода &lt;code&gt;.hasClass()&lt;/code&gt; имеет место быть обычный способ фильтрации элементов - слева направо; выборка сужается по мере появления новых условий.&lt;/p&gt;

&lt;p&gt;Вот такая картина получается, с двумя этими методами - &lt;code&gt;.has()&lt;/code&gt; и &lt;code&gt;.hasClass&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;На этом все.&lt;/p&gt;

&lt;hr /&gt;

    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/has-jquery/&quot;&gt;Методы has и hasClass библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 19, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Функция .find библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/find-jquery/" />
  <id>http://zencoder.ru/jquery/find-jquery</id>
  <published>2015-05-18T00:00:00+03:00</published>
  <updated>2015-05-18T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Осуществляет поиск элементов внутри &lt;strong&gt;уже выбранных элементов&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Метод имеет варианты использования и соответствующий синтаксис:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.find(selector)&lt;/code&gt; - ищет элементы, соответствующие заданному селектору, внутри &lt;strong&gt;выбранных элементов&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.find(element)&lt;/code&gt; - осуществляет поиск элемента &lt;code&gt;element&lt;/code&gt; внутри &lt;strong&gt;выбранных элементов&lt;/strong&gt;. Параметр &lt;code&gt;element&lt;/code&gt; задается в виде DOM-элемента.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.find(jQuery object)&lt;/code&gt; - осуществляет поиск элементов внутри &lt;strong&gt;выбранных элементов&lt;/strong&gt;, оставляя те, которые содержатся в заданном объекте jQuery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Примеры использования&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;вернет все элементы &lt;code&gt;span&lt;/code&gt;, находящиеся внутри div-элементов:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;span&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;вернет все элементы с классом &lt;code&gt;.bigBlock&lt;/code&gt;, находящиеся внутри div-элементов:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.bigBlock&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Вышеуказанные примеры хороши лишь в качестве демонстрации возможностей метода &lt;code&gt;.find()&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Например, искать span-элементы, лежащие внутри div’ов правильнее будет так:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;div span&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Метод &lt;code&gt;.find()&lt;/code&gt; же удобно использовать, когда некоторые &lt;strong&gt;элементы уже найдены&lt;/strong&gt; и необходимо осуществить поиск других элементов внутри уже найденных элементов:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// найдем все ul-элементы на странице&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$ulElements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// найдем li-элементы с классом .userBox внутри $ulElements&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$ulElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li.userBox&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// сокращенный вариант записи&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$ulElements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li.userBox&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Так же &lt;code&gt;.find()&lt;/code&gt; удобен для использования в &lt;strong&gt;цепочках методов&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// найдем все ul-элементы на странице&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;listElements&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// добавим ul&amp;#39;ам класс .listElements&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li.userBox&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// найдем li-элементы с классом .userBox внутри ul&amp;#39;ов&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// и удалим их&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// сокращенный вариант записи&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;listElements&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li.userBox&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Работа метода &lt;code&gt;.find()&lt;/code&gt; &lt;strong&gt;схожа&lt;/strong&gt; с методом &lt;code&gt;.children()&lt;/code&gt;, который осуществляет поиск подходящих &lt;strong&gt;дочерних элементов&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Отличие заключается в том, что &lt;code&gt;.find()&lt;/code&gt; проводит поиск не только среди дочерних элементов, но и внутри них тоже (другими словами - поиск проходит на &lt;strong&gt;всех уровнях&lt;/strong&gt; иерархии DOM, в то время как &lt;code&gt;.children()&lt;/code&gt; ищет только &lt;strong&gt;на одном уровне&lt;/strong&gt;).&lt;/p&gt;

&lt;h2 id=&quot;find&quot;&gt;Пример метода .find()&lt;/h2&gt;

&lt;p&gt;Внутри каждого ul-элемента найдем первый li-элемент и последний p-элемент:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// найдем и сохраним все ul-элементы&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$matched&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// выделим их&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$matched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;matched&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// найдем внутри уже выбранных элементов все требуемые и выделим их, добавив класс .result&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$matched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li:first, p:last&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// сокращенный вариант записи&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$matched&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;matched&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;li:first, p:last&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;find-1&quot;&gt;Фильтрация элементов помощью .find()&lt;/h2&gt;

&lt;p&gt;Кроме поиска, .find() может осуществлять своеобразную фильтрацию.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$span&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;span&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// создать переменную $span и поместить в нее результат выборки по элементам span&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// найти все элементы p, среди этих найденных элементов найти все элементы span и расскрасить их&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;Материал статьи полностью основан на &lt;a href=&quot;http://jquery.page2page.ru/&quot; title=&quot;jQuery page2page2Page&quot;&gt;http://jquery.page2page.ru&lt;/a&gt; и не претендует на оригинальность.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/find-jquery/&quot;&gt;Функция .find библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 18, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Функции .hide и .show библиотеки jQuery]]></title>
 <link rel="alternate" type="text/html" href="http://zencoder.ru/jquery/hideshow-jquery/" />
  <id>http://zencoder.ru/jquery/hideshow-jquery</id>
  <published>2015-05-17T00:00:00+03:00</published>
  <updated>2015-05-17T00:00:00+03:00</updated>
  <author>
    <name>zencoder</name>
    <uri>http://zencoder.ru</uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Две функции-близнеца, предназначенные для управления видимостью элементов на странице. Это осуществляется через CSS-свойство &lt;code&gt;display&lt;/code&gt; (замечание: по внимательном перечтении оказалось не все так просто - в этой “магии” задействованы не только CSS-свойство &lt;code&gt;display&lt;/code&gt;, но также &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;opacity&lt;/code&gt;; и даже &lt;code&gt;margin&lt;/code&gt; и &lt;code&gt;padding&lt;/code&gt;!).&lt;/p&gt;

&lt;p&gt;После скрытия элемента значение его CSS-свойство становится равным &lt;code&gt;dispaly: none&lt;/code&gt;. Перед появлением элемента его CSS-свойство &lt;code&gt;display&lt;/code&gt; изменяет свое значение на противоположное от &lt;code&gt;none&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;duration&lt;/code&gt; — продолжительность выполнения анимации (появления или скрытия). Может быть задана в миллисекундах или строковым значением ‘fast’ или ‘slow’ (200 и 600 миллисекунд). Если этот параметр не задан, анимация будет происходить мгновенно, элемент просто появится/исчезнет.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;callback&lt;/code&gt; — функция, заданная в качестве обработчика завершения анимации (появления или скрытия).&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;Примеры использования:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;мгновенно скроет элемент с идентификатором &lt;code&gt;#leftFit&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#leftFit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;мгновенно покажет элемент с идентификатором &lt;code&gt;#leftFit&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#leftFit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;в течении 1/3 секунды скроет элемент с идентификатором &lt;code&gt;#leftFit&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#leftFit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;в течении 600 миллисекунд вернет видимость элементу с идентификатором &lt;code&gt;#leftFit&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#leftFit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;slow&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Можно скрывать и показывать элементы с помощью &lt;strong&gt;сворачивания/разворачивания&lt;/strong&gt; (&lt;em&gt;за счет изменения высоты&lt;/em&gt;). Это делают функции &lt;code&gt;slideUp()&lt;/code&gt;, &lt;code&gt;slideDown()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Медленно скрывает и раскрывает все видимые параграфы, длительность анимационных эффектов — 600 миллисекунд:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;button&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;button&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Использование callback-функции:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#clickme&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#book&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Animation complete.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#clickme&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#book&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Animation complete.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Материал данной статьи основан на ресурсах:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jquery.page2page.ru&quot; title=&quot;Hide and Show&quot;&gt;http://jquery.page2page.ru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jquery-docs.ru&quot; title=&quot;Hide and Show&quot;&gt;http://jquery-docs.ru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://api.jquery.com&quot; title=&quot;API jQuery&quot;&gt;http://api.jquery.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… и не претендует на оригинальность.&lt;/p&gt;

&lt;hr /&gt;


    &lt;p&gt;&lt;a href=&quot;http://zencoder.ru/jquery/hideshow-jquery/&quot;&gt;Функции .hide и .show библиотеки jQuery&lt;/a&gt; was originally published by zencoder at &lt;a href=&quot;http://zencoder.ru&quot;&gt;Zencoder&lt;/a&gt; on May 17, 2015.&lt;/p&gt;
  </content>
</entry>

</feed>
