<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Zencoder</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="" />
<updated>2015-02-10T00:33:53+03:00</updated>
<id>/</id>
<author>
  <name>Valery Semenencko</name>
  <uri>/</uri>
  <email>gearmobile@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Отмена изменений в Git]]></title>
 <link rel="alternate" type="text/html" href="/git-undoing-changes/" />
  <id>/git-undoing-changes</id>
  <published>2015-01-28T00:00:00+03:00</published>
  <updated>2015-01-28T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Обширная и достаточно сложная тема. Однако необходимая, если стоит задача изучить и иметь возможность работать в Git.&lt;/p&gt;

&lt;p&gt;Эта тема касается отмены изменений в Git. Так как эта система контроля версий представляет из себя три ветки – &lt;strong&gt;рабочая директория&lt;/strong&gt;, &lt;strong&gt;буфер&lt;/strong&gt;, &lt;strong&gt;репозиторий&lt;/strong&gt; – то будут рассмотрены все &lt;strong&gt;три способа&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Отмена изменений в рабочей директории&lt;/h3&gt;

&lt;p&gt;Для отмены изменений в рабочей директории необходимо выполнить одну команду:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Данная команда говорит Git вернуть состояние файла &lt;code&gt;name_of_file&lt;/code&gt; до того, каким оно было зафиксировано в репозитории. Другими словами, произойдет сброс изменений файла в рабочей директории проекта.&lt;/p&gt;

&lt;p&gt;Обязательным условием использования команды &lt;code&gt;checkout&lt;/code&gt; является &lt;strong&gt;двойной дефис&lt;/strong&gt;. Это “говорит” команде &lt;code&gt;checkout&lt;/code&gt;, что в данном случае нужно оставаться в текущей ветке (branche).&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Отмена изменений в буфере&lt;/h3&gt;

&lt;p&gt;Для отмены изменений в буфере нужно использовать команду:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEAD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Эта команда “вернет” файл &lt;code&gt;name_of_file&lt;/code&gt; из буфера в рабочую директорию.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Отмена изменений в репозитории&lt;/h3&gt;

&lt;p&gt;Что касается репозитория, то здесь ситуация намного сложнее. Связано это с тем, что все коммиты в репозитории взаимосвязаны между собой.&lt;/p&gt;

&lt;p&gt;Нельзя просто так взять и изменить какой-либо определенный коммит – все они находятся в своеобразной цепочке и один коммит проистекает из предыдущего коммита.&lt;/p&gt;

&lt;p&gt;Другими словами, у каждого коммита есть свой &lt;strong&gt;коммит-родитель&lt;/strong&gt; и &lt;strong&gt;коммит-потомок&lt;/strong&gt;. Изменить какой-либо коммит – это значит вырвать его из этой цепочки взаимосвязей. Тем самым нарушится целостность всего репозитория и работа Git также нарушится. Ведь дело в том, что сама суть системы контроля версий Git основана на такой взаимосвязанной цепочке коммитов – один коммит проистекает из другого, второй из первого, третий из второго и так далее.&lt;/p&gt;

&lt;p&gt;Как же поступить в данной ситуации?&lt;/p&gt;

&lt;p&gt;Не все так мрачно, как кажется на первый взгляд. На самом деле существует много способов отмены изменений в репозитории. Ниже мы познакомимся с ними.&lt;/p&gt;

&lt;h4 id=&quot;amend&quot;&gt;Опция amend&lt;/h4&gt;

&lt;p&gt;Если следовать из логического рассуждения, представленного выше, то получается, что в цепочке коммитов должен быть крайний коммит – тот, который был внесен совсем недавно. У этого коммита есть коммит-родитель, но нет коммита-потомка, так как этот коммит – крайний в цепочке.&lt;/p&gt;

&lt;p&gt;Соответственно, раз у этого коммита нет потомков, то изменение этого коммита не повлечет за собой нарушение целостности всей цепочки коммитов. Измениться только этот коммит – и только.&lt;/p&gt;

&lt;p&gt;Изменить крайний коммит можно просто &lt;strong&gt;перезаписав&lt;/strong&gt; его. Для этой цели служит ключ &lt;code&gt;--amend&lt;/code&gt;. Команда в целом представляет из себя следующее:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-amend&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Add some commit&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Как только будет выполнена подобная команда, крайний коммит (тот, на котором находится указатель HEAD) будет &lt;strong&gt;перезаписан&lt;/strong&gt; и это очень легко проследить – достаточно сравнить контрольную сумму SHA этого коммита до и после изменений.&lt;/p&gt;

&lt;h4 id=&quot;checkout&quot;&gt;Команда checkout&lt;/h4&gt;

&lt;p&gt;С помощью команды &lt;code&gt;checkout&lt;/code&gt; можно выполнять откат репозитория до нужной версии. Данный способ основан на самом факте существования цепочки коммитов, в которой в роли узлов выступают сами коммиты.&lt;/p&gt;

&lt;p&gt;Образно можно представить данную ситуацию очень наглядно – как обычную магнитофонную ленту в старых кассетных магнитофонах. То место на ленте, где произошла последняя остановка и на котором находится звукозаписывающая головка – это и есть крайний коммит. Предыдущие коммиты – это места на ленте, когда происходила остановка записи в те самые моменты.&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;checkout&lt;/code&gt; может заставить указатель HEAD вернуться назад, на предыдущее место остановки – на предыдущий коммит. И необязательно этот коммит должен быть предыдущим – он может быть любым более ранним.&lt;/p&gt;

&lt;p&gt;Все что для этого нужно – это указать тот коммит, к которому должен вернуться HEAD. Указать коммит просто – у каждого коммита есть уникальный идентификатор – контрольная SHA-сумма.&lt;/p&gt;

&lt;p&gt;Команда возврата к нужному коммиту выглядит таким образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;4a2f59a32bd1074c42&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Можно указать только часть SHA-суммы, так как это показано выше.&lt;/p&gt;

&lt;p&gt;И тогда Git произведет сброс состояния (&lt;em&gt;которые были сделаны в последнем коммите&lt;/em&gt;) файла &lt;code&gt;name_of_file&lt;/code&gt; в буфер. Если ввести команду &lt;code&gt;git status&lt;/code&gt; то увидим, что в буфере будут изменения, готовые для коммита. Это те самые изменения файла &lt;code&gt;name_of_file&lt;/code&gt;, которые мы “выбросили” из репозитория.&lt;/p&gt;

&lt;p&gt;Дальше выполняем “выброс” изменений файла &lt;code&gt;name_of_file&lt;/code&gt; из буфера в рабочую директорию, чтобы мы смогли внести правки в этот файл:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEAD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Все, что будет внесено в этот файл, а затем закоммичено – будет иметь уже другую контрольную сумму. А следовательно – это уже будет совсем другой коммит.&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;Зеркалирование коммитов&lt;/h4&gt;

&lt;p&gt;Одной из разнообразных команд Git для внесения изменений в репозиторий является команда &lt;code&gt;revert&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Суть ее очень проста – она отменяет все изменения, зафиксированные в крайнем коммите; и создает новый коммит, который является потомком предыдущего коммита, но в тоже время его &lt;strong&gt;зеркальной копией&lt;/strong&gt;, &lt;strong&gt;противоположностью&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Синтаксис команды revert также прост:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;4a2f59a32bd1074c42&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;где &lt;code&gt;4a2f59a32bd1074c42&lt;/code&gt; – это часть SHA-суммы крайнего коммита.&lt;/p&gt;

&lt;h4 id=&quot;reset&quot;&gt;Команда reset&lt;/h4&gt;

&lt;p&gt;Команда &lt;code&gt;reset&lt;/code&gt; также может изменять репозиторий Git. Делает она это путем смещения указателя HEAD на нужный коммит.&lt;/p&gt;

&lt;p&gt;После такого смещения HEAD все более поздние коммиты никуда не пропадут из репозитория – они все еще там. Но теперь любое закоммиченное изменение произведет перезапись более поздних коммитов – и тогда они будут потеряны навсегда.&lt;/p&gt;

&lt;p&gt;Ситуация очень похожа на то образное сравнение цепочки коммитов Git с магнитофонной лентой. Стоит отмотать ленту на 10-20 минут назад и снова начать запись, то все более поздние записи (&lt;em&gt;относительно этого места&lt;/em&gt;) будут перезаписаны.&lt;/p&gt;

&lt;p&gt;У команды &lt;code&gt;reset&lt;/code&gt; есть три ключа, которые незначительно видоизменяют ее работу:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;–soft&lt;/li&gt;
  &lt;li&gt;–mixed&lt;/li&gt;
  &lt;li&gt;–hard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Команда &lt;code&gt;git reset --soft 4a2f59a32bd1074c42&lt;/code&gt; произведет смещение указателя HEAD на указанный коммит 4a2f59a32bd1074c42. При этом Git произведет сброс изменений в буфер. В результате буфер и рабочая директория будут идентичными между собой; а репозиторий будет переведен в более ранее состояние.&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;git reset --mixd 4a2f59a32bd1074c42&lt;/code&gt; аналогична предыдущей. Также будет произведено смещение указателя HEAD. Но теперь Git сбросит изменения в рабочую директорию. Репозиторий и буфер будут идентичными друг другу и находиться в более раннем состоянии.&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;git reset --hard 4a2f59a32bd1074c42&lt;/code&gt; самая “жесткая”. Также будет произведено смещение указателя HEAD на указанный коммит, но при этом будет произведен сброс всех трех деревьев Git – репозитория, буфера и рабочей директории. Все три будут идентичными друг другу.&lt;/p&gt;

&lt;h3 id=&quot;clean&quot;&gt;Команда clean&lt;/h3&gt;

&lt;p&gt;В системе Git существует команда &lt;code&gt;clean&lt;/code&gt; для удаления не отслеживаемых файлов в рабочей директории.&lt;/p&gt;

&lt;p&gt;Разница между командой &lt;code&gt;git rm&lt;/code&gt; и &lt;code&gt;clean&lt;/code&gt; заключается в том, что при удалении файлов из рабочей директории первой командой они &lt;strong&gt;вроде как удаляются&lt;/strong&gt;. Но на самом деле удаленные файлы все еще остаются в системе Git. Просто они &lt;strong&gt;помещены в раздел мусора&lt;/strong&gt; и являются теперь &lt;strong&gt;мусором&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Команда &lt;code&gt;clean&lt;/code&gt; как раз и выполняет очистку мусора в системе. Она удаляет все не &lt;strong&gt;отслеживаемые&lt;/strong&gt; и &lt;strong&gt;неиспользуемые файлы&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Но даже это она делает очень осторожно. Если просто запустить &lt;code&gt;git clean&lt;/code&gt;, то ничего не произойдет. Система Git скажет, что команду &lt;code&gt;clean&lt;/code&gt; необходимо запускать либо с ключом &lt;code&gt;-n&lt;/code&gt;, либо с ключом &lt;code&gt;-f&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Запуск &lt;code&gt;git clean -n&lt;/code&gt; – это тестовый запуск команды удаления. Ничего удалено не будет – система лишь покажет, что она собирается удалить, какие файлы.&lt;/p&gt;

&lt;p&gt;А вот запуск &lt;code&gt;git clean -f&lt;/code&gt; произведен реальное удаление всех файлов, которые Git считает мусором. И в этом случае эти файлы будут потеряны навсегда.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/git-undoing-changes/&quot;&gt;Отмена изменений в Git&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on January 28, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Игнорирование файлов в Git]]></title>
 <link rel="alternate" type="text/html" href="/git-gitignoring-files/" />
  <id>/git-gitignoring-files</id>
  <published>2015-01-28T00:00:00+03:00</published>
  <updated>2015-01-28T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Два способа игнорирования файлов – локальный и глобальный. Шаблоны для игнорирования файлов в для различных операционных систем, языков программирования, CMS и т. д. Игнорирование уже отслеживаемого файла в Git. Отслеживание пустых директорий.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;gitignore&quot;&gt;Шаблоны правил для .gitignore&lt;/h3&gt;

&lt;p&gt;Два ресурса на GitHub, в которых собраны &lt;strong&gt;шаблоны&lt;/strong&gt; файла &lt;code&gt;.gitignore&lt;/code&gt; для разных случаев – разных операционных систем, разных языков программирования и т. д.&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;Общий список правил&lt;/h4&gt;

&lt;p&gt;По ссылке ниже представлен &lt;strong&gt;набор общих правил и рекомендаций&lt;/strong&gt; при создании файла &lt;code&gt;.gitignore&lt;/code&gt;. Помимо этого, в данном разделе показан шаблон для самого общего случая использования &lt;code&gt;.gitignore&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/ignoring-files/&quot;&gt;Общий список правил игнорирования файлов в Git&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;Детализированный список правил&lt;/h4&gt;

&lt;p&gt;По ссылке ниже представлен &lt;strong&gt;более детальный и полезный список&lt;/strong&gt; правил, по которым создается файл &lt;code&gt;.gitignore&lt;/code&gt;. В этом списке можно найти рекомендации для разных операционных систем (Linux, Mac OS X, Windows, Android), разных языков программирования (Java, Perl и т. д.), различных CMS (к примеру – Joomla, Magento, Jekyll). Даже для README есть свой набор правил!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/github/gitignore&quot;&gt;Деталированный список правил игнорирования файлов в Git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Помимо списка языков программирования, в котором для каждого пункта этого списка представлены рекомендованные правила для файла &lt;code&gt;.gitignore&lt;/code&gt;, имеется еще дополнительная директория &lt;strong&gt;Global&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Как раз в этой директории располагается &lt;strong&gt;список рекомендаций применительно к операционным системам&lt;/strong&gt;. Достаточно найти нужную систему, перейти по ссылке и воспользоваться набором правил.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Глобальное игнорирование&lt;/h3&gt;

&lt;p&gt;В Git возможно игнорирование файлов двумя способами:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;локально&lt;/li&gt;
  &lt;li&gt;глобально&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В последнем случае (&lt;em&gt;глобально&lt;/em&gt;) имеется ввиду, что Git будет игнорировать указанные файлы всегда, &lt;strong&gt;в любом из проектов&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ярким примером такого &lt;strong&gt;глобального игнорирования&lt;/strong&gt; являются служебные файлы операционной системы – они должны игнорироваться всегда и в любом проекте Git.&lt;/p&gt;

&lt;p&gt;Файл конфигурации с глобальным игнорированием может быть назван &lt;strong&gt;как угодно&lt;/strong&gt; (в отличие от файла &lt;code&gt;.gitignore&lt;/code&gt;). Главное – он должен располагаться в домашней директории пользователя, а не в директории с проектом. И это его главное отличие от файла &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;После того, как файл глобального игнорирования создан, необходимо добавить его в конфигурационный файл Git. То есть, “сказать” Git, что “у тебя есть список файлов, которые ты должен игнорировать; этот список называется так и расположен он здесь”.&lt;/p&gt;

&lt;p&gt;Выполняется это командой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;excludesfile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~/.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitignore_global&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Если теперь взглянуть на конфигурационный файл Git, то увидим следующее:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~/.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitconfig&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;[user]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;***&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;***&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@gmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;[core]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;excludesfile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;***&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitignore_global&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;Игнорирование отслеживаемого файла&lt;/h3&gt;

&lt;p&gt;Может возникнуть ситуация, когда файл был создан и помещен в репозиторий Git. То есть, теперь он является отслеживаемым.&lt;/p&gt;

&lt;p&gt;Но это была ошибка – этот файл не нужно было отслеживать! Как сказать Git, чтобы он не отслеживал этот файл?&lt;/p&gt;

&lt;p&gt;Для этого нужно выполнить два шага.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Первый&lt;/strong&gt; – это внести имя нужного файла в список игнорируемых файлов – отредактировать файл &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Однако, этот шаг еще ничего не даст – Git все также будет его отслеживать, так как он уже внесен в &lt;strong&gt;буфера обмена&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Для этого нужно “вынуть” данный файл из &lt;strong&gt;буфера обмена&lt;/strong&gt;. Это выполняется командой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-cached&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Данная команда удалит указанный файл из &lt;strong&gt;буфера обмена&lt;/strong&gt;, однако оставит в рабочей директории и в репозитории. Последующий коммит произведет удаление этого файла и из репозитория.&lt;/p&gt;

&lt;p&gt;Осталось только выполнить коммит обоих изменений – &lt;em&gt;добавление файла в игнорируемые&lt;/em&gt; и &lt;em&gt;удаление его из репозитория&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Все последующие изменения в этом файле &lt;em&gt;отслеживаться не будут&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;Отслеживание пустых директорий&lt;/h3&gt;

&lt;p&gt;У Git имеется одна очень не очевидная особенность, которая сбивает с толку прозелитов и в один прекрасный момент может их подвести, если они не знают о данном факте.&lt;/p&gt;

&lt;p&gt;Заключается он в том, что Git – это система контроля версий &lt;strong&gt;для файлов&lt;/strong&gt;! Другими словами – &lt;strong&gt;Git умеет отслеживать только файлы&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Поэтому, если в проекте имеется &lt;strong&gt;пустая директория&lt;/strong&gt;, то Git ее просто “выкинет”. По той простой причине, что точки зрения Git директория – всего лишь путь к файлу, способ найти отслеживаемый файл. А раз файла нет, то путь ведет &lt;em&gt;вникуда&lt;/em&gt;, так как отслеживать &lt;em&gt;нечего&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Кстати сказать, я сам когда-то был таким новичком и столкнулся с этим непонятным для меня фактом. Интуитивно догадался, в чем дело и поступал таким “корявым” (&lt;em&gt;как я считал&lt;/em&gt;) способом.&lt;/p&gt;

&lt;p&gt;К примеру, для директории psd я создавал файл-заглушку &lt;code&gt;dummy.psd&lt;/code&gt; размером 1px*1px. Главное – чтобы в директории psd что-то лежало – тогда Git не удалит ее! )&lt;/p&gt;

&lt;p&gt;Как оказалось, я был прав! И это единственный правильный способ заставить Git &lt;em&gt;отслеживать пустые директории&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Одна только &lt;em&gt;маленькая поправка&lt;/em&gt; – в мире Unix такой файл-заглушку можно создать с помощью команды &lt;code&gt;touch&lt;/code&gt; и выглядеть такой файл будет так (&lt;em&gt;общепринятое соглашение&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitkeep&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Что же – этот способ более аккуратный и грамотный! )&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/git-gitignoring-files/&quot;&gt;Игнорирование файлов в Git&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on January 28, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Rupture &#8211; система breakpoint под Stylus]]></title>
 <link rel="alternate" type="text/html" href="/rupture-breakpoints-stylus/" />
  <id>/rupture-breakpoints-stylus</id>
  <published>2015-01-16T00:00:00+03:00</published>
  <updated>2015-01-16T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Краткое знакомство с системой контрольных точек Rupture под препроцессор Stylus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ниже приведено краткое и сбивчивое &lt;img src=&quot;http://localhost:7788/third/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; /&gt; описание (&lt;em&gt;знакомство&lt;/em&gt;) с системой breakpoints под препроцессор Stylus. Оно основано на двух материалах, оба являющихся официальными:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jenius.github.io/rupture/&quot; title=&quot;rupture&quot;&gt;rupture on GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jenius/rupture&quot; title=&quot;Rupture&quot;&gt;Rupture – official project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;А больше в Сети материалов по Rupture и нет, даже на английском языке. Есть, правда, очень краткий – на французском, которым я совсем не владею &lt;img src=&quot;http://localhost:7788/third/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rupture был создан на примере плагина &lt;a href=&quot;https://github.com/lolmaus/breakpoint-slicer&quot; title=&quot;Breakpoint Slicer&quot;&gt;Breakpoint Slicer&lt;/a&gt; под препроцессор Sass.&lt;/p&gt;

&lt;h3 id=&quot;rupture&quot;&gt;Шкала Rupture&lt;/h3&gt;

&lt;p&gt;Основа Rupture – шкала значений breakpoints, которая так и называется – &lt;code&gt;scale&lt;/code&gt;. Фактически &lt;code&gt;scale&lt;/code&gt; – это объект со своими свойствами и методами. Перечень контрольных точек (breakpoints) – это массив значений, передаваемых объекту &lt;code&gt;scale&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ниже представлена &lt;code&gt;scale&lt;/code&gt; по умолчанию (&lt;em&gt;но которую можно легко изменить при необходимости&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;400px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;600px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;800px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;1050px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;1800px&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Количество этих значений – &lt;code&gt;0, 400px, 600px 800px, 1050px&lt;/code&gt; – может быть необязательно равно 5 (пяти). Их может быть неограниченное количество – столько, сколько нужно.&lt;/p&gt;

&lt;p&gt;Перечень значений breakpoints, показанных выше, можно представить в виде диапазонов; каждому диапазону можно присвоить порядковый номер &lt;code&gt;slice number&lt;/code&gt; и “обозвать” как &lt;code&gt;slice&lt;/code&gt;:&lt;figure id=&quot;attachment_2206&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2015/01/scale_rupture.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2015/01/scale_rupture-600x102.png&quot; alt=&quot;Rupture Scale&quot; width=&quot;600&quot; height=&quot;102&quot; class=&quot;size-medium wp-image-2206&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Rupture Scale&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt;&lt;/p&gt;

&lt;p&gt;Подключать библиотеку Rupture в проект &lt;strong&gt;нет необходимости&lt;/strong&gt;. Достаточно установить библиотеку командой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rupture&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-global&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;После этого Rupture готова к использованию. Можно запустить компиляцию из командной строки (&lt;em&gt;не рекомендуется&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;p&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stylus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rupture&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;styl&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Здесь &lt;code&gt;-c&lt;/code&gt; – это сокращение от &lt;code&gt;--compress&lt;/code&gt;, то есть – минифицировать CSS-код на выходе. Почему не рекомендуется использовать командную строку? Просто для этих целей лучше (&lt;em&gt;и целесообразнее&lt;/em&gt;) использовать Gulp.&lt;/p&gt;

&lt;h3 id=&quot;rupture-1&quot;&gt;Миксины Rupture&lt;/h3&gt;

&lt;p&gt;В Rupture все управляется &lt;strong&gt;миксинами&lt;/strong&gt;. Есть заранее созданный набор миксинов, которые необходимо применять для определенного случая (breakpoints).&lt;/p&gt;

&lt;p&gt;Все миксины Rupture делятся на &lt;strong&gt;два вида&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;простые миксины&lt;/strong&gt; для практического использования каждый день&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;сложный набор миксинов&lt;/strong&gt;, которые фактически представляют из себя grid sistem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В этом кратком обзоре я буду рассматривать только “практические” миксины. Более сложные – нет, ибо “не зачем”.&lt;/p&gt;

&lt;h4 id=&quot;rupture-2&quot;&gt;Набор практических миксинов Rupture&lt;/h4&gt;

&lt;p&gt;Первые три миксина – &lt;strong&gt;наиболее применимые&lt;/strong&gt; и удобные на практике.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+above(measure)&lt;/strong&gt;
– если размер окна браузера &lt;strong&gt;больше&lt;/strong&gt; указанного значения (&lt;code&gt;&amp;gt; measure&lt;/code&gt;), то применить стили
– &lt;code&gt;+from-width(measure)&lt;/code&gt; – это алиас миксина &lt;strong&gt;+above(measure)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+below(measure)&lt;/strong&gt;
– если размер окна браузера &lt;strong&gt;меньше&lt;/strong&gt; указанного значения (&lt;code&gt;&amp;lt; measure&lt;/code&gt;), то применить стили
- &lt;code&gt;+to-width(measure)&lt;/code&gt; - это алиас миксина &lt;strong&gt;+below(measure)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+between(measure1, measure2)&lt;/strong&gt;
- если размер окна браузера находится в указанных пределах (&lt;code&gt;measure1 &amp;lt;= between &amp;lt;= measure2&lt;/code&gt;), то применить стили&lt;/p&gt;

&lt;p&gt;Дальше пошли миксины - “по обстоятельствам”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+at(measure)&lt;/strong&gt;
- если размер окна браузера &lt;code&gt;&amp;gt;=&lt;/code&gt; указанного значения, то применить стили&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+mobile()&lt;/strong&gt;
- если размер окна браузера &lt;code&gt;&amp;lt;= 400px&lt;/code&gt;, то применить стили
- &lt;code&gt;rupture.mobile-cutoff&lt;/code&gt; - переменная, в которой хранится значение для миксина mobile()&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+tablet()&lt;/strong&gt;
- если размер окна браузера находится в пределах &lt;code&gt;&amp;gt;= 1050px&lt;/code&gt; и &lt;code&gt;&amp;lt; 400px&lt;/code&gt;, то применить стили&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+desktop()&lt;/strong&gt;
- если размер окна браузера &lt;code&gt;&amp;gt; 1050px&lt;/code&gt;, то применить стили
- &lt;code&gt;rupture.desktop-cutoff&lt;/code&gt; - переменная, в которой хранится значение для миксина desktop()&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+hd()&lt;/strong&gt;
- если размер окна браузера &lt;code&gt;&amp;gt;=&lt;/code&gt; 1800px, то применить стили
- &lt;code&gt;rupture.hd-cutoff&lt;/code&gt; - переменная, в которой хранится значение для миксина hd()&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+retina()&lt;/strong&gt;
- если плотность размещения пикселей больше 1.5 (retina display), то применить стили&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+landscape()&lt;/strong&gt;
- если у окна браузера &lt;strong&gt;высота меньше, чем ширина&lt;/strong&gt;, то применить стили&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;+portrait()&lt;/strong&gt;
- если у окна браузера &lt;strong&gt;высота больше, чем ширина&lt;/strong&gt;, то применить стили&lt;/p&gt;

&lt;h3 id=&quot;rupture-3&quot;&gt;Настройка Rupture&lt;/h3&gt;

&lt;p&gt;Как любая система, Rupture имеет свои собственные настройки. Которые можно задавать в файле проекта в виде &lt;strong&gt;переменных&lt;/strong&gt; с их значениями.&lt;/p&gt;

&lt;p&gt;К примеру, Rupture имеет возможность &lt;strong&gt;автоматического конвертирования&lt;/strong&gt; значений breakpoints из пикселей (px) в em. Как говорится в официальном руководстве, в веб-разработке существует мнение, что задавать контрольные точки в em - это хорошая практика.&lt;/p&gt;

&lt;p&gt;Поэтому, такой пример иллюстрирует &lt;strong&gt;включение автоматической конвертации&lt;/strong&gt; из px в em; и задание базового размера шрифта в 18px (&lt;em&gt;базовый размер шрифта равен 16px&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;rupture&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.enable-em-breakpoints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;base-font-size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;18px&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;rupture.scale&lt;/strong&gt; - одна из &lt;strong&gt;важнейших переменных&lt;/strong&gt; Rupture. В этой переменной можно в виде массива переопределить значения breakpoints.&lt;/p&gt;

&lt;p&gt;Например, таким образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;rupture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;380px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;768px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;1200px&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;rupture-4&quot;&gt;Пример работы Rupture&lt;/h3&gt;

&lt;p&gt;Перейдем от теории к практике и рассмотрим маленький рабочий пример - как будет &lt;em&gt;отрабатывать&lt;/em&gt; Rupture:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;div.wrapper
  div.left
  div.right&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;nib&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;jeet&amp;#39;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Partials&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;partials/*.styl&amp;#39;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;rupture&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.enable-em-breakpoints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.wrapper&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.left&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20vh&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lighten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;below&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;800px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lighten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;below&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;margin-bottom&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10px&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.right&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20vh&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lighten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;below&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;800px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lighten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;below&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Комментировать вышеприведенный код мне как-то не особого желания. Он очень простой и наглядный - слова тут излишни.&lt;/p&gt;

&lt;p&gt;Кроме одного вопроса, который чуть не забыл упомянуть! В этом коде (&lt;em&gt;и всех примерах выше&lt;/em&gt;) применялось точное значение для миксинов - &lt;code&gt;+below(400px)&lt;/code&gt;, к примеру.&lt;/p&gt;

&lt;p&gt;Но ничто не мешает использовать любые &lt;strong&gt;произвольные переменные&lt;/strong&gt;, в которые можно “загружать” нужные значения. К примеру, код выше можно преобразовать таким образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;nib&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;jeet&amp;#39;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Partials&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;partials/*.styl&amp;#39;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Breakpoint&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Variables&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;bp1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;800px&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;bp2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;400px&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;rupture&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.enable-em-breakpoints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.wrapper&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.left&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20vh&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lighten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;below&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;bp1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lighten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;below&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;bp2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;margin-bottom&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10px&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.right&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20vh&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lighten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;below&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;bp1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lighten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;below&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;bp2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;rupture-5&quot;&gt;Заключение Rupture&lt;/h3&gt;

&lt;p&gt;Вот я и познакомился с Rupture. Что можно сказать - система мне (&lt;em&gt;в очередной раз - все из мира Stylus&lt;/em&gt;) понравилась, она очень проста и наглядна. Достаточно полчаса, чтобы ознакомиться с ее возможностями и начать применять на практике.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/rupture-breakpoints-stylus/&quot;&gt;Rupture &amp;#8211; система breakpoint под Stylus&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on January 16, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Jeet.gs &#8211; первое знакомство]]></title>
 <link rel="alternate" type="text/html" href="/jeet-gs-first-introduction/" />
  <id>/jeet-gs-first-introduction</id>
  <published>2015-01-15T00:00:00+03:00</published>
  <updated>2015-01-15T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;h3 id=&quot;section&quot;&gt;Вступление&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Сегодня приступим к знакомству с системой построения сеток jeet.gs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Читатели могут спросить – отлично, но чем плоха &lt;a href=&quot;http://susy.oddbird.net/&quot; title=&quot;Susy&quot;&gt;Susy&lt;/a&gt;? Ответ прост – Susy работает на Ruby, она просто несовместима со Stylus.&lt;/p&gt;

&lt;p&gt;Так как с недавнего времени я перешел с Sass(SCSS) на &lt;a href=&quot;http://learnboost.github.io/stylus/&quot; title=&quot;Stylus&quot;&gt;Stylus&lt;/a&gt; и &lt;em&gt;совсем не жалею об этом&lt;/em&gt;, то сразу принялся искать замену Susy. Надо сказать, я быстро ее нашел и этой заменой оказалась &lt;a href=&quot;http://jeet.gs/&quot; title=&quot;jeet.gs&quot;&gt;jeet.gs&lt;/a&gt;. “Grid system для людей” – как ее “обозвали” в прекрасном task runner &lt;a href=&quot;http://incident57.com/codekit/&quot; title=&quot;CodeKit&quot;&gt;CodeKit&lt;/a&gt;. Кстати, сам факт присутствия jeet.gs в CodeKit говорит за себя.&lt;/p&gt;

&lt;p&gt;Система jeet.gs &lt;em&gt;изначально адаптивная&lt;/em&gt;, она проста в использовании и изучении. Если честно, Susy я так до конца и не освоил (&lt;em&gt;только необходимые основы&lt;/em&gt;), так как она достаточно сложна в изучении, несмотря на прекрасную документацию. Еще можно сказать, что jeet.gs очень молода – ей всего 9 месяцев и поэтому я с вами, уважаемый читатель, иду в ногу со временем, я на cutting edge &lt;img src=&quot;http://localhost:7788/third/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; /&gt; !&lt;/p&gt;

&lt;p&gt;Существование и использование jeet.gs имеет мало смысла без системы контрольных точек (breakpoint). В Susy в этом качестве служит хороший инструмент &lt;a href=&quot;http://breakpoint-sass.com/&quot; title=&quot;Breakpoint&quot;&gt;Breakpoint&lt;/a&gt;. Под jeet.gs конечно же существует аналог под названием &lt;a href=&quot;https://github.com/jenius/rupture&quot; title=&quot;Rupture&quot;&gt;Rupture&lt;/a&gt;. Эта система также проста и наглядна, как и jeet.gs.&lt;/p&gt;

&lt;p&gt;Стоит также оговориться, что под Stylus имеются не менее прекрасные проекты &lt;a href=&quot;https://github.com/corysimmons/typographic&quot; title=&quot;Typographic&quot;&gt;Typographic&lt;/a&gt; и &lt;a href=&quot;https://github.com/jenius/axis&quot; title=&quot;Axis&quot;&gt;Axis&lt;/a&gt;, с которыми я планирую познакомиться в свое время.&lt;/p&gt;

&lt;h3 id=&quot;jeetgs-8211-grid-system--stylus&quot;&gt;Jeet.gs – grid system под Stylus&lt;/h3&gt;

&lt;p&gt;Итак, фанфары прозвучали в честь обоих героев сегодняшнего дня. Пора приступать к более детальному знакоству с ними. И начнем с главного героя – системы сеток (grid system) jeet.gs.&lt;/p&gt;

&lt;h4 id=&quot;jeetgs--stylus&quot;&gt;Установка Jeet.gs под Stylus&lt;/h4&gt;

&lt;p&gt;Любое знакомство начинается с установки пакета. На официальной странице &lt;a href=&quot;http://jeet.gs/&quot; title=&quot;jeet.gs&quot;&gt;jeet.gs&lt;/a&gt; прекрасно оформлено описание инсталляции – она проста. Кстати, стоит оговориться, что jeet.gs можно установить и под Sass(SCSS). Но я этого делать не буду – мне это не интересно и не нужно.&lt;/p&gt;

&lt;p&gt;Предполагается, что у читателя рабочей операционной системой является MacOSX или Linux OS (&lt;em&gt;все команды в этой статье будут показаны применительно к этим двум родственным системам&lt;/em&gt;). Также предполагается, что в любой из этих систем уже установлены Node.js и Stylus (&lt;em&gt;иначе вы немного забежали вперед, уважаемый читатель&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Установка&lt;/em&gt; jeet.gs выполняется одной строкой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jeet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-global&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Далее библиотека jeet.gs &lt;em&gt;импортируется&lt;/em&gt; в файл проекта &lt;code&gt;*.styl&lt;/code&gt; с помощью директивы &lt;code&gt;@import&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;jeet&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;После этого можно &lt;em&gt;запустить мониторинг и компиляцию&lt;/em&gt; командой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stylus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jeet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-w&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;styl&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;где &lt;code&gt;-u&lt;/code&gt; – это сокращение от &lt;code&gt;--using&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt; – от &lt;code&gt;--watch&lt;/code&gt;. То есть, мониторить (watch) все изменения файла style.styl и при этом учитывать (using) возможности подключенной библиотеки jeet.gs.&lt;/p&gt;

&lt;p&gt;Пакет jeet.gs можно заставить работать несколько иначе – &lt;em&gt;крутиться под Gulp&lt;/em&gt;. Для этого достаточно правильно оформить файл &lt;code&gt;gulpfile.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;nib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;nib&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;jeet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;jeet&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rupture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rupture&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// STYLUS WITH NIB AND JEET AND RUPTURE&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;stylus&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;app/styles/style.styl&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stylus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jeet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rupture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]}))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;dist/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;jeetgs&quot;&gt;Возможности Jeet.gs&lt;/h4&gt;

&lt;p&gt;С документацией по jeet.gs можно ознакомиться на оф. сайте в разделе Jeet’s API или же на страничке GitHub – &lt;a href=&quot;https://github.com/mojotech/jeet/tree/master/stylus&quot; title=&quot;jeet/stylus&quot;&gt;jeet/stylus&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id=&quot;column&quot;&gt;Функция column()&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Синтаксис&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ratios&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cycle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;uncycle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;gutter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;jeet&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.gutter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Основой любой современной grid system являются колонки\столбцы – column. Так как jeet.gs изначально является &lt;em&gt;адаптивной системой&lt;/em&gt;, то задать ширину column можно как &lt;em&gt;дробную часть&lt;/em&gt; от ширины блока-контейнера – 1/3, 1/6, 1/10, 1/100 и так далее. Не обязательно можно задавать в виде дроби, можно в &lt;em&gt;десятичном&lt;/em&gt; виде – .3, .25, .15.&lt;/p&gt;

&lt;p&gt;Пример задания ширины для двух блоков &lt;code&gt;.sidebar&lt;/code&gt; и &lt;code&gt;.main&lt;/code&gt;. В обоих случаях используется функция &lt;code&gt;column()&lt;/code&gt;, у которой есть более используемое сокращение – &lt;code&gt;col()&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.sidebar&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.main&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Функция &lt;code&gt;column()&lt;/code&gt; может принимать целый ряд аргументов, с помощью которых возможна тонкая настройка блоков в разметке.&lt;/p&gt;

&lt;p&gt;Смещение колонок\столбцов выполняется с помощью аргумента &lt;code&gt;offset&lt;/code&gt;, который может принимать как положительное, так и отрицательное значение. Положительное значение offset задает у столбца &lt;code&gt;margin-left&lt;/code&gt; – и столбец смещается влево. Отрицательное значение задает &lt;code&gt;margin-right&lt;/code&gt; – и блок смещается вправо.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Аргумент &lt;code&gt;cycle&lt;/code&gt; позволяет создавать &lt;em&gt;галлереи&lt;/em&gt;. Допустим, необходимо создать галлерею из картинок, в которой должно быть 4 (четыре) картинки в ряду. Тогда для функции &lt;code&gt;column()&lt;/code&gt; задаем параметр &lt;code&gt;cycle: 4&lt;/code&gt; :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Аргумент &lt;code&gt;uncycle&lt;/code&gt; позволяет создавать мобильные версии галерей. Допустим, desktop-версия галлереи – &lt;code&gt;column(1/3, cycle: 4)&lt;/code&gt;. Чтобы создать мобильную версию этой галлереи, в которой картинки будут располагаться по две в ряд, достаточно прописать так:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;uncycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Аргумент &lt;code&gt;gutter&lt;/code&gt; позволяет управлять шириной gutter между столбцами в каждом конкретном случае. Допустим, таким образом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.block&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;uncycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;gutter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;span&quot;&gt;Функция span()&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Синтаксис&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ratio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Эта функция является своего рода облегченным вариантом функции &lt;code&gt;column()&lt;/code&gt;. Функция &lt;code&gt;span()&lt;/code&gt; не “понимает” такого свойства, как отступы &lt;code&gt;gutter&lt;/code&gt; у блоков. По одной простой причине – функция &lt;code&gt;span()&lt;/code&gt; создает разметку из блоков, плотно прилегающих друг к другу, без &lt;code&gt;margin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Такая разметка крайне полезна при создании горизонтальной навигации. Например, создать навигацию из восьми пунктов:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.nav&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;cf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;shift&quot;&gt;Функция shift()&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Синтаксис&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ratios&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;col_or_span&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;gutter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;jeet&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.gutter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Эта функция служит для изменения порядка расположения элементов в нормальном потоке, с помощью свойства &lt;code&gt;position: relative&lt;/code&gt;. Величина смещения задается аргументом &lt;code&gt;ratios&lt;/code&gt; и применяется подобное смещение в виде свойства &lt;code&gt;left&lt;/code&gt; к блоку. При этом функции &lt;code&gt;shift()&lt;/code&gt; с помощью задания или не задания аргумента &lt;code&gt;gutter&lt;/code&gt; можно указать, является ли данный блок столбцом (через функцию &lt;code&gt;column()&lt;/code&gt;) или блоком span (через функцию &lt;code&gt;span()&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Функция &lt;code&gt;shift()&lt;/code&gt; точно также, как и аргумент &lt;code&gt;offset&lt;/code&gt;, может принимать отрицательные значения для изменения направления смещения блока. Также, функция &lt;code&gt;shift()&lt;/code&gt; может принимать не только целые, но и дробные значения для точного позиционирования.&lt;/p&gt;

&lt;h5 id=&quot;unshift&quot;&gt;Функция unshift()&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Синтаксис – отсутствует&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Эта функция не принимает каких-либо аргументов. Ее задача – отменить действие функции &lt;code&gt;shift()&lt;/code&gt;.&lt;/p&gt;

&lt;h5 id=&quot;edit&quot;&gt;Функция edit()&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Синтаксис – отсутствует&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Данная функция не создает разметку напрямую. Ее задача – помочь в создании разметки. С ее помощью каждый элемент на странице &lt;em&gt;окрашивается в определенный оттенок серого цвета&lt;/em&gt;. Это помогает визульно контролировать правильность процесса создания разметки.&lt;/p&gt;

&lt;p&gt;Чтобы функция заработала, достаточно включить ее в файле проекта в любом месте:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;edit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вид разметки будет примерно таким:&lt;figure id=&quot;attachment_2192&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2015/01/jeet_edit.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2015/01/jeet_edit-600x380.png&quot; alt=&quot;jeet.gs edit&quot; width=&quot;600&quot; height=&quot;380&quot; class=&quot;size-medium wp-image-2192&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Функция edit() в jeet.gs&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt;&lt;/p&gt;

&lt;h5 id=&quot;center&quot;&gt;Функция center()&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Синтаксис&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;max-width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1410px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pad&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Задача функции &lt;code&gt;center()&lt;/code&gt; – быстро и грамотно выполнять центрирование блока в разметке. Как видно из синтаксиса, функция принимает два аргумента:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;максимальную ширину &lt;code&gt;max-width&lt;/code&gt;, равную по умолчанию &lt;code&gt;1410px&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;padding-left&lt;/code&gt; и &lt;code&gt;padding-right&lt;/code&gt; для блока, задаваемые в виде шортката &lt;code&gt;pad&lt;/code&gt; и равного нулю по умолчанию; то есть, нельзя управлять &lt;code&gt;padding-left&lt;/code&gt; и &lt;code&gt;padding-right&lt;/code&gt; по отдельности – только одно значение сразу для двух свойств.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;cf&quot;&gt;Функция cf()&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Синтаксис – отсутствует&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Данная функция – это всего лишь clearfix от Nicholas Gallagher. Думаю, дальнейшее объяснение излишне. Принимать – маленькими дозами для любых блоков с &lt;code&gt;column()&lt;/code&gt; или &lt;code&gt;span()&lt;/code&gt; &lt;img src=&quot;http://localhost:7788/third/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;align&quot;&gt;Функция align()&lt;/h5&gt;

&lt;p&gt;Функция для выравнивания блока внутри блока-контейнера с помощью &lt;code&gt;position: absolute&lt;/code&gt;. Вертикальное выравнивание в браузерах IE9+ теперь простая вещь.&lt;/p&gt;

&lt;h5 id=&quot;stack&quot;&gt;Функция stack()&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Синтаксис&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;pad&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Данная функция предназначена для расположения блоков стопкой (stack), друг над другом. Такой вид расположения блоков применим для модильной версии страницы. Функция &lt;code&gt;stack()&lt;/code&gt; принимает два вида аргументов:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;pad&lt;/code&gt; – отступы &lt;code&gt;padding-left&lt;/code&gt; и &lt;code&gt;padding-right&lt;/code&gt; для блока;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;align&lt;/code&gt; – выпавнивание текста внутри блока.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;unstack&quot;&gt;Функция unstack()&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Синтаксис – отсутствует&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Данная функция отменяет действие функции &lt;code&gt;stack()&lt;/code&gt;. Однако, действие этой функции не возвращает разметку к прежнему виду, с применением функции &lt;code&gt;column()&lt;/code&gt;. Чтобы вернуть разметку к такому результату, необходимо снова использовать функцию &lt;code&gt;column()&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;jeetgs-1&quot;&gt;Настройки Jeet.gs&lt;/h4&gt;

&lt;p&gt;Настройки системы jeet.gs очень просты. Первоначально необходимо создать файл &lt;code&gt;_settings.styl&lt;/code&gt;, который нужно подключить в файл стилей директивой &lt;code&gt;@import &#39;_settings&#39;&lt;/code&gt;. При этом необходимо, чтобы строка &lt;code&gt;@import &#39;_settings&#39;&lt;/code&gt; размещалась сразу после строки &lt;code&gt;@import &#39;jeet&#39;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Содержимое файла настроек &lt;code&gt;_settings.styl&lt;/code&gt; – это несколько переменных:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;jeet[‘gutter’] = 3&lt;/strong&gt; – размер ширины gutter в процентах, от общей ширины страницы&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;jeet[‘parent-first’] = false&lt;/strong&gt; – если сказать коротко, каким образом будет производиться вычисление ширины блока; относительно конкретного блока-родителя; или же относительно корневого блока-родителя&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;jeet[‘layout-direction’] = LTR&lt;/strong&gt; – направление текста внутри разметки&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jeetgs-2&quot;&gt;Заключение по Jeet.gs&lt;/h3&gt;

&lt;p&gt;Итак, познакомились с системой создания разметки jeet.gs. На удивление, она оказалась проста и достаточно полчаса, чтобы разобраться в ней. Не сравнить с Susy, конечно.&lt;/p&gt;

&lt;p&gt;Но этого мало, естественно. Хотелось бы посмотреть на живые примеры сайтов, созданных с помощью jeet.gs. В этом вопросе может помочь сам официальный сайт &lt;a href=&quot;http://jeet.gs/&quot; title=&quot;Jeet.gs&quot;&gt;Jeet.gs&lt;/a&gt; – милости просим &lt;img src=&quot;http://localhost:7788/third/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Создано по материалам:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mojotech/jeet/tree/master/stylus&quot; title=&quot;Jeet for Stylus&quot;&gt;Jeet for Stylus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jeet.gs/&quot; title=&quot;A grid system for humans&quot;&gt;A grid system for humans&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wooster.checkmy.ws/2014/04/responsive-grid-typographie/&quot; title=&quot;Fondations responsive avec Stylus, Jeet et Rupture&quot;&gt;Fondations responsive avec Stylus, Jeet et Rupture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ps&quot;&gt;P.S.&lt;/h4&gt;

&lt;p&gt;В данной статье возможны (и 100% – что есть) неточности и мелкие ошибки. Это и понятно – это мое первое знакомство с Jeet.gs. Поэтому, если будут замечания – милости просим.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/jeet-gs-first-introduction/&quot;&gt;Jeet.gs &amp;#8211; первое знакомство&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on January 15, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Теги шаблона WordPress]]></title>
 <link rel="alternate" type="text/html" href="/tags-wordpress/" />
  <id>/tags-wordpress</id>
  <published>2015-01-07T00:00:00+03:00</published>
  <updated>2015-01-07T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Наверное, это очередная бестолковая вещь, которую мои руки так и чешутся сделать. &lt;img src=&quot;http://localhost:7788/third/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;И раз у меня есть на это время и нет сил на что-либо еще, то тогда уж точно – напишу! “О чем?” – может спросить уважаемый читатель. О тегах WordPress!&lt;/p&gt;

&lt;p&gt;“О Боже!” – это в полном праве может сказать читатель – “… но ведь есть же &lt;a href=&quot;http://codex.wordpress.org/&quot; title=&quot;Codex WordPress&quot; target=&quot;_blank&quot;&gt;Кодекс WordPress&lt;/a&gt;! Зачем еще?!”&lt;/p&gt;

&lt;p&gt;Ну что же – очень и очень резонно! В качестве оправдания могу лишь привести две вещи.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Первая причина&lt;/strong&gt; – из огромного количества тегов WordPress на практике используется лишь малая их часть. И вот здесь я хотел бы собрать воедино как раз те, которые используются.&lt;/p&gt;

&lt;p&gt;Более того, могу сказать, что пользуясь лишь перечисленным ниже списком, я уже успел создать две вполне себе работающих темы под WordPress. Конечно, эти две темы простенькие, но факт остается фактом.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Вторая причина&lt;/strong&gt; – я так быстрее запомню все эти теги WordPress &lt;img src=&quot;http://localhost:7788/third/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Итак – ниже представлен список “практичных” тегов WordPress с их кратким описанием. Все теги условно мною разбиты на области их применения в теме WordPress.&lt;/p&gt;

&lt;h3 id=&quot;wordpress&quot;&gt;Теги шаблона WordPress&lt;/h3&gt;

&lt;p&gt;Выводит название сайта:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bloginfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Выводит описание сайта:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bloginfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает ссылку на главную страницу сайта:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bloginfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает кодировку сайта (под WordPress это всегда utf–8):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bloginfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;charset&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Также возвращает ссылку на главную страницу сайта:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_home_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает путь к файлу стилей style.css темы WordPress (&lt;em&gt;устарело и не рекомендуется использовать&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bloginfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;stylesheet_url&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает путь к текущей теме WordPress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bloginfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;template_url&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Также возвращает путь к текущей теме WordPress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_directory_template_uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает язык сайта (страницы):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает e-mail администратора сайта:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bloginfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;admin_email&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает заголовок просматриваемой статьи или записи:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Подключить файл шаблона header.php:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Подключить файл шаблона sidebar.php:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_sidebar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Подключить файл шаблона footer.php:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_footer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Запуск action в шапке и подвале страницы, обе функции необходимы для правильной работы некоторых плагинов и всей темы WordPress в целом:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;– помещается перед тегом&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_footer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;– помещается перед тегом&lt;/p&gt;

&lt;p&gt;Подключить файл шаблона комментариев:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comments_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вывод текущего года в шаблоне WordPress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;wordpress-1&quot;&gt;Теги записи WordPress&lt;/h3&gt;

&lt;p&gt;Выводит &lt;em&gt;заголовок&lt;/em&gt; текущей страницы или записи:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает &lt;em&gt;ссылку&lt;/em&gt; на текущую страницу или запись:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_permalink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Выводит &lt;em&gt;отрывок&lt;/em&gt; (цитату) записи с помещением в конец этой цитаты символов […] (может существовать только внутри цикла loop):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Выводит &lt;em&gt;полное содержимое&lt;/em&gt; (весь текст) текущей записи (может существовать только внутри цикла loop):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Выводит &lt;em&gt;имя автора&lt;/em&gt; записи:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Выводит &lt;em&gt;время&lt;/em&gt; (дату) публикации текущей записи:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Стандартный цикл&lt;/em&gt; loop для вывода записей в шаблоне WordPress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;have_posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;have_posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endwhile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Расширенный пример (&lt;em&gt;показанного выше&lt;/em&gt;) стандартного цикла loop, который может послужить в качестве &lt;em&gt;миниатюрного шаблона&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;have_posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;have_posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;


&lt;span class=&quot;x&quot;&gt;&amp;lt;a href=&amp;quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_permalink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endwhile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает ссылку на &lt;em&gt;предыдущую запись&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previous_post_link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Возвращает ссылку на &lt;em&gt;следующую запись&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next_post_link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вывести &lt;em&gt;теги&lt;/em&gt; записи (может существовать только внутри цикла loop):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вывести ссылку на &lt;em&gt;комментарии&lt;/em&gt; к записи (может существовать только внутри цикла loop):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comments_popup_link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вывести &lt;em&gt;миниатюру&lt;/em&gt; записи внутри самой записи:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_post_thumbnail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вывод &lt;em&gt;миниатюры по умолчанию&lt;/em&gt;, если не задана другая миниатюра:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;has_post_thumbnail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the_post_thumbnail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;amp;lt;img src=“&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bloginfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;template_url&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;/images/image.jpg” alt=“Image”&amp;gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вывести (создать) &lt;em&gt;постраничную навигацию&lt;/em&gt; (пагинация):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;posts_nav_link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Подключить виджет в шаблоне WordPress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dynamic_sidebar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;идентификатор виджета&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;functionsphp&quot;&gt;Функции файла functions.php&lt;/h3&gt;

&lt;p&gt;Поставить на загрузку файл js-скриптов:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;wp_enqueue_script();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Поставить на загрузку файл CSS-стилей:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;wp_enqueue_style();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Пример функции для загрузки скриптов и стилей:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function load_scripts_and_styles(){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	wp_enqueue_script(&amp;#39;jquery_custom&amp;#39;,get_directory_template_uri().&amp;#39;/js/my-jquery.js&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	wp_enqueue_script(&amp;#39;js_custom&amp;#39;,get_directory_template_uri().&amp;#39;/js/my-js.js&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	wp_enqueue_style(&amp;#39;style&amp;#39;,get_directory_template_uri().&amp;#39;/style.css&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;	add_action(&amp;#39;wp_enqueue_scripts&amp;#39;,&amp;#39;load_scripts_and_styles&amp;#39;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Зарегистрировать новую панель под виджеты в шаблоне WordPress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;register_sidebar()&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;имя новой панели&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;id&amp;#39; =&amp;gt; &amp;#39;идентификатор новой панели&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;description&amp;#39; =&amp;gt; &amp;#39;описание новой панели&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;before_widget&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;after_widget&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;before_title&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;after_title&amp;#39; =&amp;gt; &amp;#39;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Включить возможность применения миниатюр в шаблоне WordPress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;add_theme_support(&amp;#39;post-thumbnails&amp;#39;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Установить размер миниатюр в шаблоне по умолчанию:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;set_post_thumbnail_size($width,$height);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Шаблон с метаданными темы WordPress:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Theme Name: Имя темы&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Theme URI: Домашняя страница темы&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Description: Краткое описание темы&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Author: Имя автора темы&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Author URI: Домашняя страница автора темы&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Version: Номер версии темы&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Будет дополняться (&lt;em&gt;возможно&lt;/em&gt;) …&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/tags-wordpress/&quot;&gt;Теги шаблона WordPress&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on January 07, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Nib &#8211; библиотека миксинов под Stylus]]></title>
 <link rel="alternate" type="text/html" href="/nib-stylus/" />
  <id>/nib-stylus</id>
  <published>2014-12-29T00:00:00+03:00</published>
  <updated>2014-12-29T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Легкое знакомство с библиотекой Nib под препроцессор Stylus. Эта библиотека является тем же самым, что Compass или Bourbon под препроцессор Sass.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Библиотека миксинов Nib написана под препроцессор Stylus и является аналогом более известных библиотек Compass или Bourbon под препроцессор Sass. С самим препроцессором Stylus я с вами познакомился немного раньше – скажем так, это было краткое и легкое знакомство.&lt;/p&gt;

&lt;p&gt;Библиотека Nib проживает по адресу – &lt;a href=&quot;https://github.com/tj/nib&quot; title=&quot;Nib&quot;&gt;Nib GitHub&lt;/a&gt;. Она маленькая и легкая, но должна быть полезной. Поэтому мне необходимо с ней познакомиться поближе.&lt;/p&gt;

&lt;h3 id=&quot;nib&quot;&gt;Установка библиотеки Nib&lt;/h3&gt;

&lt;p&gt;В Сети мною было найдено два способа установки данной библиотеки:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;с использованием GitHub&lt;/li&gt;
  &lt;li&gt;с использованием менеджера пакетов npm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Второй способ мне кажется более удобным, так как в этом случае библиотека устанавливается &lt;strong&gt;глобально&lt;/strong&gt; и доступна для любого проекта из любого места файловой системы. В первом же случае придется устанавливать библиотеку каждый раз – &lt;strong&gt;локально&lt;/strong&gt; в каждый отдельный проект.&lt;/p&gt;

&lt;p&gt;Если вдруг в системе еще не установлен препроцессор Stylus, то первоначально необходимо установить его командой:&lt;/p&gt;

&lt;pre&gt;// Command Line

    $ sudo npm install stylus --global
  &lt;/pre&gt;

&lt;p&gt;Не забудьте добавить ключ &lt;code&gt;--global&lt;/code&gt;, чтобы препроцессор &lt;strong&gt;установился глобально&lt;/strong&gt; в системе.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Установка библиотеки Nib&lt;/strong&gt; почти ничем не отличается от установки препроцессора и выполняется командой:&lt;/p&gt;

&lt;pre&gt;// Command Line

    $ sudo npm install nib --global
  &lt;/pre&gt;

&lt;p&gt;Отлично! Все, что теперь осталось сделать – это &lt;strong&gt;подключить библиотеку&lt;/strong&gt; в текущий проект (текущий рабочий Stylus-файл).&lt;/p&gt;

&lt;p&gt;Это выполняется директивой &lt;code&gt;@import&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;// Stylus

    @import &#39;nib&#39;
  &lt;/pre&gt;

&lt;p&gt;Проверим, что библиотека подключена без ошибок и отрабатывает в проекте\файле. Для этого запишем в файле &lt;code&gt;style.styl&lt;/code&gt; несколько миксинов этой библиотеки и “натравим” на файл &lt;code&gt;style.styl&lt;/code&gt; утилиту &lt;code&gt;stylus&lt;/code&gt; с несколькими ключами:&lt;/p&gt;

&lt;pre&gt;// Command Line

    $ stylus -u nib -w style.styl
  &lt;/pre&gt;

&lt;p&gt;здесь:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;-u nib&lt;/code&gt; – говорит о том, что при компиляции в CSS должно учитываться наличие библиотеки Nib&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;-w style.styl&lt;/code&gt; – мониторить изменения в файле &lt;code&gt;style.styl&lt;/code&gt; и своевременно выполнять его компиляцию в CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Посмотрим на результат компиляции Stylus в CSS – очень уж любопытно, получилось ли?&lt;figure id=&quot;attachment_2163&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/12/nib.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/12/nib-600x440.png&quot; alt=&quot;nib&quot; width=&quot;600&quot; height=&quot;440&quot; class=&quot;size-medium wp-image-2163&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Библиотека Nib в действии&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;p&gt;Отлично! Все работает четко – миксины преобразуются в готовый CSS-код. Правда, выглядит он немного неприглядно – не причесанный и не почищенный.&lt;/p&gt;

&lt;p&gt;Ну это решается просто – достаточно на этот CSS-файл натравить Gulp-плагины &lt;a href=&quot;https://www.npmjs.com/package/gulp-csscomb&quot; title=&quot;gulp-csscomb&quot;&gt;gulp-csscomb&lt;/a&gt; и &lt;a href=&quot;https://www.npmjs.com/package/gulp-autoprefixer&quot; title=&quot;gulp-autoprefixer&quot;&gt;gulp-autoprefixer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Главное – библиотека подключена и работает!&lt;/p&gt;

&lt;h3 id=&quot;nib-8211----gulp&quot;&gt;Nib – как подружить с Gulp&lt;/h3&gt;

&lt;p&gt;До этого момента мною использовалась нативная утилита &lt;code&gt;stylus&lt;/code&gt; для компиляции из формата Stylus в формат CSS. И в том числе – с поддержкой библиотеки Nib.&lt;/p&gt;

&lt;p&gt;Однако, на практике такой способ вряд-ли будет использоваться. Я имею ввиду, что использование лишь одной утилиты &lt;code&gt;stylus&lt;/code&gt; – я сомневаюсь, что кому-либо пригодиться.&lt;/p&gt;

&lt;p&gt;Гораздо практичнее использование Gulp, у которого есть соответствующий плагин &lt;a href=&quot;https://www.npmjs.com/package/gulp-stylus&quot; title=&quot;Stylus plugin for gulp&quot;&gt;gulp-stylus&lt;/a&gt; для компиляции из формата Stylus в CSS.&lt;/p&gt;

&lt;p&gt;Этот плагин имеет поддержку библиотеки Nib, достаточно только настроить таковую в своем проекте.&lt;/p&gt;

&lt;p&gt;Ниже я рассмотрю процесс подключения и настройки Nib (а заодно – и Stylus) в моем любимом Gulp.&lt;/p&gt;

&lt;h4 id=&quot;gulp-stylus--nib&quot;&gt;Установка плагинов gulp-stylus и nib&lt;/h4&gt;

&lt;p&gt;В своем рабочем проекте необходимо установить два плагина (&lt;em&gt;с помощью консоли&lt;/em&gt;):&lt;/p&gt;

&lt;pre&gt;// Command Line

  $ sudo npm install gulp-stylus nib --save-dev
  &lt;/pre&gt;

&lt;p&gt;В результате оба пакета установятся в проект и добавятся в файл package.json в качестве зависимостей:&lt;/p&gt;

&lt;pre&gt;// Javascript

  ...
  &quot;gulp-stylus&quot;: &quot;^1.3.4&quot;,
  &quot;nib&quot;: &quot;^1.0.4&quot;
  ...
  &lt;/pre&gt;

&lt;h4 id=&quot;gulpfilejs&quot;&gt;Настройка файла gulpfile.js&lt;/h4&gt;

&lt;p&gt;В файле gulpfile.js необходимо внести несколько правок. Первым делом – добавляем в начало файла две с строки:&lt;/p&gt;

&lt;pre&gt;// Javascript

  var gulp = require(&#39;gulp&#39;),
    stylus = require(&#39;gulp-stylus&#39;),
    nib = require(&#39;nib&#39;),
  ...
  &lt;/pre&gt;

&lt;p&gt;Затем создаем задачу task для компиляции из Stylus в CSS. В качестве параметра у метода &lt;code&gt;stylus&lt;/code&gt; будет дополнительная строка &lt;code&gt;use:[nib()]&lt;/code&gt;, говорящая о том, что необходимо использовать библиотеку Nib:&lt;/p&gt;

&lt;pre&gt;// Javascript

  gulp.task(&#39;stylus&#39;, function () {
    gulp.src(&#39;app/styles/common.styl&#39;)
      .pipe(plumber())
      .pipe(stylus({use:[nib()]}))
      .pipe(prefixer({
        browsers: [&#39;last 2 versions&#39;]
      }))
      .pipe(csscomb())
      .pipe(gulp.dest(&#39;dist/assets/styles/&#39;));
  });
  &lt;/pre&gt;

&lt;p&gt;Вот это и все (&lt;em&gt;необходимый минимум&lt;/em&gt;), чтобы подружить библиотеку Nib c Gulp.&lt;/p&gt;

&lt;p&gt;Не забываем подключить в stylus-файл проекта библиотеку:&lt;/p&gt;

&lt;pre&gt;// Stylus

@import &#39;nib&#39;
&lt;/pre&gt;

&lt;h3 id=&quot;nib-1&quot;&gt;Миксины библиотеки Nib&lt;/h3&gt;

&lt;p&gt;С подключением библиотеки Nib разобрались. Остался вопрос – а что там внутри, под капотом у Nib?&lt;/p&gt;

&lt;p&gt;С малой толикой миксинов я уже познакомился, когда создавал тестовую страничку подключения и компиляции (&lt;em&gt;см. изображение выше&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;На &lt;a href=&quot;https://github.com/tj/nib&quot; title=&quot;Nib GitHub&quot;&gt;официальной странице Nib&lt;/a&gt; есть ссылка на документацию по миксинам – &lt;a href=&quot;http://tj.github.io/nib/&quot; title=&quot;Документация миксинов Nib&quot;&gt;Документация миксинов Nib&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Там все описано просто и понято, с подробными примерами. Осталось только читать и пользоваться.&lt;/p&gt;

&lt;p&gt;В принципе, больше и сказать мне нечего (&lt;em&gt;по крайней мере – мне&lt;/em&gt;) по поводу миксинов в Nib. Дальше только – брать их и использовать на практике.&lt;/p&gt;

&lt;p&gt;На этом все – оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-2162&quot; class=&quot;post-ratings&quot; data-nonce=&quot;d796592aba&quot;&gt;&lt;img id=&quot;rating_2162_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(2162, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(4.3, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2162_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(2162, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4.3, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2162_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(2162, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4.3, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2162_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(2162, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4.3, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2162_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(2162, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4.3, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;3&lt;/strong&gt; votes, average: &lt;strong&gt;4,33&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_2162_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-2162-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/nib-stylus/&quot;&gt;Nib &amp;#8211; библиотека миксинов под Stylus&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on December 29, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Модальное окно на Easy FancyBox]]></title>
 <link rel="alternate" type="text/html" href="/modal-window-easy-fancybox/" />
  <id>/modal-window-easy-fancybox</id>
  <published>2014-12-29T00:00:00+03:00</published>
  <updated>2014-12-29T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Три способа подключения всплывающего (модального) окна на WordPress, созданного с помощью плагинов Easy FancyBox и Contact Form 7.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Данная статья посвящена вопросу создания всплывающего (модального) окна на WordPress. Такие окна еще называются модальными и их также можно создавать на CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/12/modal_window.jpg&quot;&gt;&lt;img class=&quot;aligncenter wp-image-2152 size-medium&quot; src=&quot;http://localhost:7788/third/wp-content/uploads/2014/12/modal_window-515x600.jpg&quot; alt=&quot;easy fancybox&quot; width=&quot;515&quot; height=&quot;600&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Этой статьи очень легко могло бы не быть, если бы не &lt;strong&gt;две причины&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Первая причина&lt;/strong&gt; – Сеть буквально завалена статьями и статейками на эту тему, но все они одна в одну повторяют друг друга. И только в одной я нашел грамотное, точное и краткое описание, как выполнять подключение модального окна в WordPress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Вторая причина&lt;/strong&gt; – у меня первоначально созданное модальное окно не заработало. И только на одном из форумов я нашел ответ на свой вопрос.&lt;/p&gt;

&lt;p&gt;Ниже привожу описания решения обоих вопросов.&lt;/p&gt;

&lt;h3 id=&quot;easy-fancybox&quot;&gt;Три способа подключения модального окна Easy FancyBox&lt;/h3&gt;

&lt;p&gt;Итак, как я уже говорил выше, статей по вопросу создания модального окна с помощью плагинов &lt;a href=&quot;https://wordpress.org/plugins/easy-fancybox/&quot; title=&quot;Easy FancyBox&quot;&gt;Easy FancyBox&lt;/a&gt; и &lt;a href=&quot;http://contactform7.com/&quot; title=&quot;Contact Form 7&quot;&gt;Contact Form 7&lt;/a&gt; существует огромное количество. Поэтому здесь я его описывать не буду. А коснусь вопроса – как подключить уже созданную форму в WordPress.&lt;/p&gt;

&lt;h4 id=&quot;easy-fancybox--&quot;&gt;Код формы Easy FancyBox в шаблон&lt;/h4&gt;

&lt;p&gt;Если готовая форма &lt;strong&gt;встраивается непосредственно в шаблон&lt;/strong&gt;, то код должен быть таким:&lt;/p&gt;

&lt;pre&gt;// HTML

  &lt;a class=&quot;fancybox&quot; href=&quot;#contact_form_pop&quot;&gt;Контактная форма&lt;/a&gt;
  

&lt;div class=&quot;fancybox-hidden&quot; style=&quot;display:none&quot;&gt;
  &lt;div id=&quot;contact_form_pop&quot;&gt;
    &lt;?php echo do_shortcode(&#39;[contact-form-7 id=&quot;&quot; title=&quot;&quot;]&#39;); ?&gt;
        
  &lt;/div&gt;
    
&lt;/div&gt;
&lt;/pre&gt;

&lt;p&gt;Обратите внимание на конструкцию &lt;code&gt;&amp;lt;?php echo do_shortcode(&#39;&#39;); ?&amp;gt;&lt;/code&gt;, в которую вставлен shortcode, созданный в плагине Contact Form 7.&lt;/p&gt;

&lt;h4 id=&quot;easy-fancybox---1&quot;&gt;Код формы Easy FancyBox на страницу&lt;/h4&gt;

&lt;p&gt;Если готовая форма &lt;strong&gt;встраивается в запись или на страницу&lt;/strong&gt;, то код должен быть таким:&lt;/p&gt;

&lt;pre&gt;// HTML

  &lt;a class=&quot;fancybox&quot; href=&quot;#contact_form_pop&quot;&gt;Контактная форма&lt;/a&gt;
    

&lt;div class=&quot;fancybox-hidden&quot; style=&quot;display:none&quot;&gt;
  &lt;div id=&quot;contact_form_pop&quot;&gt;
    [contact-form-7 id=&quot;&quot; title=&quot;&quot;]
          
  &lt;/div&gt;
      
&lt;/div&gt;
&lt;/pre&gt;

&lt;p&gt;Здесь shortcode вставляется “как есть” – как его создал плагин Contact Form 7.&lt;/p&gt;

&lt;h4 id=&quot;easy-fancybox---2&quot;&gt;Код формы Easy FancyBox в виджет&lt;/h4&gt;

&lt;p&gt;Готовую форму можно встраивать в виджет, но для этого сначала нужно &lt;strong&gt;включить поддержку shortcode&lt;/strong&gt; в WordPress. Для этого в файле &lt;code&gt;functions.php&lt;/code&gt; нужно добавить строку:&lt;/p&gt;

&lt;pre&gt;// PHP

  add_filter(&#39;widget_text&#39;, &#39;do_shortcode&#39;);
&lt;/pre&gt;

&lt;p&gt;Теперь виджет “Текст” имеет поддержку shortcode и &lt;strong&gt;вставить готовую форму в виджет&lt;/strong&gt; “Текст” нужно таким образом:&lt;/p&gt;

&lt;pre&gt;// HTML

  &lt;a class=&quot;fancybox&quot; href=&quot;#contact_form_pop&quot;&gt;Контактная форма&lt;/a&gt;
    

&lt;div class=&quot;fancybox-hidden&quot; style=&quot;display:none&quot;&gt;
  &lt;div id=&quot;contact_form_pop&quot;&gt;
    [contact-form-7 id=&quot;&quot; title=&quot;&quot;]
          
  &lt;/div&gt;
      
&lt;/div&gt;
&lt;/pre&gt;

&lt;p&gt;Здесь shortcode вставляется точно также – без изменений, как есть из плагина Contact Form 7.&lt;/p&gt;

&lt;p&gt;Все три способа были “подсмотрены” мною здесь – “&lt;a href=&quot;http://web.warwolf.org/kontaktnaya-forma-contact-form-7-vo-vsplyvayushhem-o/&quot; title=&quot;Контактная форма (Contact Form 7) во всплывающем окне&quot;&gt;Контактная форма (Contact Form 7) во всплывающем окне&lt;/a&gt;“.&lt;/p&gt;

&lt;h3 id=&quot;easy-fancybox---3&quot;&gt;Модальное окно Easy FancyBox не работает&lt;/h3&gt;

&lt;p&gt;Перехожу ко второму вопросу – все настроено, но ничего не работает. Такое было у меня и было связано с тем, что мною была сверстана и создана тема под Worpdress с нуля.&lt;/p&gt;

&lt;p&gt;Проблема заключалась в том, что я “забыл” добавить в созданную тему две функции, которые &lt;strong&gt;обязательно должны присутствовать&lt;/strong&gt; в любой WordPress-теме – &lt;code&gt;wp_head();&lt;/code&gt; и &lt;code&gt;wp_footer();&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;В файле шапки сайта &lt;code&gt;header.php&lt;/code&gt; перед закрывающим тегом &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; необходимо вставить запись, которая будет выглядеть таким образом:&lt;/p&gt;

&lt;pre&gt;// PHP

  ...
  &lt;?php wp_head(); ?&gt;
  &amp;lt;/head&amp;gt;
&lt;/pre&gt;

&lt;p&gt;В файле подвала сайта &lt;code&gt;footer.php&lt;/code&gt; перед закрывающим тегом &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; необходимо вставить запись, которая будет выглядеть таким образом:&lt;/p&gt;

&lt;pre&gt;// PHP

  ...
  &lt;?php wp_footer(); ?&gt;
  &amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-2150&quot; class=&quot;post-ratings&quot; data-nonce=&quot;c4c3a72e34&quot;&gt;&lt;img id=&quot;rating_2150_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(2150, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2150_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(2150, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2150_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(2150, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2150_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(2150, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2150_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(2150, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;3&lt;/strong&gt; votes, average: &lt;strong&gt;5,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_2150_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-2150-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/modal-window-easy-fancybox/&quot;&gt;Модальное окно на Easy FancyBox&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on December 29, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Stylus &#8211; знакомство с препроцессором]]></title>
 <link rel="alternate" type="text/html" href="/stylus-introduction/" />
  <id>/stylus-introduction</id>
  <published>2014-12-27T00:00:00+03:00</published>
  <updated>2014-12-27T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Настало время познакомиться с препроцессором Stylus. Ниже привожу перевод статьи от David Walsh &lt;a href=&quot;#note-2122-1&quot; title=&quot;David Walsh &amp;#8211; web-разработчик и евангелист Mozilla&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;{#return-note-2122-1.simple-footnote}, посвященную малоизвестному, но крайне полезному препроцессору Stylus. Оригинал статьи размещен здесь – &lt;a href=&quot;http://blog.teamtreehouse.com/getting-started-stylus&quot; title=&quot;Getting Started with Stylus&quot;&gt;Getting Started with Stylus&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-2127&quot; src=&quot;http://localhost:7788/third/wp-content/uploads/2014/12/stylus-logo.png&quot; alt=&quot;stylus&quot; width=&quot;220&quot; height=&quot;209&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В среде web-разработчиков можно часто и постоянно слышать только о двух препроцессорах: &lt;a href=&quot;http://sass-lang.com/&quot; title=&quot;Sass&quot;&gt;Sass&lt;/a&gt; и &lt;a href=&quot;http://lesscss.org/&quot; title=&quot;LESS&quot;&gt;LESS&lt;/a&gt;. Однако, существует еще один препроцессор, о котором слышно совсем не так часто – это &lt;a href=&quot;http://learnboost.github.io/stylus/&quot; title=&quot;Stylus&quot;&gt;Stylus&lt;/a&gt;. При редизайне Mozilla Developer Network мною был выбран Stylus по нескольким причинам:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;так как Stylus основан на &lt;a href=&quot;http://nodejs.org/&quot; title=&quot;Node.js&quot;&gt;Node.js&lt;/a&gt;, то отпадает необходимость в использовании сторонней технологии (Sass требует для своей работы Ruby)&lt;/li&gt;
  &lt;li&gt;Stylus предоставляет набор &lt;a href=&quot;https://github.com/LearnBoost/stylus/blob/master/docs/js.md&quot; title=&quot;JavaScript API&quot;&gt;JavaScript API&lt;/a&gt;, что делает возможным дальнейшую настройку этого инструмента&lt;/li&gt;
  &lt;li&gt;синтаксис Stylus не нуждается в скобках (brackets), запятых (comma), двоеточиях (colons), точках с запятыми (semicolon) – он целиком и полностью основан на использовании табуляции и пробелов; но если необходимо использовать любой из видов пунктуаций, то его можно легко применить в Stylus – компиляция произойдет корректно&lt;/li&gt;
  &lt;li&gt;под препроцессор Stylus имеется готовая библиотека миксинов (mixin) под названием &lt;a href=&quot;https://github.com/visionmedia/nib&quot; title=&quot;Nib&quot;&gt;Nib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;stylus&quot;&gt;Установка Stylus&lt;/h3&gt;

&lt;p&gt;Препроцессор Stylus является Open Source проектом, расположенным на GitHub, поэтому его можно легко установить как из исходных файлов, так и с помощью менеджера пакетов npm:&lt;/p&gt;

&lt;pre&gt;$ sudo npm install stylus -g&lt;/pre&gt;

&lt;p&gt;CSS-файлы, созданные при помощи синтаксиса Stylus, должны иметь расширение ‘.styl’ и могут располагаться в любом месте проекта. Препроцессор Stylus не имеет какого-либо конфигурационного файла, для начала компиляции достаточно запустить утилиту командной строки &lt;code&gt;stylus&lt;/code&gt; с минимальным набором ключей:&lt;/p&gt;

&lt;pre&gt;$ stylus app/main.styl --out /dist --compress&lt;/pre&gt;

&lt;p&gt;Представленная выше команда выполняет компиляцию исходного stylus-файла &lt;code&gt;main.styl&lt;/code&gt; в директорию &lt;code&gt;/dist&lt;/code&gt; с тем же самым именем &lt;code&gt;main.styl&lt;/code&gt;. Другими словами, файл &lt;code&gt;main.styl&lt;/code&gt; компилируется в файл &lt;code&gt;main.css&lt;/code&gt; и помещается в директорию &lt;code&gt;/dist&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Утилита &lt;code&gt;stylus&lt;/code&gt; может запускаться не только для однократной компиляции, но и отслеживать изменения файлов, выполняя компиляцию на лету; для этого имеется ключ &lt;code&gt;--watch&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;$ stylus --watch app/main.styl&lt;/pre&gt;

&lt;p&gt;Как можно догадаться, у программы &lt;code&gt;stylus&lt;/code&gt; имеется гораздо больше опций, с полным списком которых можно ознакомиться здесь – &lt;a href=&quot;https://github.com/LearnBoost/stylus/blob/master/docs/executable.md&quot; title=&quot;Executable&quot;&gt;Executable&lt;/a&gt;. В частности, с помощью нужных ключей можно выполнять обратную конвертацию из CSS в Stylus, сравнивать ввод\вывод и многое дугое.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Но приступим к рассмотрению самого главного, ради чего и затевался данный перевод – синтаксису и возможностям препроцессора Stylus&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;stylus-1&quot;&gt;Основы синтаксиса Stylus&lt;/h3&gt;

&lt;p&gt;Синтаксис Stylus очень похож на синтаксис остальных препроцессоров (Sass или LESS). Но давайте более детально рассмотрим, что он из себя представляет на деле:&lt;/p&gt;

&lt;pre&gt;/*  Простая переменная  */
  base-font-size = 12px

  /* Инициализация переменной с помощью вызова миксина */
  body-background = invert(#ccc)

  /* Селектор и набор правил для него */
  body
    color #333
    background #fff

  /* Вложенность правил */
  nav
    margin 10px
      ul
        list-style-type none
          &amp;gt; li
	          display inline-block
	          &amp;#038;.current
	            background-color lightblue

  /* Использование вычисляемых значений */
  div.column
    margin-right (grid-spacing / 2)
    margin-top (grid-spacing * 2)

  /* Использование ранее установленного значения */
  div.center-column
    width 200px
    margin-left -(@width / 2)

  /* Задание значений, полученных как результат вычислений миксинов */
  .promo
    apply-promo-style()
    apply-width-center(400px)

  /* Итерация в цикле */
  table
    for row in 1 2 3 4 5
      tr:nth-child({row})
        height 10px * row

  /* Другой вариант итерации в цикле */
  for row in (1..5)
    tr:nth-child({row})
      height 10px * row

  /* Импортирование в Stylus-файл другой таблицы стилей в формате Stylus */
  @import &quot;links.styl&quot;

  /* extend существующего класса */
  .warning
    @extend .block
&lt;/pre&gt;

&lt;p&gt;В принципе, ничего нового в вышесказанном нет – все эти моменты также существуют в других препроцессорах. Если вдруг в синтаксисе не достает скобок, двоеточий или запятых, то их можно смело добавлять в код – препроцессор Stylus вас прекрасно поймет и в этом случае.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Создание и использование миксинов&lt;/h3&gt;

&lt;p&gt;Миксины чрезвычайно полезны по нескольким причинам. Благодаря им при написании стилей на CSS можно использовать логику, а также структурировать код.&lt;/p&gt;

&lt;p&gt;Создание миксинов в Stylus является простой задачей, а синтаксис миксинов именно такой, какой и ожидалось увидеть:&lt;/p&gt;

&lt;pre&gt;/* Простой миксин для добавления вендорных префиксов.

  Использование:
  vendorize(box-sizing, border-box)

*/

  vendorize(property, value)
    -webkit-{property} value
    -moz-{property} value
    -ms-{property} value
    {property} value

&lt;/pre&gt;

&lt;p&gt;При создании миксинов под Stylus можно задать значения по умолчанию для аргументов:&lt;/p&gt;

&lt;pre&gt;/* Миксин создания треугольника на CSS */

  generate-arrow(arrow-width = 10px)
    &amp;#038;:before, &amp;#038;:after
      content &#39;&#39;
      height 0
      width 0
      position absolute
      border arrow-width solid transparent

&lt;/pre&gt;

&lt;p&gt;Миксин может возвращать вычисляемое значение с помощью ключевого слова &lt;code&gt;return&lt;/code&gt; или же возвращать стили, определенные внутри самого миксина. Такие стили можно применить к элементу, который вызывает этот миксин:&lt;/p&gt;

&lt;pre&gt;/* Миксин для задания стилей к текущему элементу и дочерним элементам текущего элемента */

    special-homestyles(background = &#39;#ccc&#39;)
      background-color background
        a
          color lightblue
	      &amp;#038;.visited
	        color navy

&lt;/pre&gt;

&lt;p&gt;И конечно же, внутри миксинов можно использовать условия (впрочем, как и в любом другом месте кода на Stylus):&lt;/p&gt;

&lt;pre&gt;/* Миксин создания grid на основе минимального\максимального значений и инкремента */

    generate-grid(increment,start,end,return-dimension=false)
      total = start
	for n, x in 0..((end - start) / increment)
	  if return-dimension
	    if x+1 is return-dimension
	      return total
	        else
		  .column-{x+1}
		     width total
		total = total + increment

&lt;/pre&gt;

&lt;p&gt;Представленный выше миксин генерирует grid на основе минимального значения (минимальной ширины столбца), максимального значения (максимальной ширины столбца) и количества столбцов (которое изменяется с помощью инкремента). Последний аргумент return-dimension служит для указания того, будет ли миксин просто возвращать полученное значение, не создавая CSS-классов.&lt;/p&gt;

&lt;h3 id=&quot;stylus-2&quot;&gt;Полезные миксины Stylus&lt;/h3&gt;

&lt;p&gt;При работе над проектом MDN мне потребовалось большое количество полезных миксинов под Stylus, например таких, как поддержка RTL, поддержка локализации, а также поддержка большого числа браузеров. Ниже я представлю некоторые из этих миксинов – возможно, они пригодятся на практике некоторым из читателей.&lt;/p&gt;

&lt;h4 id=&quot;last-child&quot;&gt;Обнуление last child&lt;/h4&gt;

&lt;p&gt;Данный миксин был создан для обнуления пустого пространства у последнего элемента блока-родителя. Как правило, такими пространствами в CSS являются &lt;code&gt;padding-bottom&lt;/code&gt; и &lt;code&gt;margin-bottom&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;/* Удаление пустого пространства у элемента, если он является последним у своего родителя */

  prevent-last-child-spacing(element=“*”, property=“padding-bottom”)
    if element is “*”
      element = unquote(element)
        &amp;#038; &amp;gt; {element}:last-child
          {property} 0

&lt;/pre&gt;

&lt;p&gt;С помощью этого миксина устанавливается &lt;code&gt;margin&lt;/code&gt; или &lt;code&gt;padding&lt;/code&gt; для блока-родителя. А затем просто убирается пустое пространство у последнего элемента этого блока.&lt;/p&gt;

&lt;h4 id=&quot;placeholder&quot;&gt;Стилизация placeholder&lt;/h4&gt;

&lt;p&gt;Стилизация placeholder является достаточно хитрой задачей из-за необходимости использования вендорных префиксов, поэтому использование миксина значительно упрощает эту задачу:&lt;/p&gt;

&lt;pre&gt;set-placeholder-style(prop, value)
   &amp;#038;::-webkit-input-placeholder
     {prop} value
   &amp;#038;::-moz-input-placeholder
     {prop} value

&lt;/pre&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Заключение&lt;/h3&gt;

&lt;p&gt;На этом перевод закончен.&lt;/p&gt;

&lt;p&gt;От себя могу добавить.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Под Sublime Text 3 имеется плагин &lt;a href=&quot;https://sublime.wbond.net/packages/Stylus&quot; title=&quot;Stylus&quot;&gt;Stylus&lt;/a&gt; для подсветки синтаксиса и автоматической табуляции. Если планируется дальнейшая работа в Stylus, то данный плагин обязателен к установке – без него просто тяжело и долго кодить.&lt;figure id=&quot;attachment_2137&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;
&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/12/sublime_stylus.png&quot;&gt;&lt;img class=&quot;wp-image-2137 size-medium&quot; src=&quot;http://localhost:7788/third/wp-content/uploads/2014/12/sublime_stylus-600x314.png&quot; alt=&quot;stylus-sublime-text-3&quot; width=&quot;600&quot; height=&quot;314&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Плагин Stylus в Sublime Text 3&amp;lt;/figcaption&amp;gt;&lt;/figure&gt; &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Плагин Emmet имеет поддержку синтаксиса Stylus (&lt;em&gt;меня Emmet не перестает радовать&lt;/em&gt;). Все &lt;a href=&quot;http://docs.emmet.io/cheat-sheet/&quot; title=&quot;Emmet CheatSheet&quot;&gt;горячие клавиши Emmet&lt;/a&gt; остались неизменными и под Stylus, как если бы я кодил в старом добром CSS.&lt;/li&gt;
  &lt;li&gt;На моем любимом YouTube-канале Level Up Tuts недавно вышла небольшая серия видео-обзоров по Stylus – &lt;a href=&quot;http://youtu.be/eJahtnmywMI&quot; title=&quot;Stylus Tutorials&quot;&gt;Stylus Tutorials&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-2122&quot; class=&quot;post-ratings&quot; data-nonce=&quot;e511afad58&quot;&gt;&lt;img id=&quot;rating_2122_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(2122, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2122_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(2122, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2122_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(2122, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2122_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(2122, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2122_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(2122, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;4&lt;/strong&gt; votes, average: &lt;strong&gt;5,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_2122_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-2122-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;simple-footnotes&quot;&gt;
  &lt;p class=&quot;notes&quot;&gt;
    Notes:
  &lt;/p&gt;
  
  &lt;ol&gt;
    &lt;li id=&quot;note-2122-1&quot;&gt;
      David Walsh &amp;#8211; web-разработчик и евангелист Mozilla &lt;a href=&quot;#return-note-2122-1&quot;&gt;&amp;#8617;&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;/stylus-introduction/&quot;&gt;Stylus &amp;#8211; знакомство с препроцессором&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on December 27, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Стилизация SVG с помощью CSS &#8211; Часть 2]]></title>
 <link rel="alternate" type="text/html" href="/svg-css-part-2/" />
  <id>/svg-css-part-2</id>
  <published>2014-11-30T00:00:00+03:00</published>
  <updated>2014-11-30T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Продолжение предыдущей статьи &lt;a href=&quot;http://localhost:7788/third/?p=1989&quot; title=&quot;Стилизация SVG с помощью CSS - Часть 1&quot; target=&quot;_blank&quot;&gt;Стилизация SVG с помощью CSS – Часть 1&lt;/a&gt;, посвященной формату векторной графики SVG.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;css&quot;&gt;Стилизация с помощью CSS&lt;/h2&gt;

&lt;p&gt;Между языками HTML и CSS существует четкая и ясная взаимосвязь: язык HTML предназначен для &lt;strong&gt;структуризации контента&lt;/strong&gt; на странице; задача языка CSS – внешнее &lt;strong&gt;оформление этого контента&lt;/strong&gt;. Формат SVG размывает четкие границы этой взаимосвязи. Например, формат версии SVG1.1 не нуждается в CSS для стилизации отдельных элементов SVG-объектов – для этой цели имеются так называемые &lt;strong&gt;презентационные атрибуты&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Презентационные атрибуты&lt;/strong&gt; являются сокращениями CSS-свойств для SVG-элементов. Можно думать об этих атрибутах, как о CSS-свойствах для SVG с особым синтаксисом. К этим свойствам применима каскадность стилей, но в этой статье мы поступим более кратким способом.&lt;/p&gt;

&lt;p&gt;Показанный ниже пример является кодом, в котором используются &lt;strong&gt;презентационные атрибуты&lt;/strong&gt; для стилизации границы &lt;code&gt;“border” (stroke)&lt;/code&gt; и фоновой заливки &lt;code&gt;“background color” (fill)&lt;/code&gt; многоугольника в виде пятиконечной звезды:&lt;/p&gt;

&lt;pre&gt;&amp;lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot; width=&quot;300px&quot; height=&quot;300px&quot; viewBox=&quot;0 0 300 300&quot;&amp;gt;
    &amp;lt;polygon
      fill = &quot;#FF931E&quot;
      stroke = &quot;#ED1C24&quot;
      stroke-width = &quot;5&quot;
      points = &quot;279.1,160.8 195.2,193.3 174.4,280.8   117.6,211.1 27.9,218.3 76.7,142.7 42.1,59.6 129.1,82.7 197.4,24.1 202.3,114 &quot;/&amp;gt;
  &amp;lt;/svg&amp;gt;
  &lt;/pre&gt;
&lt;figure id=&quot;attachment_2092&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;

[&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/star-600x470.png&quot; alt=&quot;Пятиконечная звезда на SVG&quot; width=&quot;600&quot; height=&quot;470&quot; class=&quot;size-medium wp-image-2092&quot; /&gt;][1]&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Пятиконечная звезда на SVG&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;В этом примере атрибуты &lt;code&gt;fill&lt;/code&gt;, &lt;code&gt;stroke&lt;/code&gt;, &lt;code&gt;stroke-width&lt;/code&gt; являются &lt;strong&gt;презентационными атрибутами&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;В SVG набор CSS-свойств может быть представлен в виде атрибутов и наоборот. В спецификации SVG имеется [перечень SVG-атрибутов][2], которые могут быть представлены как CSS-свойства. Некоторые из этих атрибутов абсолютно идентичны CSS-свойствам, как например &lt;code&gt;opacity&lt;/code&gt; или &lt;code&gt;transform&lt;/code&gt;. Другие же, такие как &lt;code&gt;fill&lt;/code&gt;, &lt;code&gt;stroke&lt;/code&gt; или &lt;code&gt;stroke-width&lt;/code&gt;, абсолютно не похожи на свои CSS-аналоги.&lt;/p&gt;

&lt;p&gt;В формате SVG2 имеются несколько &lt;strong&gt;презентационных атрибутов&lt;/strong&gt;, таких как &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;cx&lt;/code&gt;, &lt;code&gt;cy&lt;/code&gt; и некоторые другие, которые невозможно задать с помощью CSS в SVG1.1. Список новых SVG-атрибутов можно посмотреть по этой ссылке – [SVG2 спецификация][3].&lt;/p&gt;

&lt;p&gt;Другим способом стилизации SVG-элементов является использование для этой цели CSS-свойств. Точно также, как и в случае в HTML-элементами, CSS-свойства могут быть заданы с помощью inline-стиля:&lt;/p&gt;

&lt;pre&gt;&amp;lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot; style=&quot;width: 300px; height: 300px;&quot; viewBox=&quot;0 0 300 300&quot;&amp;gt;
  &amp;lt;polygon
    style = &quot;fill: #FF931E; stroke: #ED1C24; stroke-width: 5;&quot;
    points = &quot;279.1,160.8 195.2,193.3 174.4,280.8   117.6,211.1 27.9,218.3 76.7,142.7 42.1,59.6 129.1,82.7 197.4,24.1 202.3,114 &quot;/&amp;gt;
  &amp;lt;/svg&amp;gt;
  &lt;/pre&gt;

&lt;p&gt;CSS-свойства могут быть также заданы с помощью набора правил через тег `&lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;g id=&quot;..&quot;&amp;gt; … &amp;lt;/g&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;lt;/svg&amp;gt;
  &amp;lt;/pre&amp;gt;&lt;/p&gt;
&lt;p&gt;Или же размещен снаружи тега &lt;code&gt;&lt;svg&gt;`, если тег `&lt;svg&gt;` встраивается в HTML-документ как inline-элемент:

&lt;pre&gt;&lt;!-- HTML5 document --&gt;
  
  
  
  
  

&lt;!-- xmlns is optional in an HTML5 document →
  &lt;svg viewBox=&quot;0 0 300 300&quot;&gt;
  &lt;!-- SVG content --&gt;
  &amp;lt;/svg&amp;gt;
  
  
  &lt;/pre&gt;

Если же вы хотите полностью отделить стили от разметки, то всегда можете сделать это при помощи ссылки на внешний файл стилей. Ссылка должна размещаться внутри SVG-элемента и иметь вид `&lt;?xml-stylesheet&gt;`:

&lt;pre&gt;&lt;?xml version=&quot;1.0&quot; standalone=&quot;no&quot;?&gt;
  

&lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;style.css&quot;?&gt;
  &amp;lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot; width=&quot;..&quot; height=&quot;..&quot; viewBox=&quot;..&quot;&amp;gt;
    

&lt;!-- SVG content --&gt;
  &amp;lt;/svg&amp;gt;
  

### Каскады стилей SVG

Как уже говорилось ранее, **презентационные атрибуты** являются специальной разновидностью свойств и что они представляют из себя просто сокращение CSS-свойств, применимых к SVG-элементам. Исходя из вышесказанного, логично предположить, что к презентационным SVG-атрибутам также, как и CSS-свойствам, применимо такое понятие как **каскад стилей**.

Презентационные атрибуты позиционируются как &quot;авторские стилевые правила&quot; и могут быть переопределены любыми другими определениями: внешними таблицами стилей, внутренними таблицами стилей или же inline-стилями.

Диаграмма ниже показывает порядок расположения стилей в каскаде стилей. Чем ниже расположены стили в этой таблице, тем большим количеством вышележащих стилей они могут быть перезаписаны. В нашем случае презентационные стили могут быть переопределены почти всеми другими стилями, кроме **стилей агента пользователя**:&lt;figure id=&quot;attachment_2093&quot; style=&quot;width: 375px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;

[&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/diagram-375x600.jpg&quot; alt=&quot;Таблица каскадности стилей SVG&quot; width=&quot;375&quot; height=&quot;600&quot; class=&quot;size-medium wp-image-2093&quot; /&gt;][4]&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Таблица каскадности стилей SVG&lt;/figcaption&gt;&lt;/figure&gt; 

Например, представленный ниже образец кода является кругом, написанным на SVG. Цвет заливки круга в виде атрибута `fill=&quot;blue&quot;` будет переопределен цветом `deep pink` с помощью правила `style=&quot;fill:deepPink;&quot;`:

&lt;pre&gt;&amp;lt;circle cx=&quot;100&quot; cy=&quot;100&quot; r=&quot;75&quot; fill=&quot;blue&quot; style=&quot;fill:deepPink;&quot; /&amp;gt;
  &lt;/pre&gt;

### Селекторы SVG

Большинство CSS-селекторов могут быть использованы для выборки SVG-элементов. В дополнение к основному типу, классам и идентификаторам, SVG-элементы могут быть стилизованы с помощью [динамических псевдо-классов][5] (`:hover`, `:active`, `:focus`) и [псевдо-классов][6] (`:first-child`, `:visited`, `:link` и `:lang`). Остальные псевдо-классы, включая тех, которые генерируют контент (такие как `::before` и `::after`) не являются частью спецификации SVG и поэтому не могут быть использованы для стилизации SVG-элементов.

Ниже приведен простой пример анимации фоновой заливки цветов круга при наведении. При этом используется селектор тега и псевдо-класс `:hover`:

&lt;pre&gt;&lt;/pre&gt;

Этот пример является простым, но можно создать и гораздо более сложные и интересные примеры. Еще одним простым, но интересным примером может послужить набор иконок [Iconic][7], с помощью которых можно создать зажигающуюся лампочку. Демо-пример представлен здесь - [demo of the effect ][8].

### Замечания

Так как презентационные атрибуты имеют XML-синтаксис, то они **чувствительны к регистру**. Например, при задании цвета заливки SVG-элемента атрибут должен быть записан как `fill=&quot;…&quot;`, но не как `Fill=&quot;…&quot;`.

Более того, ключевые значения этих атрибутов, такие как `italic` в `font-style=&quot;italic&quot;`, также чувствительны к регистру и должны записываться в коде точно так, как это указано в спецификации.

Все остальные стили указываются как CSS-свойства, вне зависимости, где они расположены. Будь то стилевые атрибуты, тег `&lt;br /&gt;
&lt;style&gt;` или внешние таблицы стилей.

 [1]: http://localhost:7788/third/wp-content/uploads/2014/11/star.png
 [2]: http://www.w3.org/TR/SVG/propidx.html &quot;перечень SVG-атрибутов&quot;
 [3]: http://www.w3.org/TR/SVG2/styling.html#SVGStylingProperties &quot;SVG2 спецификация&quot;
 [4]: http://localhost:7788/third/wp-content/uploads/2014/11/diagram.jpg
 [5]: http://www.w3.org/TR/2008/REC-CSS2-20080411/selector.html#dynamic-pseudo-classes &quot;CSS2 dynamic pseudo-classes&quot;
 [6]: http://www.w3.org/TR/2008/REC-CSS2-20080411/selector.html#q15 &quot;pseudo-classes&quot;
 [7]: https://useiconic.com/ &quot;Iconic&quot;
 [8]: http://tutsplus.github.io/Styling-Iconic/styling/index.html &quot;demo of the effect &quot;
&lt;/style&gt;&lt;/svg&gt;&lt;/svg&gt;&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/svg-css-part-2/&quot;&gt;Стилизация SVG с помощью CSS &amp;#8211; Часть 2&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 30, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Плагин Sass CSS Importer]]></title>
 <link rel="alternate" type="text/html" href="/sass-css-importer/" />
  <id>/sass-css-importer</id>
  <published>2014-11-26T00:00:00+03:00</published>
  <updated>2014-11-26T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Краткий обзор плагина Sass CSS Importer для импортирования файлов CSS в файлы Sass.&lt;/p&gt;

&lt;p&gt;В чем заключается вопрос? Как хорошо известно всем, кто постоянно работает с Sass &lt;a href=&quot;#note-2082-1&quot; title=&quot;Sass &amp;#8211; мощный препроцессор для CSS&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;{#return-note-2082-1.simple-footnote}, с помощью директивы &lt;code&gt;@import&lt;/code&gt; можно подключать одни Sass-файлы в другие Sass-файлы.&lt;/p&gt;

&lt;p&gt;Например, подключить файл &lt;code&gt;typography.scss&lt;/code&gt; в файл &lt;code&gt;main.scss&lt;/code&gt; можно так:&lt;/p&gt;

&lt;pre&gt;@import “_typography”;
&lt;/pre&gt;

&lt;p&gt;Оба файла &lt;code&gt;main.scss&lt;/code&gt; и &lt;code&gt;typography.scss&lt;/code&gt; будут объединены препроцессором в один файл &lt;code&gt;main.scss&lt;/code&gt;, который уже будет компилироваться в файл &lt;code&gt;main.css&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Знак подчеркивания в данном случае является &lt;strong&gt;дополнительной опцией&lt;/strong&gt;. Этим знаком препроцессору Sass указывается не выполнять &lt;strong&gt;предварительную компиляцию&lt;/strong&gt; файла &lt;code&gt;typography.scss&lt;/code&gt; в файл &lt;code&gt;typography.css&lt;/code&gt; перед его подключением в &lt;code&gt;main.scss&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Но что, если стоит задача подключения файлов формата CSS в файлы формата Sass? Директива &lt;code&gt;@import&lt;/code&gt; в этом случае помочь не может. CSS-файл &lt;strong&gt;нельзя просто так подключить&lt;/strong&gt; в Sass-файл.&lt;/p&gt;

&lt;p&gt;Задача подключения CSS-файлов в Sass-файлы наиболее часто может возникнуть в случае использования различных готовых слайдеров или каруселей, которые зачастую идут “в комплекте” с минимальными правилами на CSS.&lt;/p&gt;

&lt;p&gt;Что же делать?&lt;/p&gt;

&lt;h3 id=&quot;sass-css-importer&quot;&gt;Плагин Sass CSS Importer&lt;/h3&gt;

&lt;p&gt;Совсем недавно (&lt;em&gt;17 июля сего года&lt;/em&gt;) Chris Eppstein &lt;a href=&quot;#note-2082-2&quot; title=&quot;Chris Eppstein &amp;#8211; один из двух создателей Compass&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;{#return-note-2082-2.simple-footnote} выпустил специальный плагин, задачей которого и является &lt;strong&gt;импортирование CSS-файлов&lt;/strong&gt; в Sass-файлы. Страничка с официальной документацией по плагину Sass CSS Importer расположена на GitHub – &lt;a href=&quot;https://github.com/chriseppstein/sass-css-importer&quot; title=&quot;Sass CSS Importer&quot;&gt;Sass CSS Importer Plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Там все описано кратко и предельно ясно. Однако, я был так доволен тем фактом, что теперь могу свободно подключать CSS в Sass, что решил потратить часть своего времени, чтобы описать его своими словами, по-русски.&lt;/p&gt;

&lt;h3 id=&quot;sass-css-importer-1&quot;&gt;Установка Sass CSS Importer&lt;/h3&gt;

&lt;p&gt;Установка плагина выполняется как обычно, через менеджер пакетов &lt;code&gt;gem&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;$ sudo gem install --pre sass-css-importer
&lt;/pre&gt;

&lt;h3 id=&quot;sass-css-importer-2&quot;&gt;Подключение Sass CSS Importer&lt;/h3&gt;

&lt;p&gt;При использовании фреймворка Compass нужно добавить строку в конфигурационный файл &lt;code&gt;config.rb&lt;/code&gt; своего текущего проекта:&lt;/p&gt;

&lt;pre&gt;require &#39;sass-css-importer&#39;
&lt;/pre&gt;

&lt;h3 id=&quot;css--sass&quot;&gt;Импортирование CSS в Sass&lt;/h3&gt;

&lt;p&gt;Теперь, чтобы импортировать CSS в Sass, нужно воспользоваться все той же директивой &lt;code&gt;@import&lt;/code&gt;, но &lt;strong&gt;со специальным синтаксисом&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;В общем случае этот синтаксис выглядит таким образом:&lt;/p&gt;

&lt;pre&gt;@import &quot;CSS:имя_директории/имя_css_файла”;
&lt;/pre&gt;

&lt;p&gt;В частном случае синтаксис будет выглядеть таким образом:&lt;/p&gt;

&lt;pre&gt;@import &quot;CSS:carousel&quot;;
&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Обратите внимание на важный момент: имя CSS-файла нужно указывать &lt;strong&gt;без расширения&lt;/strong&gt;!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Можно запустить процесс компиляции через командную строку:&lt;/p&gt;

&lt;pre&gt;$ compass watch
&lt;/pre&gt;

&lt;p&gt;… и проверить, что CSS-файл будет включен в общий вывод.&lt;figure id=&quot;attachment_2086&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/sass-css-importer.png&quot;&gt;&lt;img class=&quot;size-medium wp-image-2086&quot; src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/sass-css-importer-600x312.png&quot; alt=&quot;Плагин Sass CSS Importer&quot; width=&quot;600&quot; height=&quot;312&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Плагин Sass CSS Importer&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Заключение&lt;/h3&gt;

&lt;p&gt;В принципе, вот и все, что можно сказать о Sass CSS Importer.&lt;/p&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-2082&quot; class=&quot;post-ratings&quot; data-nonce=&quot;9049352bc1&quot;&gt;&lt;img id=&quot;rating_2082_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(2082, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2082_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(2082, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2082_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(2082, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2082_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(2082, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2082_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(2082, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;4&lt;/strong&gt; votes, average: &lt;strong&gt;4,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_2082_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-2082-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;simple-footnotes&quot;&gt;
  &lt;p class=&quot;notes&quot;&gt;
    Notes:
  &lt;/p&gt;
  
  &lt;ol&gt;
    &lt;li id=&quot;note-2082-1&quot;&gt;
      &lt;a href=&quot;http://sass-lang.com/&quot; title=&quot;Sass&quot;&gt;Sass&lt;/a&gt; &amp;#8211; мощный препроцессор для CSS &lt;a href=&quot;#return-note-2082-1&quot;&gt;&amp;#8617;&lt;/a&gt;
    &lt;/li&gt;
    &lt;li id=&quot;note-2082-2&quot;&gt;
      &lt;a href=&quot;https://github.com/chriseppstein&quot; title=&quot;Chris Eppstein&quot;&gt;Chris Eppstein&lt;/a&gt; &amp;#8211; один из двух создателей &lt;a href=&quot;http://compass-style.org&quot; title=&quot;Compass&quot;&gt;Compass&lt;/a&gt; &lt;a href=&quot;#return-note-2082-2&quot;&gt;&amp;#8617;&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;/sass-css-importer/&quot;&gt;Плагин Sass CSS Importer&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 26, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Знакомимся с &#8220;тихими&#8221; placeholder]]></title>
 <link rel="alternate" type="text/html" href="/sass-selector-placeholder/" />
  <id>/sass-selector-placeholder</id>
  <published>2014-11-21T00:00:00+03:00</published>
  <updated>2014-11-21T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Статья посвящена вопросу “тихих” placeholder’ов в препроцессоре Sass. Что это такое и в чем преимущество их использования. Оригинал статьи размещен здесь – &lt;a href=&quot;http://thesassway.com/intermediate/understanding-placeholder-selectors&quot; title=&quot;Understanding placeholder selectors&quot;&gt;Understanding placeholder selectors&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Препроцессор Sass предоставляет несколько способов создания одного фрагмента кода, который будет многократно использоваться внутри CSS-кода.&lt;/p&gt;

&lt;p&gt;Например, можно воспользоваться миксинами (&lt;code&gt;mixins&lt;/code&gt;) для вставки группы CSS-свойств (или CSS-правил) в CSS-коде.&lt;/p&gt;

&lt;p&gt;Или же использовать директиву &lt;code&gt;@extend&lt;/code&gt; для расширения набора CSS-свойств одного HTML-элемента за счет CSS-свойств другого HTML-элемента.&lt;/p&gt;

&lt;p&gt;В Sass версии 3.2 введена новая концепция под названием &lt;code&gt;placeholder&lt;/code&gt;, которая делает использование директивы &lt;code&gt;@extend&lt;/code&gt; еще более эффективным способом.&lt;/p&gt;

&lt;p&gt;Но прежде чем мы перейдем к рассмотрению этого нововведенния, давайте остановимся на моменте, каким образом работает расширение (&lt;code&gt;@extend&lt;/code&gt;) CSS-свойств в Sass.&lt;/p&gt;

&lt;h3 id=&quot;extend&quot;&gt;Как работает @extend&lt;/h3&gt;

&lt;p&gt;Директива &lt;code&gt;@extend&lt;/code&gt; в препроцессоре Sass позволяет CSS-селекторам с легкостью &lt;strong&gt;обмениваться&lt;/strong&gt; между собой своими CSS-свойствами. Лучше всего вышесказанное можно проиллюстрировать на живом примере:&lt;/p&gt;

&lt;pre&gt;// SCSS

  .icon {
    transition: background-color ease .2s;
    margin: 0 .5em;
  }

  .error-icon {
    @extend .icon;
    /* здесь - специфичные стили класса .error-icon */
  }

  .info-icon {
    @extend .icon;
    /* здесь - специфичные стили класса .info-icon */
  }
&lt;/pre&gt;

&lt;p&gt;Результатом компиляции этого SCSS-кода в CSS-код будет следующий фрагмент:&lt;/p&gt;

&lt;pre&gt;// CSS

  .icon, .error-icon, .info-icon {
    transition: background-color ease .2s;
    margin: 0 .5em;
  }

  .error-icon {
    /* здесь - специфичные стили класса .error-icon */
  }

  .info-icon {
    /* здесь - специфичные стили класса .info-icon */
  }
&lt;/pre&gt;

&lt;p&gt;Рассмотрим “механизм” показанного выше примера более детально. В нем директива &lt;code&gt;@extend&lt;/code&gt; играет ключевую роль. С помощью нее селекторы &lt;code&gt;.error-icon&lt;/code&gt; и &lt;code&gt;.info-icon&lt;/code&gt; &lt;strong&gt;наследуют&lt;/strong&gt; свойства селектора &lt;code&gt;.icon&lt;/code&gt;. При изменении CSS-свойств селектора &lt;code&gt;.icon&lt;/code&gt; автоматически будут меняться свойства селекторов &lt;code&gt;.error-icon&lt;/code&gt; и &lt;code&gt;.info-icon&lt;/code&gt;, так как они наследуют определенный набор CSS-свойств у селектора &lt;code&gt;.icon&lt;/code&gt;. Довольно изящный подход, не правда ли?&lt;/p&gt;

&lt;p&gt;А вот теперь наступает интересный момент. Что, если элемент с классом &lt;code&gt;.icon&lt;/code&gt; &lt;strong&gt;не планируется использовать&lt;/strong&gt; и он даже &lt;strong&gt;не будет присутствовать&lt;/strong&gt; в HTML-разметке? Но CSS-свойства этого элемента нам нужны для стилизации элементов &lt;code&gt;.error-icon&lt;/code&gt; и &lt;code&gt;.info-icon&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Получается, что результирующий CSS-код будет &lt;strong&gt;неоправданно раздут&lt;/strong&gt; из-за того, что в нем присутствует “лишний” элемент, который напрямую никогда не будет использован.&lt;/p&gt;

&lt;p&gt;И тут наступает момент для выхода на сцену героя этой статьи – &lt;strong&gt;селектора placeholder&lt;/strong&gt; (его еще называют “тихим” placeholder’ом):&lt;figure id=&quot;attachment_2045&quot; style=&quot;width: 400px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/placeholder.jpg&quot;&gt;&lt;img class=&quot;wp-image-2045 size-full&quot; src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/placeholder.jpg&quot; alt=&quot;placeholder&quot; width=&quot;400&quot; height=&quot;300&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;“Тихий” placeholder&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;h3 id=&quot;placeholder&quot;&gt;Знакомимся с селектором placeholder&lt;/h3&gt;

&lt;p&gt;Селекторы placeholder были введены в Sass как раз для того, чтобы решать вышеназванную проблему. Синтаксис placeholder очень похож на синтаксис обычных CSS-классов, только вместо точки (&lt;code&gt;.&lt;/code&gt;) перед именем ставиться &lt;strong&gt;символ процента&lt;/strong&gt; (&lt;code&gt;%&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Селекторы placeholder имеют одну специфичную для них особенность – они никак не проявляют себя в скомпилированном CSS-коде. Можно сказать по другому – вы никогда не найдете селекторов placeholder в результирующем CSS-коде (поэтому они и носят такое название – “тихие” placeholder). В скомпилированном CSS-коде будут только селекторы, которые &lt;strong&gt;используют&lt;/strong&gt; “тихие” placeholder’ы, но никак не сами “тихие” placeholder’ы.&lt;/p&gt;

&lt;p&gt;Вернемся назад, к нашему начальному примеру. Заменим в нем имя класса &lt;code&gt;.icon&lt;/code&gt; на имя “тихого” placeholder’а – &lt;code&gt;%icon&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;// SCSS

  %icon {
    transition: background-color ease .2s;
    margin: 0 .5em;
  }

  .error-icon {
    @extend %icon;
    /* здесь - специфичные стили класса .error-icon */
  }

  .info-icon {
    @extend %icon;
    /* здесь - специфичные стили класса .info-icon */
  }
&lt;/pre&gt;

&lt;p&gt;В результате скомпилированный CSS-код будет выглядеть таким образом:&lt;/p&gt;

&lt;pre&gt;// CSS

  .error-icon, .info-icon {
    transition: background-color ease .2s;
    margin: 0 .5em;
  }

  .error-icon {
    /* здесь - специфичные стили класса .error-icon */
  }

  .info-icon {
    /* здесь - специфичные стили класса .info-icon */
  }
&lt;/pre&gt;

&lt;p&gt;Обратите внимание на важный момент – класс &lt;code&gt;.icon&lt;/code&gt; теперь &lt;strong&gt;не присутствует&lt;/strong&gt; в результирующем CSS-коде! Его там нет!&lt;/p&gt;

&lt;h3 id=&quot;extend--include&quot;&gt;@extend или @include&lt;/h3&gt;

&lt;p&gt;На первый взгляд может показаться, что “тихие” placeholder – это почти тоже самое, что и миксины (&lt;code&gt;mixin&lt;/code&gt;). С функциональной точки зрения такое утверждение абсолютно верно – результат в браузере получается идентичным. А вот с точки зрения CSS разница &lt;strong&gt;очень существенная&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Давайте снова изменим наш первоначальный пример и теперь воспользуемся миксином &lt;code&gt;@mixin icon&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;// SCSS

  @mixin icon {
    transition: background-color ease .2s;
    margin: 0 .5em;
  }

  .error-icon {
    @include icon;
    /* здесь - специфичные стили класса .error-icon */
  }

  .info-icon {
    @include icon;
    /* здесь - специфичные стили класса .info-icon */
  }
&lt;/pre&gt;

&lt;p&gt;Посмотрим на сгенерированный CSS-код:&lt;/p&gt;

&lt;pre&gt;// CSS

  .error-icon {
    transition: background-color ease .2s;
    margin: 0 .5em;
    /* здесь - специфичные стили класса .error-icon */
  }

  .info-icon {
    transition: background-color ease .2s;
    margin: 0 .5em;
    /* здесь - специфичные стили класса .info-icon */
  }
&lt;/pre&gt;

&lt;p&gt;С точки зрения разработки данный пример ничем не хуже примера с использованием “тихого” placeholder’а.&lt;/p&gt;

&lt;p&gt;Но обратите внимание на тот факт, что CSS-правила &lt;code&gt;transition: background-color ease .2s;&lt;/code&gt; и &lt;code&gt;margin: 0 .5em;&lt;/code&gt; &lt;strong&gt;дублируются&lt;/strong&gt; между селекторами &lt;code&gt;.error-icon&lt;/code&gt; и &lt;code&gt;.info-icon&lt;/code&gt;, что приводит к &lt;strong&gt;неоправданному раздутию кода&lt;/strong&gt;. В случае использования “тихого” placeholder &lt;strong&gt;этого не происходит&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Ограничения&lt;/h3&gt;

&lt;p&gt;Использование директивы &lt;code&gt;@extend&lt;/code&gt; имеет одно ограничение, связанное с тем, что применение “тихих” placeholder’ов никак &lt;strong&gt;не оправдывает себя в медиа-запросах&lt;/strong&gt; &lt;code&gt;@media&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Рассмотрим такой пример:&lt;/p&gt;

&lt;pre&gt;// SCSS

  %icon {
    transition: background-color ease .2s;
    margin: 0 .5em;
  }

  @media screen {

    .error-icon {
      @extend %icon;
    }

    .info-icon {
      @extend %icon;
    }

  }
&lt;/pre&gt;

&lt;p&gt;Видим, что в данном случае “тихий” placeholder добавлен для селекторов, находящихся внутри медиа-запроса &lt;code&gt;@media&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Однако, при попытке компиляции этого SCSS-кода в CSS-код получиться ошибка:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You may not @extend an outer selector from within @media. You may only @extend selectors within the same directive. From “@extend %icon” on line 8 of icons.scss&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Когда я первый раз увидел такую ошибку, то подумал, что это баг. Но по зрелом размышлении пришел к выводу, что в данном подходе все правильно.&lt;/p&gt;

&lt;p&gt;Механизм работы директивы &lt;code&gt;@extend&lt;/code&gt; основан на &lt;strong&gt;добавлении одного селектора к другому селектору&lt;/strong&gt; без необходимости дублировать CSS-свойства этих селекторов. Однако невозможно объединять селекторы, находящиеся в разных медиа-запросах &lt;code&gt;@media&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Но можно поступить по другому, чтобы выйти из данной затруднительной ситуации. Любой медиа-запрос, который служит оберткой для “тихого” placeholder, распространяют свои свойства на селекторы, не размещенные внутри этого запроса. Выражение достаточно запутанное, поэтому лучше приведу пример:&lt;/p&gt;

&lt;pre&gt;// SCSS

  @media screen {
    %icon {
      transition: background-color ease .2s;
      margin: 0 .5em;
    }
  }

  .error-icon {
    @extend %icon;
  }

  .info-icon {
    @extend %icon;
  }
&lt;/pre&gt;

&lt;p&gt;Компиляция пройдет без ошибок и ее результатом будет CSS-код:&lt;/p&gt;

&lt;pre&gt;// CSS

  @media screen {
    .error-icon, .info-icon {
      transition: background-color ease .2s;
      margin: 0 .5em;
    }
  }
&lt;/pre&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Заключение&lt;/h3&gt;

&lt;p&gt;Обе директивы &lt;code&gt;@extend&lt;/code&gt; и &lt;code&gt;@include&lt;/code&gt; являются очень полезными инструментами, между которыми существует тонкое различие. Если вопрос производительности генерируемого CSS-кода имеет для вас важное значение или же перед вами стоит проблема повторяемости кода, то решением будет являться директива &lt;code&gt;@extend&lt;/code&gt;. В некоторых случая &lt;code&gt;@extend&lt;/code&gt; значительно упрощает получаемый CSS-код и улучшает его производительность.&lt;/p&gt;

&lt;p&gt;Конечно же, ничто не мешает вам смешивать между собой директиву &lt;code&gt;@extend&lt;/code&gt; и миксин &lt;code&gt;mixin&lt;/code&gt; (&lt;em&gt;если этого требуют обстоятельства&lt;/em&gt;):&lt;/p&gt;

&lt;pre&gt;// SCSS

  @media screen {
    %icon {
      transition: background-color ease .2s;
      margin: 0 .5em;
    }
  }

  @mixin icon($color, $url) {
    @extend %icon;
    background-color: $color;
    background-url: url($url);
  }

  .error-icon {
    @include icon(red, &#39;/images/error.png&#39;);
  }

  .info-icon {
    @include icon(blue, &#39;/images/info.png&#39;);
  }
&lt;/pre&gt;

&lt;p&gt;Однако, в разработке я придерживаюсь такого подхода, когда исходный код легко читается и поддерживается.&lt;/p&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-2044&quot; class=&quot;post-ratings&quot; data-nonce=&quot;8e6bdfcbef&quot;&gt;&lt;img id=&quot;rating_2044_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(2044, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2044_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(2044, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2044_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(2044, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2044_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(2044, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2044_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(2044, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;4&lt;/strong&gt; votes, average: &lt;strong&gt;4,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_2044_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-2044-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/sass-selector-placeholder/&quot;&gt;Знакомимся с &amp;#8220;тихими&amp;#8221; placeholder&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 21, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Jade &#8211; два способа компиляции в HTML]]></title>
 <link rel="alternate" type="text/html" href="/jade-to-html/" />
  <id>/jade-to-html</id>
  <published>2014-11-21T00:00:00+03:00</published>
  <updated>2014-11-21T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;В этом посте поделюсь своим опытом реализации задачи компиляции jade-файлов в HTML-формат.&lt;/p&gt;

&lt;p&gt;Рассмотрю два способа реализации этой задачи. Первый – самый нативный, с помощью родной утилиты &lt;code&gt;jade&lt;/code&gt;. Второй – с помощью плагина &lt;code&gt;gulp-jade&lt;/code&gt; под Gulp.&lt;/p&gt;

&lt;p&gt;Но способов компиляции Jade в HTML существует больше – есть плагин под Sublime Text, существует плагин под Grunt. Обладатели Mac OS X могут воспользоваться прекрасной программой CodeKit. И я уверен, что это только малая часть того, чем можно воспользоваться.&lt;/p&gt;

&lt;p&gt;Кратко остановлюсь на вопросе, зачем мне понадобился &lt;a href=&quot;http://jade-lang.com/&quot; title=&quot;Jade&quot;&gt;Jade&lt;/a&gt;. Честно сказать, до недавнего момента я даже не подозревал о сущестовании такого шаблонизатора. Тихо-спокойно пользовался Sublime Text + Emmet и считал, что я на вершине современных требований к web-разработчику.&lt;/p&gt;

&lt;p&gt;Однако это оказалось не совсем так. Мне посоветовали посмотреть в сторону Jade и разобраться с работой в нем. Хотя бы с синтаксисом, для начала.&lt;/p&gt;

&lt;p&gt;И я скажу вам – мне понравилось! Даже простое использование синтаксиса. Первое впечатление и ощущение – использование этого шаблонизатора освобождает от рамок HTML при написании кода. Точнее – при создании кода сосредотачиваешься на содержимом, которое создаешь.&lt;/p&gt;

&lt;p&gt;Но у Jade есть еще и миксины, с которыми мне предстоит познакомиться. Так что – лучшее только впереди!&lt;/p&gt;

&lt;p&gt;Написание кода в этом шаблонизаторе чем-то похоже на написание текста в &lt;a href=&quot;http://localhost:7788/third/?p=717&quot; title=&quot;Язык Markdown - обзор редакторов для работы&quot;&gt;Markdown&lt;/a&gt;. Под Markdown имеются (и должны иметься) утилиты\программы для компиляции в HTML. Точно также для Jade должны иметься (и имеются) утилиты\программы для компиляции в HTML.&lt;/p&gt;

&lt;h3 id=&quot;jade-8211---sublime-text-3&quot;&gt;Jade – синтаксис для Sublime Text 3&lt;/h3&gt;

&lt;p&gt;Прежде чем писать код в редакторе, в моем случае необходимо настроить поддержку синтаксиса Jade. Я использую Sublime Text 3, который изначально не имеет таковой.&lt;/p&gt;

&lt;p&gt;Исправить это легко – достаточно через &lt;code&gt;Package Control&lt;/code&gt; установить пакет &lt;code&gt;Jade&lt;/code&gt;. Помимо подсветки синтаксиса, появиться поддержка автоматической табуляции, что значительно упрощает процесс написания кода.&lt;/p&gt;

&lt;p&gt;Пример подсветки синтаксиса Jade в Sublime Text 3:&lt;figure id=&quot;attachment_2024&quot; style=&quot;width: 501px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/jade.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/jade-501x600.png&quot; alt=&quot;Пример подсветки синтаксиса Jade в Sublime Text 3&quot; width=&quot;501&quot; height=&quot;600&quot; class=&quot;size-medium wp-image-2024&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Пример подсветки синтаксиса Jade в Sublime Text 3&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;h3 id=&quot;jade-8211---&quot;&gt;Jade – родная утилита шаблонизатора&lt;/h3&gt;

&lt;p&gt;Разработчиками была создана &lt;strong&gt;родная утилита&lt;/strong&gt; для преобразования jade-файлов в HTML-файлы. Имя утилиты легко запомнить – это &lt;code&gt;jade&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Утилита является &lt;strong&gt;модулем под Node.js&lt;/strong&gt;, поэтому последний у вас должен быть заранее установлен (&lt;em&gt;если еще не установлен по какой-то необъяснимой причине&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Инсталляция утилиты производиться &lt;strong&gt;банально&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;// Command Line

  $ sudo npm install -g jade
  &lt;/pre&gt;

&lt;p&gt;Утилита имеет немногочисленные параметры, с кратким описанием которых можно ознакомиться на странице официальной документации – &lt;a href=&quot;http://jade-lang.com/command-line/&quot; title=&quot;Jade - Command Line&quot;&gt;Jade – Command Line&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Но стоит обратить внимание на некоторые &lt;strong&gt;интересные параметры&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;К примеру&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;-P, --pretty&lt;/code&gt; – создание “удобочитаемого” HTML-кода&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;-w, --watch&lt;/code&gt; – мониторинг изменений файлов&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Использование утилиты также является простым делом. К примеру, можно указать ей производить компиляцию всех файлов в директории &lt;code&gt;templates&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;// Command Line

  $ jade templates
  &lt;/pre&gt;

&lt;p&gt;Утилита может сама создавать jade-файлы:&lt;/p&gt;

&lt;pre&gt;// Command Line

  $ jade {foo,bar}.jade
  &lt;/pre&gt;

&lt;p&gt;Или же можно реализовать &lt;strong&gt;два способа вывода&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;// Command Line

  $ jade &amp;lt; my.jade &amp;gt; my.html
  &lt;/pre&gt;

&lt;pre&gt;// Command Line

  $ echo &quot;h1 Jade!&quot; | jade
  &lt;/pre&gt;

&lt;p&gt;Или же осуществить рендеринг двух директорий &lt;code&gt;foo&lt;/code&gt; и &lt;code&gt;bar&lt;/code&gt; в директорию &lt;code&gt;tmp&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;// Command Line

  $ jade foo bar --out /tmp
  &lt;/pre&gt;

&lt;h3 id=&quot;gulp-jade-8211---gulp&quot;&gt;Gulp-jade – компиляция под Gulp&lt;/h3&gt;

&lt;p&gt;Кто знаком с task-manager’ом Gulp, тот может воспользоваться соответствующим плагином &lt;code&gt;gulp-jade&lt;/code&gt; под него. Страничка плагина размещена здесь – &lt;a href=&quot;https://www.npmjs.org/package/gulp-jade&quot; title=&quot;gulp-jade&quot;&gt;gulp-jade&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Установка плагина &lt;strong&gt;стандартная&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;// Command Line

  $ npm install --save-dev gulp-jade
  &lt;/pre&gt;

&lt;p&gt;Затем нужно создать задачу (task) для компиляции jade-файлов в HTML-файлы. Ниже приведу свой рабочий task:&lt;/p&gt;

&lt;pre&gt;// JavaScript

  var gulp = require(&#39;gulp&#39;),
  jade = require(&#39;gulp-jade&#39;);

  // Jade
  gulp.task(&#39;jade&#39;, function(){
    gulp.src(&#39;./template/*.jade&#39;)
      .pipe(jade())
      .pipe(gulp.dest(&#39;./dist/&#39;))
  });

  // Watch
  gulp.task(&#39;watch&#39;, function(){
   gulp.watch(&#39;./template/*.jade&#39;,[&#39;jade&#39;]);
  });
  &lt;/pre&gt;

&lt;p&gt;В Сети есть еще один интересный Gulp-task. Работоспособность его &lt;strong&gt;не проверял&lt;/strong&gt;, взял как есть, для – “чтобы было”.&lt;/p&gt;

&lt;p&gt;Как говориться на &lt;a href=&quot;http://david.nowinsky.net/gulp-book/example/jade.html&quot; title=&quot;Compiling Jade files&quot;&gt;странице-оригинале&lt;/a&gt;, эта задача производит компиляцию файлов из директории &lt;code&gt;app/&lt;/code&gt; в директорию &lt;code&gt;_public/&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;// CoffeeScript

  jade = require &#39;gulp-jade&#39;

  gulp.task &#39;jade&#39;, -&amp;gt;
    gulp.src parameters.app_path + &#39;/*.jade&#39;
    .pipe jade pretty: true
    .pipe gulp.dest parameters.web_path
    .on &#39;error&#39;, gutil.log
  &lt;/pre&gt;

&lt;h3 id=&quot;section&quot;&gt;Заключение&lt;/h3&gt;

&lt;p&gt;Я запомнил (&lt;em&gt;записал для себя&lt;/em&gt;), а вы (&lt;em&gt;уважаемый читатель&lt;/em&gt;) познакомились (&lt;em&gt;если не знали&lt;/em&gt;) с двумя способами настройки компиляции jade-файлов в HTML-файлы.&lt;/p&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-2022&quot; class=&quot;post-ratings&quot; data-nonce=&quot;d0ab5f29a6&quot;&gt;&lt;img id=&quot;rating_2022_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(2022, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(4.4, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2022_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(2022, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4.4, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2022_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(2022, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4.4, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2022_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(2022, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4.4, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2022_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(2022, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(4.4, 5, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;5&lt;/strong&gt; votes, average: &lt;strong&gt;4,40&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_2022_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-2022-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/jade-to-html/&quot;&gt;Jade &amp;#8211; два способа компиляции в HTML&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 21, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Parallax Scrolling с помощью Stellar.js]]></title>
 <link rel="alternate" type="text/html" href="/parallax-scrolling-stellar-js/" />
  <id>/parallax-scrolling-stellar-js</id>
  <published>2014-11-20T00:00:00+03:00</published>
  <updated>2014-11-20T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Отличный пример создания parallax scrolling с помощью Stellar.js. Оригинал статьи размещен здесь – [An Introduction to Parallax Scrolling Using Stellar.js][1].&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Одним из наиболее обсуждаемых трендов в web-дизайне последние несколько лет является эффект parallax scrolling. Нравиться он вам или нет, но этот эффект сегодня применяется на очень многих сайтах. В этой статье будет дано краткое описание принципа parallax scrolling и будет показано, как применить этот эффект на странице с помощью jQuery-плагина под названием Stellar.js.&lt;/p&gt;

&lt;h3 id=&quot;parallax-scrolling&quot;&gt;Что такое parallax scrolling&lt;/h3&gt;

&lt;p&gt;Основная идея parallax scrolling заключается в том, что при прокрутке страницы вниз фоновое изображение &lt;strong&gt;движется с меньшей скоростью&lt;/strong&gt;, нежели содержимое страницы. Таким образом создается иллюзия 3D на странице. Этот эффект является прекрасным дополнением к web-странице, однако он становиться навязчивым при чрезмерном злоупотреблении им. Время от времени вы встречаете на просторах Сети сайты, перегруженные подобными эффектами. И вам не всегда может такое понравиться. Потому что в основном при реализации такого эффекта используется анимация фоновых изображений, что значительно увеличивает вес страницы, в результате чего она очень медленно загружается в браузере.&lt;/p&gt;

&lt;p&gt;Примерами сайтов со &lt;strong&gt;злоупотреблением&lt;/strong&gt; таких эффектов, на мой взгляд, могут послужить [Saucony Kinavara 3][2] и [Oakley Airbrake MX][3]. Первый сайт “весит” 50Mb(!), второй сайт – около 20Mb.&lt;/p&gt;

&lt;p&gt;Теперь, когда вы имеете представление о том, как на деле выглядит эффект parallax scrolling, давайте попробуем реализовать его с помощью плагина Stellar.js.&lt;/p&gt;

&lt;h3 id=&quot;stellarjs&quot;&gt;Что такое Stellar.js&lt;/h3&gt;

&lt;p&gt;[Stellar.js][4] – это jQuery-плагин, с помощью которого можно легко реализовать эффект parallax scrolling на web-странице. Несмотря на то, что этот плагин &lt;strong&gt;уже не поддерживается разработчиком&lt;/strong&gt;, он все еще &lt;strong&gt;остается очень надежным&lt;/strong&gt;, &lt;strong&gt;совместим с самыми последними версиями библиотеки jQuery&lt;/strong&gt; и часто применяется web-разработчиками в проектах (&lt;em&gt;что является показателем&lt;/em&gt;). Stellar.js в списке популярных плагинов [The jQuery Plugin Registry][5] находится на высших позициях, поэтому вы наверняка о нем слышали или же читали упоминание о нем.&lt;/p&gt;

&lt;p&gt;Отлично, вкратце мы познакомились, что такое Stellar.js и можно приступать к процессу создания parallax scrolling на странице с его помощью.&lt;/p&gt;

&lt;h3 id=&quot;stellarjs-8211--&quot;&gt;Stellar.js – начинаем работу&lt;/h3&gt;

&lt;p&gt;Начать работать с плагином Stellar.js очень просто. Для начала нужно &lt;strong&gt;скачать&lt;/strong&gt; этот плагин и &lt;strong&gt;подключить&lt;/strong&gt; к странице. Получить плагин Stellar.js можно двумя способами – из [Git-репозитория][6] или с помощью менеджера пакетов &lt;strong&gt;Bower&lt;/strong&gt;. Если остановится на использовании Bower, то в консоли нужно набрать такую команду:&lt;/p&gt;

&lt;pre&gt;// Command Line

  bower install jquery.stellar
  &lt;/pre&gt;

&lt;p&gt;Когда плагин Stellar.js получен любым из вышеописанных способов, необходимо подключить его к странице как обычно, с помощью тега `&lt;/p&gt;

&lt;p&gt;&amp;lt;/pre&amp;gt;&lt;/p&gt;
&lt;p&gt;После подключения плагина Stellar.js все готово для того, чтобы применить эффект parallax scrolling на странице. Этот плагин позволяет применить данный эффект к любому scrolling-элементу на странице, будь то объект &lt;code&gt;window` или любой другой. Для этого нужно выполнить выборку нужного элемента с помощью jQuery, а затем применить к выбранному элементу метод `stellar()`.

Самый простой пример применения плагина Stellar.js к объекту показан ниже:

&lt;pre&gt;// JavaScript

  $(&#39;#someElement&#39;).stellar();
  &lt;/pre&gt;

Для объекта `window` можно использовать и более краткий синтаксис вышеприведенного примера:

&lt;pre&gt;// JavaScript

  $.stellar();
  &lt;/pre&gt;

В этом коде производится поиск фоновых изображений или элементов, к которым применяется эффект parallax; и для этих элементов выполняется пересчет их расположения на web-странице при ее прокрутке.

Если вам хочется взглянуть хотя бы на один готовый пример страницы с parallax scrolling, созданной с помощью Stellar.js, то можете посетить эту ссылку - [Stellar.js Backgrounds Demo][7].

### Настройки Stellar.js

[Stellar.js][4], как и большинство других плагинов подобного рода, достаточно гибок в настройке. В нем есть несколько параметров, с помощью которых можно **задать нужный вариант работы**. В Stellar.js все настройки делятся на два типа - глобальные (*оказывают влияние на все элементы*) и локальные, имеющие отношение только к конкретному элементу.

Глобальные настройки передаются методу `stellar()` в качестве аргументов, в момент вызова этого метода. Специфичные для элемента настройки передаются в виде `data-*`-атрибутов. В этом разделе статьи я не буду подробно останавливаться на рассмотрении всех возможных параметров плагина Stellar.js. Если у вас возникнет желание детально ознакомиться с ними, то можно обратиться к разделу, посвященному этому вопросу - [Configuring Everything][8].

Одной из **основных настроек плагина**, которая может понадобиться в первую очередь, является **выбор направления**, в котором будет осуществляться эффект. Классическим вариантом parallax scrolling является направление **parallax по вертикали** - сверху вниз или же наоборот. Однако, с помощью настроек можно задать **parallax по горизонтали** - слева направо и наоборот. И даже можно задать **сразу два направления** - по вертикали и по горизонтали. Для управления направлением parallax в плагине Stellar.js имеются два параметра Boolean-типа:

  * `horizontalScrolling` - для управления parallax **по горизонтали**
  * `verticalScrolling` - для управления parallax **по вертикали**

По умолчанию оба параметра имеют значение `true`.

Другим интересным параметров плагина Stellar.js является `responsive`. Данная настройка отвечается за возможность обновления содержимого блока с эффектом parallax при наступлении событий `load` и `resize` объекта `window`. Значением по умолчанию является `false`.

Последним (достойным внимания) глобальным параметром плагина Stellar.js является `hideDistantElements`. Значением по умолчанию этого параметра является `true`. Данный параметр отвечает за **эффект скрытия объекта** в том случае, когда он выходит на границы viewport. Если такое поведение вам не нужно, то можно поставить значение `hideDistantElements` в `false`.

Единственным специфичным для элемента параметром плагина Stellar.js, о котором я расскажу в этой статье, является `data-stellar-background-ratio`. Расскажу только потому, что он **используется очень часто** при работе с плагином Stellar.js. Параметр принимает в качестве значения положительное число и управляет **скоростью parallax для выбранного элемента**.

Например, `data-stellar-background-ratio=&quot;0.5&quot;` означает, что скорость перемещения элемента при scrolling будет **в два раза меньше обычной**. Если вы будете использовать данный параметр со значением, меньшим 1, то, согласно документации, для элемента с parallax необходимо применить CSS-правило `background-attachment: fixed;`.

Теперь, когда мы познакомились с плагином Stellar.js и научились управлять им с помощью параметров, самое время посмотреть его в действии.

### Demo

В этом разделе статьи мы создадим пример кода, в котором применим плагин Stellar.js и настроим его с помощью параметров, рассмотренных ранее. Первым делом нам понадобиться HTML-разметка. Для этого создадим шесть блоков `div`, внутри которых будет содержаться некоторый текст:

&lt;pre&gt;// HTML

  

&lt;div class=&quot;content&quot; id=&quot;content1&quot;&gt;
  &lt;p&gt;
    text here
  &lt;/p&gt;
    
&lt;/div&gt;
  

&lt;div class=&quot;content&quot; id=&quot;content2&quot;&gt;
  &lt;p&gt;
    text here
  &lt;/p&gt;
    
&lt;/div&gt;
  

&lt;div class=&quot;content&quot; id=&quot;content3&quot; data-stellar-background-ratio=&quot;0.5&quot;&gt;
  &lt;p&gt;
    text here
  &lt;/p&gt;
    
&lt;/div&gt;
  

&lt;div class=&quot;content&quot; id=&quot;content4&quot; data-stellar-background-ratio=&quot;0.5&quot;&gt;
  &lt;p&gt;
    text here
  &lt;/p&gt;
    
&lt;/div&gt;
  

&lt;div class=&quot;content&quot; id=&quot;content5&quot; data-stellar-background-ratio=&quot;0.5&quot;&gt;
  &lt;p&gt;
    text here
  &lt;/p&gt;
    
&lt;/div&gt;
  

&lt;div class=&quot;content&quot; id=&quot;content6&quot; data-stellar-background-ratio=&quot;0.5&quot;&gt;
  &lt;p&gt;
    text here
  &lt;/p&gt;
    
&lt;/div&gt;
  &lt;/pre&gt;

Для представленной выше HTML-разметки необходимо написать некоторые CSS-стили для задания фоновых изображений. В нашем примере будут использоваться три изображения, при этом каждое из них будет использоваться дважды. Так как к последним трем блокам `div` применен атрибут `data-stellar-background-ratio`, то в CSS-стилях также необходимо прописать правило `background-attachment: fixed;`.

Финальный вариант CSS-кода будет выглядеть таким образом:

&lt;pre&gt;// SCSS

  @import &quot;compass&quot;;
  @import &quot;compass/reset&quot;;

  $white: #fff;
  $black: #000;

  body {
    font-size: 20px;
    color: $white;
    text-shadow: 0 1px 0 $black, 0 0 5px $black;
  }

  p {
    padding: 0 .5em;
    margin: 0;
  }

  .content {
    background-attachment: fixed;
    height: 400px;
    line-height: 400px;
    text-align: center;
  }

  #content1 {
    background-image: url(&quot;http://www.tamperlock.com/blog/wp-content/uploads/2014/08/london-england.jpg&quot;);
  }

  #content2 {
    background-image: url(&quot;http://ocdn.eu/images/pulscms/ZjU7MDQsMCwzMiwzODQsMWZhOzA2LDMyMCwxYzI_/1eb29a70dabd0994cdefaad01ca3c884.jpg&quot;);
  }

  #content3 {
    background-image: url(&quot;http://www.zeus.aegee.org/magazine/wp-content/uploads/napoli-golfo-vesuvio.jpg&quot;);
  }

  #content4 {
    background-image: url(&quot;http://www.tamperlock.com/blog/wp-content/uploads/2014/08/london-england.jpg&quot;);
  }

  #content5 {
    background-image: url(&quot;http://ocdn.eu/images/pulscms/ZjU7MDQsMCwzMiwzODQsMWZhOzA2LDMyMCwxYzI_/1eb29a70dabd0994cdefaad01ca3c884.jpg&quot;);
  }

  #content6 {
    background-image: url(&quot;http://www.zeus.aegee.org/magazine/wp-content/uploads/napoli-golfo-vesuvio.jpg&quot;);
  }
  &lt;/pre&gt;

Последний шаг, который нужно выполнить, это запустить эффект, вызвав метод `stellar()`. Этому методу также передадим **несколько аргументов**:

&lt;pre&gt;// JavaScript

  $.stellar({
    horizontalScrolling: false,
    responsive: true
  });
  &lt;/pre&gt;&lt;figure id=&quot;attachment_2031&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;

[&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/stellar-600x382.png&quot; alt=&quot;Stellar.js - parallax scrolling with jQuery&quot; width=&quot;600&quot; height=&quot;382&quot; class=&quot;size-medium wp-image-2031&quot; /&gt;][9]&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Stellar.js - parallax scrolling with jQuery&lt;/figcaption&gt;&lt;/figure&gt; 

Готовый Live-Demo пример parallax scrolling на Stellar.js можно посмотреть здесь - [Stellar.js][10].

### Заключение

В данной статье был рассмотрен плагин Stellar.js для создания эффекта parallax на web-странице. Мною не были рассмотрены **все настройки и возможности этого плагина**. Но целью этой статьи было заинтересовать читателей плагином Stellar.js для того, чтобы продолжить его изучение самостоятельно.

Что вы думаете о плагине Stellar.js? Вы слышали о таком или же используете его давно?

Оцените статью:  
&lt;span id=&quot;post-ratings-2028&quot; class=&quot;post-ratings&quot; data-nonce=&quot;40fde9da69&quot;&gt;&lt;img id=&quot;rating_2028_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(2028, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2028_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(2028, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2028_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(2028, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2028_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(2028, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2028_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(2028, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;6&lt;/strong&gt; votes, average: &lt;strong&gt;5,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_2028_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-2028-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading...&lt;/span&gt;

 [1]: http://www.sitepoint.com/introduction-parallax-scrolling-using-stellar-js/ &quot;An Introduction to Parallax Scrolling Using Stellar.js&quot;
 [2]: http://community.saucony.com/kinvara3/ &quot;Saucony Kinavara 3&quot;
 [3]: http://moto.oakley.com/ &quot;Oakley Airbrake MX&quot;
 [4]: https://github.com/markdalgleish/stellar.js/ &quot;Stellar.js&quot;
 [5]: http://plugins.jquery.com/ &quot;The jQuery Plugin Registry&quot;
 [6]: https://github.com/markdalgleish/stellar.js/ &quot;Git-репозиторий Stellar.js&quot;
 [7]: http://markdalgleish.com/projects/stellar.js/demos/backgrounds.html &quot;Stellar.js Backgrounds Demo&quot;
 [8]: https://github.com/markdalgleish/stellar.js#configuring-everything &quot;Configuring Everything&quot;
 [9]: http://localhost:7788/third/wp-content/uploads/2014/11/stellar.png
 [10]: http://stellar.zencoder.ru/ &quot;Stellar.js&quot;
&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/parallax-scrolling-stellar-js/&quot;&gt;Parallax Scrolling с помощью Stellar.js&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 20, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[SVG fallback  с помощью jQuery]]></title>
 <link rel="alternate" type="text/html" href="/svg-fallback-with-jquery/" />
  <id>/svg-fallback-with-jquery</id>
  <published>2014-11-15T00:00:00+03:00</published>
  <updated>2014-11-15T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Краткая статья, посвященная тому же вопросу – как реализовать кросс-браузерную поддержку SVG в браузерах. В предыдущей статье “&lt;a href=&quot;http://localhost:7788/third/?p=2001&quot; title=&quot;SVG fallback с помощью PNG&quot;&gt;SVG fallback с помощью PNG&lt;/a&gt;” было показано &lt;strong&gt;четыре очень интересных способа&lt;/strong&gt; реализации такой задачи.&lt;/p&gt;

&lt;p&gt;В этой статье будут показаны также несколько способов решения, но уже &lt;strong&gt;с помощью библиотеки jQuery&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;В начале статьи автор рассказывает о преимуществах использования формата графики SVG. Думаю, что многие уже устали читать деферамбы о пользе SVG. Мне, как переводчику, тем более надоело переводить всю эту “воду”, поэтому смело ее опускаю и перехожу к главному.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;jquery--modernizr&quot;&gt;jQuery и Modernizr&lt;/h3&gt;

&lt;p&gt;Для реализации этого способа понадобиться библиотека Modernizr. Код реализации должен выглядеть таким образом:&lt;/p&gt;

&lt;pre&gt;// Javascript

if (Modernizr.svg) {
 // Supports SVG
} else {
 // Doesn&#39;t support SVG (Fallback)
}
 &lt;/pre&gt;

&lt;p&gt;Если Modernizr обнаружит, что пользовательский браузер не поддерживает SVG, то запуститься простой jQuery-скрипт, который произведет замену расширения &lt;code&gt;svg&lt;/code&gt; на &lt;code&gt;png&lt;/code&gt; у всех файлов-изображений:&lt;/p&gt;

&lt;pre&gt;// Javascript

 if (!Modernizr.svg) {
    $(&#39;img[src*=&quot;svg&quot;]&#39;).attr(&#39;src&#39;, function() {
       return $(this).attr(&#39;src&#39;).replace(&#39;.svg&#39;, &#39;.png&#39;);
    });
 }
 &lt;/pre&gt;

&lt;p&gt;Данный способ имет точно такие же ограничения, что и скрипт из предыдущей статьи – “&lt;a href=&quot;http://localhost:7788/third/?p=2001&quot; title=&quot;SVG fallback с помощью PNG&quot;&gt;SVG fallback с помощью PNG&lt;/a&gt;“. То есть, нужно иметь два комплекта файлов – один в SVG-формате, другой в PNG-формате. Имена файлов должны быть идентичными.&lt;/p&gt;

&lt;h3 id=&quot;svgmagic-8211---jquery&quot;&gt;SVGMagic – плагин под jQuery&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://dirkgroenen.github.io/SVGMagic/index.html&quot; title=&quot;SVGMagic&quot;&gt;SVGMagic&lt;/a&gt; – это простой плагин под библиотеку jQuery, который отыскивает в HTML-документе все SVG-изображения (в том числе и фоновые SVG-изображения). А затем им создаются PNG-копии всех найденных SVG-изображений, если браузер пользователя не поддерживает SVG.&lt;/p&gt;

&lt;p&gt;Для работы с плагином SVGMagic достаточно установить его в проект и запустить инициализацию через jQuery:&lt;/p&gt;

&lt;pre&gt;// jQuery

 $(document).ready(function(){
    $(&#39;img&#39;).svgmagic();
 });
 &lt;/pre&gt;

&lt;p&gt;Работа плагина SVGMagic строится следующим образом. Проверяется возможность браузером пользователя отображения SVG-изображений. Если такой поддержки нет, то плагин выполняет полную проверку всего HTML-документа и собирает коллекцию всех URL на SVG-файлы, размещенные внутри этого документа.&lt;/p&gt;

&lt;p&gt;Затем эта коллекция URL отправляется на сервер плагина. Сервер производит скачивание всех SVG-изображений по этим URL. Затем производиться конвертирование SVG в PNG.&lt;/p&gt;

&lt;p&gt;На страницу клиента отправляется новая коллекция URL, которые теперь указывают на файлы формата PNG. Браузер посетителя загружает по этим ссылкам новые PNG-файлы и внешний вид страницы не нарушается.&lt;/p&gt;

&lt;h3 id=&quot;svgeezy-8211----jquery&quot;&gt;SVGeezy – еще один плагин jQuery&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://benhowdle.im/svgeezy/&quot; title=&quot;SVGeezy&quot;&gt;SVGeezy&lt;/a&gt; является fallback-плагином в полном смысле этого слова. Плагин проверяет поддержку SVG в браузере пользователя. Если таковой нет, то выполняется замена значения в атрибуте &lt;code&gt;src&lt;/code&gt; на то, в котором указывается на путь PNG-файла.&lt;/p&gt;

&lt;p&gt;Для работы с плагином нужно подключить его в проект и инициализировать:&lt;/p&gt;

&lt;pre&gt;// jQuery

 svgeezy.init(false, &#39;png&#39;);
 &lt;/pre&gt;

&lt;p&gt;Первый параметр плагина SVGeezy “говорит” ему – &lt;strong&gt;не выполнять&lt;/strong&gt; или &lt;strong&gt;выполнять&lt;/strong&gt; проверку. Если необходима проверка плагином SVGeezy браузера и замена изображений, то нужно оставить значение в &lt;code&gt;false&lt;/code&gt;. Этот параметр может понадобиться в случае, когда нет необходимости в работе плагина на каких-то страницах.&lt;/p&gt;

&lt;p&gt;Второй параметр – это &lt;strong&gt;тип файла&lt;/strong&gt;, который будет заменять SVG на странице. Тип файла &lt;strong&gt;может быть любым&lt;/strong&gt;; только нужно удостовериться, что файлы с таким расширением существуют.&lt;/p&gt;

&lt;p&gt;Например, файл по пути &lt;code&gt;/images/logo.svg&lt;/code&gt; будет заменен файлом по пути &lt;code&gt;/images/logo.png&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;На этом самая интересная часть статьи “&lt;a href=&quot;http://www.jquerybyexample.net/2014/09/how-to-svg-fallback-with-png-jquery.html&quot; title=&quot;How to fallback to PNG if SVG not supported?&quot;&gt;How to fallback to PNG if SVG not supported?&lt;/a&gt;” завершается. Как лично мне кажется, в данной статье заслуживают внимания только &lt;strong&gt;первый&lt;/strong&gt; и &lt;strong&gt;последний&lt;/strong&gt; способы реализации SVG fallback.&lt;/p&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-2010&quot; class=&quot;post-ratings&quot; data-nonce=&quot;8b515de1e6&quot;&gt;&lt;img id=&quot;rating_2010_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(2010, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(3, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2010_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(2010, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(3, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2010_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(2010, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(3, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2010_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(2010, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(3, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2010_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(2010, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(3, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;2&lt;/strong&gt; votes, average: &lt;strong&gt;3,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_2010_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-2010-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/svg-fallback-with-jquery/&quot;&gt;SVG fallback  с помощью jQuery&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 15, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[SVG fallback с помощью PNG]]></title>
 <link rel="alternate" type="text/html" href="/svg-fallback-png/" />
  <id>/svg-fallback-png</id>
  <published>2014-11-15T00:00:00+03:00</published>
  <updated>2014-11-15T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;strong&gt;Примечание переводчика&lt;/strong&gt;: статья просто отличная и написана мастером своего дела Nick.&lt;/p&gt;

&lt;p&gt;Немного лирики “для тех, кто в танке” – fallback можно в данном контексте перевести как – “откат”. То есть, если браузер по каким-то причинам &lt;strong&gt;не поддерживает&lt;/strong&gt; SVG, то на web-странице выполняется “откат” – SVG-изображения &lt;strong&gt;заменяются&lt;/strong&gt; на PNG-изображения.&lt;/p&gt;

&lt;p&gt;В этом и заключается вся фишка данного способа. Но вот реализаций этого способа несколько и они рассмотрены ниже. Лично меня впечатлил &lt;strong&gt;второй способ&lt;/strong&gt; (&lt;em&gt;впрочем, не только меня – можно почитать комментарии к &lt;a href=&quot;http://callmenick.com/2014/04/02/svg-fallback-with-png/&quot; title=&quot;SVG Fallback with PNG Images&quot;&gt;статье-оригиналу&lt;/a&gt;&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Далее – текст автора по имени Nick (&lt;em&gt;в вольном переводе&lt;/em&gt;).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;В следующих четырех сниппетах я рассмотрю применение метода SVG fallback c помощью PNG-изображений &lt;strong&gt;четырьмя различными способами&lt;/strong&gt;. Все четыре способа направлены на одну цель – обеспечение &lt;strong&gt;кросс-браузерной поддержки SVG&lt;/strong&gt; на web-странице.&lt;/p&gt;

&lt;p&gt;Если вы еще не используете SVG в своих проектах, то вам следует уже начать это делать. SVG великолепен и является прекрасным способом минимизации и упрощения спрайтов; в частности, когда это касается таких вещей, как иконки. Если на создаваемом вами сайте все изображения сохранены в формате PNG, то для вас самое время перескочить на SVG-поезд.&lt;/p&gt;

&lt;p&gt;Ниже показаны сниппеты, которые тремя различными путями осуществляют применение SVG, а также SVG fallback к изображениям формата PNG, если браузер не поддерживает SVG.&lt;/p&gt;

&lt;p&gt;Что мы будем рассматривать:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SVG в качестве фонового изображения, fallback с помощью Modernizr&lt;/li&gt;
  &lt;li&gt;SVG в качестве фонового изображения, fallback с помощью CSS&lt;/li&gt;
  &lt;li&gt;SVG в качестве встраиваемого изображения (тег img), onerror fallback&lt;/li&gt;
  &lt;li&gt;SVG в качестве встраиваемого изображения (тег img), , fallback с помощью Modernizr&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/?p=1087&quot; title=&quot;Что такое библиотека Modernizr&quot;&gt;Modernizr&lt;/a&gt; является прекрасным инструментом для определения возможностей браузера. Она автоматически добавляет ко всем HTML-элементам в DOM классы в зависимости от того, поддерживает браузер ту или иную возможность или нет. В нашем случае, Modernizr будет добавлять класс &lt;code&gt;svg&lt;/code&gt; или &lt;code&gt;no-svg&lt;/code&gt; для всех элементов в DOM в зависимости от того, поддерживает ли браузер SVG.&lt;/p&gt;

&lt;h3 id=&quot;svg-----fallback---modernizr&quot;&gt;SVG в качестве фонового изображения, fallback с помощью Modernizr&lt;/h3&gt;

&lt;p&gt;Используя Modernizr, мы отпеределяем, поддерживает браузер SVG или нет. Если SVG используется в качестве фонового изображения, то тогда проще сохранить изображения для страницы в двух верысиях – SVG и PNG (прим. переводчика: например, IcoMoon умеет так делать). В таблице стилей CSS тогда нужно добавить дополнительный класс. При таком подходе исключается двойная загрузка файлов (SVG и PNG), так как класса &lt;code&gt;no-svg&lt;/code&gt; просто не существует в DOM, если браузер поддерживает SVG, и наоборот.&lt;/p&gt;

&lt;pre&gt;// CSS

.tomato {
    background-image: url(&#39;img/tomato.svg&#39;);
}
.no-svg .tomato {
    background-image: url(&#39;img/tomato.png&#39;);
}
&lt;/pre&gt;

&lt;h3 id=&quot;svg-----fallback---css&quot;&gt;SVG в качестве фонового изображения, fallback с помощью CSS&lt;/h3&gt;

&lt;p&gt;Этот способ будет даже немного покруче, так как он не зависит от какой-либо библиотеки. Даже если библиотека Modernizr подключена у вас в проекте, в этом случае она уже не играет никакой роли. Но если вы подключили библиотеку Modernizr в проект только для того, чтобы реализовать откат (fallback) для фоновых изображений SVG, то вам лучше воспользоваться рассматриваемым методом.&lt;/p&gt;

&lt;p&gt;Данный метод основан на маленькой хитрости, заключающейся в том, что поддержка множественных фоновых изображений (multiple background) в браузерах почти точно такая же, что и поддержка SVG. Другими словами, если браузер не поддерживает множественные фоны (multiple background), то он не будет поддерживать и SVG. В результате по коду произойдет откат (fallback) до первой строки, в которой прописано отображение PNG-версии файла.&lt;/p&gt;

&lt;pre&gt;// CSS

.tomato {
    background: url(&#39;img/tomato.png&#39;);
    background-image: url(&#39;img/tomato.svg&#39;), none;
}
&lt;/pre&gt;

&lt;h3 id=&quot;svg------img-onerror-fallback&quot;&gt;SVG в качестве встраиваемого изображения (тег img), onerror fallback&lt;/h3&gt;

&lt;p&gt;Для этого метода необходимо редактирование HTML-кода. Основан метод на использовании Javascript-функции &lt;code&gt;onerror&lt;/code&gt;, которая встраивается внутрь HTML-тега &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;. Благодаря этой функции осуществляется откат (fallback), если браузер не смог загрузить изображение по пути, указанному в атрибуте &lt;code&gt;src&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Однако, с етим методом нужно быть осторожным. Если отката (fallback) не произойдет, то некоторые браузеры могут “зависнуть” в бесконечном цикле. Это явно не хорошо.&lt;/p&gt;

&lt;pre&gt;// HTML

&lt;img src=&quot;tomato.svg&quot; onerror=&quot;this.src=&#39;tomato.png&#39;&quot; /&gt;
&lt;/pre&gt;

&lt;p&gt;Данный метод также может быть несколько трудоемким, если необходимо подключить к странице много SVG-изображений и при этом нет прямого доступа к исходному коду файла.&lt;/p&gt;

&lt;p&gt;Однако, если у вас стоит именно такая задача, то вам можно воспользоваться четвертым способом, рассмотренным ниже.&lt;/p&gt;

&lt;p&gt;Зависания браузера в бесконечном цикле можно избежать благодаря небольшой поправке, которую подсказал Roy Reed:&lt;/p&gt;

&lt;pre&gt;// HTML

&lt;img src=&quot;tomato.svg&quot; onerror=&quot;this.src=&#39;tomato.png&#39;; this.onerror=null;&quot; /&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;svg------img--fallback---modernizr&quot;&gt;SVG в качестве встраиваемого изображения (тег img), , fallback с помощью Modernizr&lt;/h3&gt;

&lt;p&gt;Этому методу также нужна поддержка библиотеки Modernizr для определения возможностей. Как обычно, с помощью этой библиотеки определяем возможности конкретного пользовательского браузера.&lt;/p&gt;

&lt;p&gt;Если браузер поддерживает SVG, то строку с тегом &lt;code&gt;img&lt;/code&gt; отставляем “как есть”:&lt;/p&gt;

&lt;pre&gt;// HTML

&lt;img src=&quot;tomato.svg&quot; /&gt;
&lt;/pre&gt;

&lt;p&gt;Если же браузер пользователя не поддерживает SVG, то запускается мальнький скрипт, который отыскивает в DOM все img-элементы с атрибутом &lt;code&gt;src=&quot;*.svg&quot;&lt;/code&gt; и производит у файлов-изображений замену расширения с &lt;code&gt;svg&lt;/code&gt; на &lt;code&gt;png&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Чтобы метод сработал, необходимо иметь две версии (SVG и PNG) одного файла; имена файлов должны быть идентичными.&lt;/p&gt;

&lt;p&gt;Ниже показан HTML и Javascript. Чтобы пример сработал, убедитесь, что подключили библиотеку Modernizr:&lt;/p&gt;

&lt;pre&gt;// HTML

&lt;img src=&quot;tomato.svg&quot; /&gt;
&lt;/pre&gt;

&lt;pre&gt;// Javascript

if (!Modernizr.svg) {
    var imgs = document.getElementsByTagName(&#39;img&#39;);
    var svgExtension = /.*\.svg$/
    var l = imgs.length;
    for(var i = 0; i &amp;lt; l; i++) {
        if(imgs[i].src.match(svgExtension)) {
            imgs[i].src = imgs[i].src.slice(0, -3) + &#39;png&#39;;
            console.log(imgs[i].src);
        }
    }
}
&lt;/pre&gt;

&lt;h3 id=&quot;section&quot;&gt;Заключение&lt;/h3&gt;

&lt;p&gt;Я считаю нужным сказать еще раз, что если на данный момент в своих проектах вы &lt;strong&gt;не используете SVG&lt;/strong&gt;, то вам &lt;strong&gt;следует перейти на его использование&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Поддержка SVG на сегодня достаточно хорошая, а в скором времени этот формат будет использоваться повсеместно. Применение SVG в проекте имеет множество преимуществ.&lt;/p&gt;

&lt;p&gt;Для новичков - вам мне стоит беспокоиться об версии PNG-изображений специально для Retina-дисплеев. SVG-изображения не зависят от разрешения экрана, поэтому с поддержкой адаптивных дизайнов у таких изображений проблем нет.&lt;/p&gt;

&lt;p&gt;SVG-изображения могут быть встроены прямо в HTML-документ в качестве одного их его элементов; при этом отпадает необходимость в сохранении SVG-изображения в качестве отдельного файла.&lt;/p&gt;

&lt;p&gt;Если открыть любой SVG-файл в редакторе кода, то можно увидеть SVG-код, на котором написан данный файл.&lt;/p&gt;

&lt;p&gt;Возможности SVG очень велики, поэтому смело запрыгивайте на платформу SVG-поезда и не бойтесь его использовать на практике! SVG дружелюбен и приятен в обращении.&lt;/p&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-2001&quot; class=&quot;post-ratings&quot; data-nonce=&quot;7dd163d556&quot;&gt;&lt;img id=&quot;rating_2001_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(2001, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2001_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(2001, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2001_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(2001, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2001_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(2001, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_2001_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(2001, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;1&lt;/strong&gt; votes, average: &lt;strong&gt;5,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_2001_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-2001-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/svg-fallback-png/&quot;&gt;SVG fallback с помощью PNG&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 15, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Стилизация SVG с помощью CSS &#8211; Часть 1]]></title>
 <link rel="alternate" type="text/html" href="/svg-css-part-1/" />
  <id>/svg-css-part-1</id>
  <published>2014-11-13T00:00:00+03:00</published>
  <updated>2014-11-13T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;strong&gt;От переводчика&lt;/strong&gt;. Привожу вольный перевод великолепной статьи “&lt;a href=&quot;http://www.smashingmagazine.com/2014/11/03/styling-and-animating-svgs-with-css/&quot; title=&quot;Styling And Animating SVGs With CSS&quot;&gt;Styling And Animating SVGs With CSS&lt;/a&gt;” от &lt;a href=&quot;http://sarasoueidan.com/&quot; title=&quot;Sara Soueidan&quot;&gt;Sara Soueidan&lt;/a&gt;. Данная статья является одной из пяти в серии, посвященной формату SVG. Больше мне сказать нечего – читайте Сару &lt;img src=&quot;http://localhost:7788/third/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; /&gt; .&lt;/p&gt;

&lt;p&gt;CSS может использоваться для стилизации и анимации векторной графики точно также, как для стилизации и анимации HTML-элементов. В этой статье, которая является производной от &lt;a href=&quot;https://www.youtube.com/watch?v=lf7L8X6ZBu8&quot;&gt;моего недавнего выступления&lt;/a&gt; на конференциях &lt;a href=&quot;http://2014.cssconf.eu/&quot; title=&quot;CSSconf EU&quot;&gt;CSSconf EU&lt;/a&gt; и &lt;a href=&quot;http://2014.fromthefront.it/&quot; title=&quot;From the Front&quot;&gt;From the Front&lt;/a&gt;, где я рассказывала о перспективах и приемах работы с форматом векторной графики SVG и возможностях ее стилизации при помощи CSS.&lt;/p&gt;

&lt;p&gt;Я покажу, каким образом можно экспотировать и оптимизировать SVG-файлы, способы вставки этих файлов в web-документ, способы стилизации и анимации SVG-файлов, на практике применим стили и анимацию к SVG-файлам-примерам.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Введение&lt;/h3&gt;

&lt;p&gt;Масштабируемая векторная графика (SVG) представляет из себя векторные изображение для двухмерной графики (2D), в основе которой лежит формат XML. Подобная графика имеет поддержку интерактивности и анимации. Другими словами, SVG-файлы представляют из себя XML-теги, которые генерируют фигуры и изображения; к этим фигурам и изображениям могут быть применены стили и эффекты с помощью CSS точно также, как это делается с обычными HTML-элементами.&lt;/p&gt;

&lt;p&gt;Анимация или интерактивность в SVG-файлах могут быть достигнута двумя способами – с помощью CSS или с помощью Javascript. В этой статье будет рассмотрен первый способ – как это сделать с помощью CSS.&lt;/p&gt;

&lt;p&gt;Существует &lt;strong&gt;много причин&lt;/strong&gt;, почему нужно делать выбор в пользу SVG и почему нужно использовать этот формат сегодня:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;графика в формате SVG является &lt;strong&gt;масштабируемой&lt;/strong&gt; и &lt;strong&gt;не зависящей от разрешения&lt;/strong&gt;. Такая графика выглядит великолепно везде, будь то экраны с высоким разрешением Retina или же печатный вариант;&lt;/li&gt;
  &lt;li&gt;изображения имеют &lt;a href=&quot;http://caniuse.com/#feat=svg&quot; title=&quot;Can I Use - SVG support&quot;&gt;отличную поддержку браузеров&lt;/a&gt;. Создать fallbacks для браузеров, не имеющих поддержки, очень легко и в этой статье будет показано, как это сделать.&lt;/li&gt;
  &lt;li&gt;поскольку файлы в своей основе являются текстом, то они хорошо &lt;strong&gt;поддаются архивации&lt;/strong&gt;, что позволяет сделать их значительно меньше по размеру, чем файлы форматов JPEG или PNG.&lt;/li&gt;
  &lt;li&gt;файлы стилизуются и анимируются с помощью CSS или Javascript&lt;/li&gt;
  &lt;li&gt;файлы формата SVG имеют встроенную поддержку clipping, masking, background blend modes и filters. Эти возможности эквиваленты возможностям обычного графического редактора, такого как Photoshop.&lt;/li&gt;
  &lt;li&gt;к файлам можно получить &lt;strong&gt;доступ&lt;/strong&gt;. Другими словами, к ним можно получить легкий доступ через DOM API, что делает их прекрасным инструментом для инфографики и визуализации данных. Это дает ему преимущество перед HTML5 Canvas, поскольку контент последнего недоступен. С другой стороны, можно легко инспектировать каждый элемент файла с помощью инспектора элементов браузера точно также, как это делается с обычными HTML-элементами. Помимо этого, файлы доступны для экранных устройств чтения, если это необходимо. В последней части этой статье будет более подробно рассмотрен вопрос доступности файлов.&lt;/li&gt;
  &lt;li&gt;существует достаточно инструментов для создания, редактирования и оптимизации файлов. Помимо этого, существуют инструменты для облегчения и ускорения работы с SVG-файлами, что позволяет значительно ускорить рабочий процесс. Эти инструменты также будут рассмотрены позже.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;svg------&quot;&gt;Экспортирование SVG из графических редакторов и их оптимизация&lt;/h4&gt;

&lt;p&gt;Из всех редакторов векторной графики имеется &lt;strong&gt;три самых популярных&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.adobe.com/mena_en/products/illustrator.html&quot; title=&quot;Adobe Illustrator&quot;&gt;Adobe Illustrator&lt;/a&gt;  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://inkscape.org/en/&quot; title=&quot;Inkscape&quot;&gt;Inkscape&lt;/a&gt;  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bohemiancoding.com/sketch/&quot; title=&quot;Sketch&quot;&gt;Sketch&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Adobe Illustrator&lt;/strong&gt; – платное приложение от Adobe. Очень популярный редактор с прекрасным интерфейсом и множеством возможностей, что делает его любимым инструментом многих дизайнеров.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inkscape&lt;/strong&gt; является бесплатной альтернативой. Несмотря на более скромный интерфейс, этот редактор имеет все необходимые возможности для работы с векторной графикой.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sketch&lt;/strong&gt; – это приложение только под Mac OS X. Оно также не бесплатное, но уже успело стать достаточно популярным и собрать свою группу поклонников. Обладает множеством инструментов и возможностей, что делает работу в этом редакторе быстрее и удобнее.&lt;/p&gt;

&lt;p&gt;Для создания векторной графики можно выбрать любой из этих трех редакторов. После создания SVG-файлов перед их вставкой на web-страницу нужно выполнить две операции: экспортирование из редактора и очистка этих файлов от лишних данных.&lt;/p&gt;

&lt;p&gt;В этой статье я буду показывать экспортирование и оптимизацию SVG-файлов на примере редактора Adobe Illustrator. Этот процесс практически ничем не отличается от подобного в других редакторах. За исключением некоторых специфических настроек самого Illustrator, о чем будет упоминаться по ходу этой статьи.&lt;/p&gt;

&lt;p&gt;Для экспортирования графики в SVG-формат в Illustrator нужно перейти в меню по пути “File” – “Save as”, а затем выбрать формат &lt;code&gt;.svg&lt;/code&gt; из выпадающего списка форматов. Настройки в окне поменяются в соответствии с выбранным форматом &lt;code&gt;.svg&lt;/code&gt;. Например, можно будет выбрать версию SVG; встраивать изображения в виде графики или же сохранить их отдельно, с созданием внешней ссылки на них; выбрать способ стилизации (с помощью презентационных аттрибутов или же при помощи CSS-стилей в элементе &lt;code&gt;style&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Ниже показано изображение с окном экспорта SVG, в котором представлен наилучший набор настроек для сохранения файлов SVG для web:&lt;figure id=&quot;attachment_1992&quot; style=&quot;width: 477px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/ai-options-quick-preview.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/ai-options-quick-preview-477x600.png&quot; alt=&quot;Окно настроек экспорта SVG в Adobe Illustrator&quot; width=&quot;477&quot; height=&quot;600&quot; class=&quot;size-medium wp-image-1992&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Окно настроек экспорта SVG в Adobe Illustrator&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;p&gt;Почему представленный выбор настроек является наилучшим, рассказано Michaël Chaize в прекрасной статье &lt;a href=&quot;http://creativedroplets.com/export-svg-for-the-web-with-illustrator-cc/&quot; title=&quot;Export SVG for the Web With Illustrator CC&quot;&gt;Export SVG for the Web With Illustrator CC&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Вне зависимости от того, какой графический редактор был выбран, в любом случае экспортируемый этим редактором SVG-файл не будет иметь чистого и оптимизированного кода. SVG-файлы, экспортированные из графических редакторов, как правило содержат много дополнительной информации, такой как метаданные самого редактора, комментарии, пустые группы, дефолтные значения, не оптимальные значения и другие подобные значения, которые можно безопасно удалить или конвертировать без оказания какого-либо эффекта на качество SVG-изображений. В случае, когда SVG-файлы созданы не вами, почти всегда они являются не оптимизированными; поэтому нужно в обязательном порядке использовать стороннее приложение для оптимизации SVG-графики.&lt;/p&gt;

&lt;p&gt;Имеется несколько инструментов для оптимизации SVG-кода. Peter Collingridge создал online-инструмент &lt;a href=&quot;http://petercollingridge.appspot.com/svg-editor&quot; title=&quot;SVG Editor&quot;&gt;SVG Editor&lt;/a&gt;, в котором можно как вставлять напрямую, так и загружать свои собственные SVG-файлы. Инструмент обладает многими возможностями по оптимизации – удалением вспомогательного кода, комментариев, пустых групп и так далее. Одной из интересных настроек является управление числом знаков после запятой для координат точек:&lt;figure id=&quot;attachment_1991&quot; style=&quot;width: 500px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/svg-editor-quick-preview.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/svg-editor-quick-preview.png&quot; alt=&quot;Окно настроек SVG Editor&quot; width=&quot;500&quot; height=&quot;362&quot; class=&quot;size-full wp-image-1991&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Окно настроек SVG Editor&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;p&gt;SVG Editor обладает возможностью автоматически перемещать SVG-изображение в самую верхнюю часть документа. Приятной особенностью данного инструмента является возможность предварительного просмотра, что позволяет сразу решить, какие изменения оставить, а какие – нет. Некоторые настройки могут привести к нарушению кода SVG-файла. Например, одного знака после запятой обычно хватает для оптимизации SVG-изображения. Но если вы работаете с SVG-файлом, который имеет много path, то при уменьшении числа знаков после запятой с четырех до одного может привести к нарушению SVG-изображения. Поэтому возможность предпросмотра является большим плюсом данного редактора.&lt;/p&gt;

&lt;p&gt;Редактор SVG Editor является online-инструментом. Если вы предпочитаете offline инструмент, то попробуйте &lt;a href=&quot;https://github.com/svg/svgo&quot; title=&quot;SVGO&quot;&gt;SVGO&lt;/a&gt; (O – сокращение от “оптимизатор”). Этот инструмент основан на Node.js, имеет простой и понятный &lt;a href=&quot;https://github.com/svg/svgo-gui&quot; title=&quot;SVGO&quot;&gt;drag-and-drop интерфейс&lt;/a&gt;. Если вам не нравиться использовать online-инструменты, то SVGO будет хорошей альтернативой.&lt;/p&gt;

&lt;p&gt;Ниже представлено простое изображение формата “до и после”, иллюстрирующее процесс оптимизации SVG-файла в online-редакторе SVG Editor. Красным цветом выделены paths и наглядно показано, насколько эффективен процесс оптимизации в данном случае:&lt;figure id=&quot;attachment_1990&quot; style=&quot;width: 475px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/optimized-path.jpg&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/optimized-path-475x600.jpg&quot; alt=&quot;Оптимизация SVG в SVG Editor&quot; width=&quot;475&quot; height=&quot;600&quot; class=&quot;size-medium wp-image-1990&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Оптимизация SVG в SVG Editor&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;p&gt;Обратите внимание на размер исходного SVG-файла и размер его оптимизированной версии. Вне всяких сомнений, оптимизированная версия более удобочитаемая.&lt;/p&gt;

&lt;p&gt;После оптимизации SVG-файлов они готовы для встраивания их на web-страницу, для дальнейшей стилизации и анимации с помощью CSS.&lt;/p&gt;

&lt;h4 id=&quot;ps&quot;&gt;P.S.&lt;/h4&gt;

&lt;p&gt;На практике воспользовался обоими инструментами оптимизации SVG – SVG Editor и SVGO. Могу сказать по личному опыту, что SVGO обладает &lt;strong&gt;значительно лучшим коэффициентом оптимизации&lt;/strong&gt;. К слову сказать, это отечественная разработка команды Yandex.&lt;/p&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-1989&quot; class=&quot;post-ratings&quot; data-nonce=&quot;6a674f84ff&quot;&gt;&lt;img id=&quot;rating_1989_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(1989, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1989_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(1989, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1989_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(1989, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1989_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(1989, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1989_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(1989, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;1&lt;/strong&gt; votes, average: &lt;strong&gt;5,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_1989_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-1989-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/svg-css-part-1/&quot;&gt;Стилизация SVG с помощью CSS &amp;#8211; Часть 1&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 13, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Создание Asymmetric Layout в Susy]]></title>
 <link rel="alternate" type="text/html" href="/asymmetric-layout-susy/" />
  <id>/asymmetric-layout-susy</id>
  <published>2014-11-12T00:00:00+03:00</published>
  <updated>2014-11-12T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;strong&gt;От переводчика&lt;/strong&gt;. Данная статья является вольным переводом поста &lt;a href=&quot;http://www.zell-weekeat.com/asymmetric-layouts-with-susy/&quot; title=&quot;Creating Asymmetric Layouts With Susy&quot;&gt;Creating Asymmetric Layouts With Susy&lt;/a&gt; автора Zell Liew. Цель статьи – на простом примере показать, каким образом можно создавать &lt;strong&gt;ассиметричную разметку&lt;/strong&gt; (asymmetric layout) с помощью Susy 2. Обзор ни в коей мере не является каким-либо пособием – это просто очень краткий экскурс по возможностям Susy 2 в области (asymmetric layout). Далее – вольный перевод с разрешения автора.&lt;/p&gt;

&lt;p&gt;Когда я впервые услышал об &lt;strong&gt;ассиметричной разметке&lt;/strong&gt; (asymmetric layout), на тот момент такую можно было сделать только с помощью фреймворка &lt;a href=&quot;http://singularity.gs/&quot; title=&quot;Singularity GS&quot;&gt;Singularity GS&lt;/a&gt;. Подобная разметка была чем-то невероятно крутым и я очень захотел сделать подобную же – с неравной шириной столбцов &lt;code&gt;columns&lt;/code&gt;. Но на тот момент я был полностью доволен системой Susyone и мне очень не хотелось переключаться на другой инструмент.&lt;/p&gt;

&lt;p&gt;Можете представить мой восторг, когда вышла новая версия Susy 2, в которой была включена поддержка &lt;strong&gt;ассиметричной разметки&lt;/strong&gt; (asymmetric layout).&lt;/p&gt;

&lt;p&gt;В этой статье я покажу, как просто можно создавать &lt;strong&gt;ассиметричную разметку&lt;/strong&gt; (asymmetric layout) с помощью Susy 2.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Что мы будем делать&lt;/h3&gt;

&lt;p&gt;В этой статье мы будем создавать с помощью Susy простую fluid-разметку. В этой разметке есть две боковых панели и два вложенных блока-потомка внутри центрального блока с контентом.&lt;figure id=&quot;attachment_1985&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/asym-grid-1-basic-setup.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/asym-grid-1-basic-setup-600x237.png&quot; alt=&quot;Asymmetric Layout Basic Setup&quot; width=&quot;600&quot; height=&quot;237&quot; class=&quot;size-medium wp-image-1985&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Asymmetric Layout Basic Setup&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;h3 id=&quot;susy&quot;&gt;Глобальные переменные Susy&lt;/h3&gt;

&lt;p&gt;Для того, чтобы использовать возможность создания &lt;strong&gt;ассиметричной разметки&lt;/strong&gt; (asymmetric layout) в Susy, в ее глобальной переменной &lt;code&gt;$susy&lt;/code&gt;нужно внести два параметра: &lt;code&gt;columns&lt;/code&gt; и &lt;code&gt;output&lt;/code&gt;. Параметр &lt;code&gt;columns&lt;/code&gt; должен быть Sass-списком для того, чтобы можно было работать с &lt;strong&gt;ассиметричной разметкой&lt;/strong&gt; (asymmetric layouts).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sass-список&lt;/strong&gt; является &lt;strong&gt;строкой значений&lt;/strong&gt;, разделенных пробелом и выглядит он примерно таким образом:&lt;/p&gt;

&lt;pre&gt;// SCSS
$list : 1 2 3 2 1;
&lt;/pre&gt;

&lt;p&gt;Внутри данного списка &lt;code&gt;$list&lt;/code&gt; располагаются пять значений: &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;. Если поместить этот список в качестве параметра в глобальную переменную &lt;code&gt;$susy&lt;/code&gt;, то в результате получим &lt;strong&gt;ассиметричную разметку&lt;/strong&gt; (asymmetric layout), состоящую из пяти столбцов.&lt;/p&gt;

&lt;p&gt;Также же необходимо добавить еще один параметр &lt;code&gt;output: isolate&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;// SCSS
$susy : (
  columns: 1 2 3 2 1,
  output: isolate
)
&lt;/pre&gt;

&lt;p&gt;После установки этих параметров все готово для создания заметки с помощью Susy.&lt;/p&gt;

&lt;h3 id=&quot;asymmetric-layout&quot;&gt;Создание ассиметричной разметки (asymmetric layout)&lt;/h3&gt;

&lt;p&gt;Как правило, первым важным шагом является добавление миксина &lt;code&gt;container&lt;/code&gt; для блока-обертки. Помимо этого, в данном примере для блока-обертки добавим еще высоту на 100% viewport, так как внутри блока нет содержимого и иначе мы его просто не увидим:&lt;/p&gt;

&lt;pre&gt;.wrap {
  @include container(1140px);
  height: 100vh;
}
&lt;/pre&gt;
&lt;figure id=&quot;attachment_1986&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;

[&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/asym-grid-1-600x92.png&quot; alt=&quot;Asymmetric Layout&quot; width=&quot;600&quot; height=&quot;92&quot; class=&quot;size-medium wp-image-1986&quot; /&gt;][4]&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Asymmetric Layout&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Прежде чем продолжить создание разметки, необходимо разобраться с еще одним вопросом.&lt;/p&gt;

&lt;p&gt;Так как в глобальных настройках Susy используется параметр &lt;code&gt;output: isolate&lt;/code&gt;, необходимо уточнить &lt;strong&gt;месторасположение каждой отдельной части разметки&lt;/strong&gt;. Для этой цели нужно использовать параметр &lt;code&gt;$location&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Параметр &lt;code&gt;$location&lt;/code&gt; &lt;strong&gt;указывает месторасположение&lt;/strong&gt; каждого отдельного &lt;code&gt;span&lt;/code&gt; и может принимать следующие значения:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;first&lt;/li&gt;
  &lt;li&gt;last&lt;/li&gt;
  &lt;li&gt;at &lt;number&gt;&lt;/number&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Если какой-либо отдельный блок по разметке располагается первым, то для него необходимо использовать ключевое слово &lt;code&gt;first&lt;/code&gt;. Если блок располагается последним, то для него нужно использовать слово &lt;code&gt;last&lt;/code&gt;. Если же блок располагается в разметке, к примеру, начиная со 2-го столбца, то в миксине &lt;code&gt;span&lt;/code&gt; нужно использовать ключевое слово &lt;code&gt;at 2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Теперь, обладая всеми этими знаниями, можно создать разметку для трех блоков: &lt;code&gt;.sidebar-one&lt;/code&gt;, &lt;code&gt;.content&lt;/code&gt; и &lt;code&gt;.sidebar-two&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Блок &lt;code&gt;.sidebar-one&lt;/code&gt; по нашей схеме располагается первым и занимает ширину в один столбец:&lt;/p&gt;

&lt;pre&gt;// SCSS
  .sidebar-one {
    @include span(1 first);
  }
&lt;/pre&gt;

&lt;p&gt;Блок &lt;code&gt;.sidebar-two&lt;/code&gt; является последним в схеме разметки и также занимает ширину в один столбец:&lt;/p&gt;

&lt;pre&gt;// SCSS
  .sidebar-two {
    @include span(1 last);
  }
&lt;/pre&gt;

&lt;p&gt;Блок &lt;code&gt;.content&lt;/code&gt; имеет ширину в три столбца и начинается со второго столбца:&lt;/p&gt;

&lt;pre&gt;// SCSS
  .content {
    @include span(3 at 2);
  }
&lt;/pre&gt;

&lt;p&gt;Теперь все три блока должны точно расположиться в создаваемой нами &lt;strong&gt;ассиметричной разметке&lt;/strong&gt; (asymmetric layout). Два оставшися блока &lt;code&gt;.nest-one&lt;/code&gt; и &lt;code&gt;.nest-two&lt;/code&gt; временно опустим для более ясной картины:&lt;figure id=&quot;attachment_1987&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/asym-grid-2.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/asym-grid-2-600x116.png&quot; alt=&quot;Созданная Asymmetric Layout&quot; width=&quot;600&quot; height=&quot;116&quot; class=&quot;size-medium wp-image-1987&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Созданная Asymmetric Layout&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;p&gt;Создание разметки для вложенных блоков &lt;code&gt;.nest-one&lt;/code&gt; и &lt;code&gt;.nest-two&lt;/code&gt; немного сложнее, нежели для основных блоков разметки. Имеется ввиду, что при разметке блоков-потомков необходимо учитывать факт их вложенности.&lt;/p&gt;

&lt;p&gt;Оба наших блока расположены внутри блока &lt;code&gt;.content&lt;/code&gt;, а мы знаем, что данный блок имеет структуру (2 3 2), которая также является &lt;strong&gt;ассиметричной разметкой&lt;/strong&gt; (asymmetric layout).&lt;/p&gt;

&lt;p&gt;Поэтому, при создании разметки для вложенных элементов необходимо включить эти значения в качестве аргументов для миксина &lt;code&gt;span&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Блок с классом &lt;code&gt;.nest-one&lt;/code&gt; является первым блоком в разметке и занимает ширину в один (1) столбец &lt;strong&gt;ассиметричной сетки&lt;/strong&gt; (asymmetric layout). Блок с классом &lt;code&gt;.nest-two&lt;/code&gt; является последним блоком в разметке и занимает ширину в два (2) столбца.&lt;/p&gt;

&lt;p&gt;Такая разметка создается с помощью следующего кода:&lt;/p&gt;

&lt;pre&gt;.nest-one{
  @include span(1 of (2 3 2) first);
}
.nest-two{
  @include span(2 of (2 3 2) last);
}
&lt;/pre&gt;

&lt;p&gt;Как видим по исходному коду, при создании разметки нет необходимости указывать точную ширину (px,%) каждого блока. Благодаря Susy создание &lt;strong&gt;ассиметричной разметки&lt;/strong&gt; (asymmetric layout) выполняется просто, с применением той теории, о которой только что говорилось. Достаточно только указать число столбцов, которое должен занимать каждый блок.&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Более сложный пример разметки&lt;/h3&gt;

&lt;p&gt;Пример ассиметричной разметки, представленный в этой статье, достаточно простой. Более сложным случаем является создание &lt;strong&gt;адаптивной ассиметричной разметки&lt;/strong&gt; (asymmetric layout).&lt;/p&gt;

&lt;p&gt;В качестве примера могу привести &lt;a href=&quot;https://gridsetapp.com/specs/typekit-demos/chaparral.html?gridset=show&quot; title=&quot;образец ассиметричной разметки&quot;&gt;образец ассиметричной разметки&lt;/a&gt;, созданной Nathan Ford с применением приложения &lt;a href=&quot;https://gridsetapp.com/&quot; title=&quot;GridsetApp&quot;&gt;GridsetApp&lt;/a&gt;. Этот образец является хорошим примером адаптивной страницы, которая дает представление о том, что может Susy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Примечание переводчика&lt;/strong&gt;: на этом самое существенное и интересное в этой статье заканчивается. Дальше идет реклама книги автора. Собственно, данная статья для этого и писалась, конечно. Но ради даже такого простого примера ассиметричной разметки (asymmetric layout) на Susy стоило превести этот пост.&lt;/p&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-1984&quot; class=&quot;post-ratings&quot; data-nonce=&quot;1f089ca70b&quot;&gt;&lt;img id=&quot;rating_1984_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(1984, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1984_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(1984, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1984_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(1984, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1984_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(1984, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1984_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(1984, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;2&lt;/strong&gt; votes, average: &lt;strong&gt;5,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_1984_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-1984-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/asymmetric-layout-susy/&quot;&gt;Создание Asymmetric Layout в Susy&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 12, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Как управлять положением gutters в Susy]]></title>
 <link rel="alternate" type="text/html" href="/gutter-susy/" />
  <id>/gutter-susy</id>
  <published>2014-11-11T00:00:00+03:00</published>
  <updated>2014-11-11T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;При изучении Susy одним из вопросов, который всегда стоял передо мной, заключался в следующем: “Как удалить &lt;code&gt;padding&lt;/code&gt; или &lt;code&gt;margin&lt;/code&gt; у первого и последнего столбца &lt;code&gt;column&lt;/code&gt; в разметке Susy без применения CSS-свойств &lt;code&gt;first-child&lt;/code&gt; и &lt;code&gt;last-child?&lt;/code&gt;“.&lt;/p&gt;

&lt;p&gt;Этот вопрос является один из самых главных для всех, кто только начинает изучение Susy. Если посмотреть в корень данного вопроса, то его основную суть можно свести к следующему (&lt;em&gt;если судить по многочисленным постам в Интернет&lt;/em&gt;): необходимо использовать значение &lt;code&gt;inside&lt;/code&gt; вместо значения &lt;code&gt;after&lt;/code&gt;. Для того, чтобы точно ответить на этот вопрос, необходимо хорошо понимать, каким образом положение отступов &lt;code&gt;gutter&lt;/code&gt; в целом оказывает влияние на всю разметку, созданную в Susy.&lt;/p&gt;

&lt;p&gt;Как мне кажется, вопрос о расположении отступов &lt;code&gt;gutter&lt;/code&gt; в разметке Susy является &lt;strong&gt;самой важной настройкой&lt;/strong&gt;, поскольку он &lt;strong&gt;оказывает влияние на весь код в целом&lt;/strong&gt;. Если у вас перед прочтением статьи существовал такой вопрос, то данная статья именно для вас.&lt;/p&gt;

&lt;h3 id=&quot;gutter&quot;&gt;Что такое – расположение отступов gutter&lt;/h3&gt;

&lt;p&gt;Расположение отступа &lt;code&gt;gutter&lt;/code&gt; позволяет полностью менять всю разметку страницы, созданную в Susy. Данный параметр определяет, где должны находиться отступы &lt;code&gt;gutter&lt;/code&gt; относительно столбцов &lt;code&gt;columns&lt;/code&gt;. Также данная настройка определяет, будут ли отступы &lt;code&gt;gutter&lt;/code&gt; являться CSS-свойством &lt;code&gt;padding&lt;/code&gt; или &lt;code&gt;margin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Эта параметр находиться среди &lt;strong&gt;глобальных настроек&lt;/strong&gt; переменной &lt;code&gt;$susy&lt;/code&gt;. Как вариант, данный параметр можно использовать &lt;strong&gt;локально&lt;/strong&gt;, внутри миксина &lt;code&gt;span&lt;/code&gt;. Давайте начнем с рассмотрения случая, когда расположение отступа &lt;code&gt;gutter&lt;/code&gt; управляется из глобальной переменной &lt;code&gt;$susy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;По умолчанию, расположение отступов в Susy определено ключевым словом &lt;code&gt;after&lt;/code&gt;. Помимо этого, существуют еще варианты: &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;split&lt;/code&gt;, &lt;code&gt;inside&lt;/code&gt; и &lt;code&gt;inside-static&lt;/code&gt;. Ниже представлен полный вариант синтаксиса параметра &lt;code&gt;gutter-position&lt;/code&gt; в глобальной переменной &lt;code&gt;$susy&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;// SCSS

  $susy: (
    gutter-position: after ( before | after | split | inside | inside-static )
  );
  &lt;/pre&gt;

&lt;p&gt;Ключевые слова в круглых скобках являются &lt;strong&gt;возможными вариантами&lt;/strong&gt; значения параметра &lt;code&gt;gutter-position&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Для ясности понимания тонкостей разметки в Susy при использовании параметра &lt;code&gt;gutter-position&lt;/code&gt; необходимо создать простую структуру:&lt;figure id=&quot;attachment_1968&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;[&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_01-600x346.png&quot; alt=&quot;Базовая разметка в Susy&quot; width=&quot;600&quot; height=&quot;346&quot; class=&quot;size-medium wp-image-1968&quot; /&gt;][1]&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Базовая разметка в Susy&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;h3 id=&quot;gutter-position-after&quot;&gt;Gutter-position: after&lt;/h3&gt;

&lt;p&gt;Значением по умолчанию для параметра &lt;code&gt;gutter-position&lt;/code&gt; является ключевое слово &lt;code&gt;after&lt;/code&gt;. Данное значение заставляет Susy располагать отступы gutters &lt;strong&gt;после каждого столбца&lt;/strong&gt; разметки. В этом режиме необходимо &lt;strong&gt;удалить отступ у последнего столбца&lt;/strong&gt; в разметке. В этом случае отступы gutters являются CSS-свойством margin и размещаются в разметке следующим образом:&lt;figure id=&quot;attachment_1969&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;[&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_02-600x160.png&quot; alt=&quot;Gutter-position: after&quot; width=&quot;600&quot; height=&quot;160&quot; class=&quot;size-medium wp-image-1969&quot; /&gt;][2]&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Gutter-position: after&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;p&gt;При использовании значения по умолчанию для параметра &lt;code&gt;gutter-position&lt;/code&gt; миксин &lt;code&gt;span&lt;/code&gt; создает три CSS-правила – &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;margin-right&lt;/code&gt; и &lt;code&gt;float: left&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;// SCSS

  .test {
    @include span(3 of 4);
  }
  &lt;/pre&gt;

&lt;p&gt;Результирующий CSS-код:&lt;/p&gt;

&lt;pre&gt;// CSS

  

&lt;p&gt;
  .test {
      width: 73.68421%;
      float: left;
      margin-right: 5.26316%;
    }
    
  
  
  &lt;p&gt;
    В этом коде свойство &lt;code&gt;margin-right&lt;/code&gt; &amp;#8211; это отступ &lt;code&gt;gutter&lt;/code&gt;, созданный Susy в данной разметке.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    Можно использовать ключевое слово &lt;code&gt;last&lt;/code&gt; для удаления крайнего &lt;code&gt;margin&lt;/code&gt; у столбца:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // SCSS

  .last {
    @include span(1 of 4 last);
  }
  &lt;/pre&gt;
  
  
  &lt;p&gt;
    В результате получим результат в виде &lt;code&gt;margin-right: 0&lt;/code&gt;:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // CSS

  .last {
    width: 21.05263%;
    float: right;
    margin-right: 0;
  }
  &lt;/pre&gt;
  
  
  &lt;p&gt;
    В рассматриваемой нами разметке область контента занимает 3 столбца из 4. При этом область боковой панели размещается в одном столбце из 4-х. Кроме того, боковая панель является последним элементом разметки, поэтому код для подобного случая будет таким:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // SCSS

  .content {
    @include span(3 of 4);
  }
  .sidebar {
    @include span(1 of 4 last);
  }
  &lt;/pre&gt;
  
  
  &lt;p&gt;
    &lt;strong&gt;Краткое заключение&lt;/strong&gt;: значение &lt;code&gt;after&lt;/code&gt; параметра &lt;code&gt;gutter-position&lt;/code&gt; является наиболее интуитивно понятным случаем создания разметки в Susy. При использовании значения по умолчанию единственный момент, о котором следует помнить &amp;#8211; это убрать отступ у последнего столбца разметки с помощью ключевого слова &lt;code&gt;last&lt;/code&gt;.
  &lt;/p&gt;
  
  
  &lt;h3&gt;
    Gutter-position: before
  &lt;/h3&gt;
  
  
  &lt;p&gt;
    Значение &lt;code&gt;before&lt;/code&gt; является одним из вариантов предыдущего значения &amp;#8211; &lt;code&gt;after&lt;/code&gt;. Суть этого значения также простая. Вместо размещения отступов gutter после столбцов (как в случае с &lt;code&gt;after&lt;/code&gt;), при значении &lt;code&gt;before&lt;/code&gt; отступы gutters размещаются перед столбцами. В этом случае необходимо удалить отступ у первого столбца в разметке. Отступы gutter также являются в данном случае CSS-свойством &lt;code&gt;margin&lt;/code&gt;:
  &lt;/p&gt;
  &lt;figure id=&quot;attachment_1970&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;
  
  &lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_03.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_03-600x161.png&quot; alt=&quot;Gutter-position: before&quot; width=&quot;600&quot; height=&quot;161&quot; class=&quot;size-medium wp-image-1970&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Gutter-position: before&lt;/figcaption&gt;&lt;/figure&gt;
  
  
  &lt;p&gt;
    При использовании значения &lt;code&gt;before&lt;/code&gt; для параметра &lt;code&gt;gutter-position&lt;/code&gt; миксин &lt;code&gt;span&lt;/code&gt; генерирует три CSS-правила: &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;margin-left&lt;/code&gt; и &lt;code&gt;float: left&lt;/code&gt; с помощью кода:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // SCSS

  .test {
    @include span(3 of 4);
  }
  &lt;/pre&gt;
  
  
  &lt;p&gt;
    Результирующий CSS-код будет выглядеть таким образом:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // CSS

  .test {
    width: 73.68421%;
    float: left;
    margin-left: 5.26316%; /* Notice this is margin left, not right */
  }
  &lt;/pre&gt;
  
  
  &lt;p&gt;
    Так как значение &lt;code&gt;before&lt;/code&gt; является прямой противоположностью значения &lt;code&gt;after&lt;/code&gt;, то его очень легко понять, если до этого вы хорошо разобрались с &lt;code&gt;after&lt;/code&gt;. Вместо использования ключевого слова &lt;code&gt;last&lt;/code&gt; для &lt;strong&gt;удаления отступа у последнего столбца&lt;/strong&gt; разметки, в данном случае нужно использовать ключевое слово &lt;code&gt;first&lt;/code&gt; для &lt;strong&gt;удаления отступа у первого столбца&lt;/strong&gt; разметки:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // SCSS

  .content {
    @include span(3 of 4 first);
  }

  .sidebar {
    @include span(1 of 4);
  }
  &lt;/pre&gt;
  
  
  &lt;p&gt;
    В результате получим точно такую же разметку, что и в предыдущем случае.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    &lt;strong&gt;Краткое заключение&lt;/strong&gt;: при использовании значения &lt;code&gt;before&lt;/code&gt; разметка получается точно такой же, как и в предыдущем случае. Единственное отличие заключается в применении ключевого слова &lt;code&gt;first&lt;/code&gt; для первого столбца разметки.
  &lt;/p&gt;
  
  
  &lt;h3&gt;
    Gutter-position: split
  &lt;/h3&gt;
  
  
  &lt;p&gt;
    Значение &lt;code&gt;split&lt;/code&gt; параметра &lt;code&gt;gutter-position&lt;/code&gt; кардинально отличается от двух предыдущих значений  &lt;code&gt;before&lt;/code&gt; и &lt;code&gt;after&lt;/code&gt;. Если установлено значение &lt;code&gt;split&lt;/code&gt;, то ширина отступа &lt;code&gt;gutter&lt;/code&gt; делиться пополам (надвое) и обе половинки отступа располагаются по обеим сторонам одного столбца. В этом режиме отступы &lt;code&gt;gutters&lt;/code&gt; генерируются в CSS-коде в виде CSS-свойства &lt;code&gt;margin&lt;/code&gt;. В этом случае нет необходимости удалять отступы для крайних столбцов разметки:
  &lt;/p&gt;
  &lt;figure id=&quot;attachment_1971&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;
  
  &lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_04.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_04-600x274.png&quot; alt=&quot;Gutter-position: split&quot; width=&quot;600&quot; height=&quot;274&quot; class=&quot;size-medium wp-image-1971&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Gutter-position: split&lt;/figcaption&gt;&lt;/figure&gt;
  
  
  &lt;p&gt;
    Если, как в нашем случае, имеются только два блока (с классом &lt;code&gt;.content&lt;/code&gt;  и &lt;code&gt;.sidebar&lt;/code&gt;), то создание такой разметки выполняется просто. Для этого достаточно воспользоваться функцией &lt;code&gt;span&lt;/code&gt;, как обычно:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // SCSS

  .content {
    @include span(3 of 4);
  }

  .sidebar {
    @include span(1 of 4);
  }
  &lt;/pre&gt;
  &lt;figure id=&quot;attachment_1972&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;
  
  &lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_05.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_05-600x335.png&quot; alt=&quot;Разметка с двумя блоками&quot; width=&quot;600&quot; height=&quot;335&quot; class=&quot;size-medium wp-image-1972&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Разметка с двумя блоками&lt;/figcaption&gt;&lt;/figure&gt;
  
  
  &lt;p&gt;
    Однако, ситуация становиться не такой ясной, если блок &lt;code&gt;.content&lt;/code&gt; или блок &lt;code&gt;.sidebar&lt;/code&gt; будут содержать внутри себя блоки-потомки.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    Давайте добавим два блока &lt;code&gt;div&lt;/code&gt; с классом &lt;code&gt;.child-one&lt;/code&gt; и классом &lt;code&gt;.child-two&lt;/code&gt; внутрь блока &lt;code&gt;.content&lt;/code&gt; для того, чтобы проиллюстрировать эту ситуацию:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // HTML

  

&lt;div class=&quot;content&quot;&gt;
  &lt;h2&gt;
    Content
  &lt;/h2&gt;
      
  
  &lt;div class=&quot;child-one&quot;&gt;
    &lt;h2&gt;
      Child One
    &lt;/h2&gt;
  &lt;/div&gt;
      
  
  &lt;div class=&quot;child-two&quot;&gt;
    &lt;h2&gt;
      Child Two
    &lt;/h2&gt;
  &lt;/div&gt;
    
&lt;/div&gt;
  &lt;/pre&gt;
  
  
  &lt;p&gt;
    Для обоих вновь созданных блока применим тот же подход, что и ранее. Блок с классом &lt;code&gt;.child-one&lt;/code&gt; будет иметь ширину 2-х столбцов из 3-х; блок с классом &lt;code&gt;.child-two&lt;/code&gt; будет иметь ширину 1-го столбца из 3-х.
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // SCSS

  .content {
    @include span(3 of 4);
  }

  .child-one {
    @include span(2 of 3);
  }

  .child-two {
    @include span(1 of 3);
  }
  &lt;/pre&gt;
  &lt;figure id=&quot;attachment_1973&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;
  
  &lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_06.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_06-600x334.png&quot; alt=&quot;Разметка с двумя дополнительными блоками&quot; width=&quot;600&quot; height=&quot;334&quot; class=&quot;size-medium wp-image-1973&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Разметка с двумя дополнительными блоками&lt;/figcaption&gt;&lt;/figure&gt;
  
  
  &lt;p&gt;
    Обратите внимание на тот факт, что границы обоих блоков &lt;code&gt;.child-one&lt;/code&gt; и &lt;code&gt;.child-two&lt;/code&gt; &lt;strong&gt;не совпадают с границами фоновой сетки&lt;/strong&gt;!
  &lt;/p&gt;
  
  
  &lt;p&gt;
    Это происходит потому, что при задании для параметра &lt;code&gt;gutter-position&lt;/code&gt; значения &lt;code&gt;split&lt;/code&gt; нужно &lt;strong&gt;учитывать взаимосвязь&lt;/strong&gt; между блоками-родителями и блоками-потомками. В данном конкретном случае блоком-родителем является &lt;code&gt;.content&lt;/code&gt;, а блоками-потомками являются &lt;code&gt;.child-one&lt;/code&gt; и &lt;code&gt;.child-two&lt;/code&gt;.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    Для создания правильной разметки в данном случае необходимо добавить для блока-родителя ключевое слово &lt;code&gt;nest&lt;/code&gt; для того, чтобы показать, что этот блок как раз и является блоком-родителем:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // SCSS

  .content {
    @include span(3 of 4 nest); // Добавлен ключ nest
  }

  .child-one {
    @include span(2 of 3);
  }

  .child-two {
    @include span(1 of 3);
  }
  &lt;/pre&gt;
  &lt;figure id=&quot;attachment_1974&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;
  
  &lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_07.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_07-600x438.png&quot; alt=&quot;Применение ключевого слова nest&quot; width=&quot;600&quot; height=&quot;438&quot; class=&quot;size-medium wp-image-1974&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Применение ключевого слова nest&lt;/figcaption&gt;&lt;/figure&gt;
  
  
  &lt;p&gt;
    Теперь посмотрите, как точно оба блока .child-one&lt;code&gt;и&lt;/code&gt;.child-two` вписались в границы сетки, &amp;#8220;нарисованной&amp;#8221; фоновым изображением!
  &lt;/p&gt;
  
  
  &lt;p&gt;
    На первый взгляд, ситуация является немного запутанной. Для того, чтобы не путаться, нужно всегда помнить, что в случае необходимости вписать блоки-потомки точно в границы сетки, нужно использовать ключевое слово для их блока-родителя.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    Если &amp;#8220;копнуть&amp;#8221; поглубже и проанализировать сгенерированный CSS-код, то можно заметить, что для блоков &lt;code&gt;.child-one&lt;/code&gt; и &lt;code&gt;.child-two&lt;/code&gt; он совершенно различный:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
  // CSS

  .content {
    width: 75%;
    float: left;
  }

  .child-one {
    width: 60%;
    float: left;
    margin-left: 3.33333%;
    margin-right: 3.33333%;
  }

  .child-two {
    width: 26.66667%;
    float: left;
    margin-left: 3.33333%;
    margin-right: 3.33333%;
  }
  &lt;/pre&gt;
  
  
  &lt;p&gt;
    Блок-родитель имеет плавание влево &lt;code&gt;float: left&lt;/code&gt; и ширину, которая указана в процентах; при этом ширина отступов &lt;code&gt;gutters&lt;/code&gt; этого блока не учитывается (75% равно 3/4).
  &lt;/p&gt;
  
  
  &lt;p&gt;
    Блоки-потомки имеют все те же свойства, что и блок-родитель. Но при этом отступы gutters имеют место быть для этих блоков.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    &lt;strong&gt;Краткое заключение&lt;/strong&gt;: значение &lt;code&gt;split&lt;/code&gt; кардинально отличается от двух рассмотренных ранее значений &lt;code&gt;before&lt;/code&gt; и &lt;code&gt;after&lt;/code&gt;. При использовании значения &lt;code&gt;split&lt;/code&gt; необходимо добавлять ключевое слово &lt;code&gt;nest&lt;/code&gt; к блоку-родителю и использовать миксин &lt;code&gt;span&lt;/code&gt; для всех блоков-потомков.
  &lt;/p&gt;
  
  
  &lt;h3&gt;
    Gutter-position: inside/inside-static
  &lt;/h3&gt;
  
  
  &lt;p&gt;
    Оба значения &lt;code&gt;inside&lt;/code&gt; и &lt;code&gt;inside-static&lt;/code&gt; очень похожи на предыдущее значение &lt;code&gt;split&lt;/code&gt;. Отступы gutters также делятся пополам (надвое) и обе половинки располагаются по обеим сторонам каждого столбца. Однако, в этом случае в CSS-выводе отступы являются свойством &lt;code&gt;padding&lt;/code&gt;, а не &lt;code&gt;margin&lt;/code&gt;. Также в этом случае &lt;strong&gt;нет необходимости удалять отступы&lt;/strong&gt; у крайних столбцов в разметке:
  &lt;/p&gt;
  &lt;figure id=&quot;attachment_1975&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;
  
  &lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_08.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_08-600x270.png&quot; alt=&quot;Gutter-position: inside&quot; width=&quot;600&quot; height=&quot;270&quot; class=&quot;size-medium wp-image-1975&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Gutter-position: inside&lt;/figcaption&gt;&lt;/figure&gt;
  
  
  &lt;p&gt;
    Отступы gutters в случае &lt;code&gt;gutter-position: inside&lt;/code&gt; имеют тот же принцип, что и при значении &lt;code&gt;split&lt;/code&gt;. Если для блока-родителя не будет указано ключевое слово &lt;code&gt;nest&lt;/code&gt;, то блоки-потомки выйдут за границы разметки.
  &lt;/p&gt;
  
  
  &lt;pre&gt;
    // SCSS

    .content {
      @include span(3 of 4);
    }

    .child-one {
      @include span(2 of 3);
    }

    .child-two {
      @include span(1 of 3);
    }
  &lt;/pre&gt;
  &lt;figure id=&quot;attachment_1976&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;
  
  &lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_09.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_09-600x156.png&quot; alt=&quot;Блоки-потомки выходят за границы разметки&quot; width=&quot;600&quot; height=&quot;156&quot; class=&quot;size-medium wp-image-1976&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Блоки-потомки выходят за границы разметки&lt;/figcaption&gt;&lt;/figure&gt;
  
  
  &lt;p&gt;
    Если просто добавить ключевое слово &lt;code&gt;nest&lt;/code&gt; для блока-родителя &lt;code&gt;.content&lt;/code&gt;, то в результате получим следующее:
  &lt;/p&gt;
  
  
  &lt;pre&gt;
    // SCSS

    .content {
      @include span(3 of 4 nest); // The nest key is needed
    }

    .child-one {
      @include span(2 of 3);
    }

    .child-two {
      @include span(1 of 3);
    }
  &lt;/pre&gt;
  &lt;figure id=&quot;attachment_1977&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;
  
  &lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_10.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/gutters_10-600x154.png&quot; alt=&quot;Блоки-потомки в границах разметки&quot; width=&quot;600&quot; height=&quot;154&quot; class=&quot;size-medium wp-image-1977&quot; /&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;Блоки-потомки в границах разметки&lt;/figcaption&gt;&lt;/figure&gt;
  
  
  &lt;p&gt;
    Значение &lt;code&gt;inside-static&lt;/code&gt; работает точно также, как и значение &lt;code&gt;inside&lt;/code&gt;. Единственное исключение заключается в том, что отступы gutters получаются в фиксированных единицах измерения, а не в процентах. Кроме этого, в глобальной переменной &lt;code&gt;$susy&lt;/code&gt; необходимо задать параметр &lt;code&gt;column-width&lt;/code&gt; с указанием ширины столбца &lt;code&gt;column&lt;/code&gt;.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    &lt;strong&gt;Краткое заключение&lt;/strong&gt;: значение &lt;code&gt;inside&lt;/code&gt; работает точно также, как и значение &lt;code&gt;split&lt;/code&gt;. При использовании значения &lt;code&gt;inside&lt;/code&gt; необходимо добавлять ключевое слово &lt;code&gt;nest&lt;/code&gt; к блоку-родителю и использовать миксин &lt;code&gt;span&lt;/code&gt; для всех блоков-потомков.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    Значение &lt;code&gt;inside&lt;/code&gt; и &lt;code&gt;split&lt;/code&gt; имеют одинаковый сгенерированный CSS-код, поэтому можно с легкостью менять между собой эти значения в глобальной переменной &lt;code&gt;$susy&lt;/code&gt; для параметра &lt;code&gt;gutter-position&lt;/code&gt;.
  &lt;/p&gt;
  
  
  &lt;h2&gt;
    Заключение
  &lt;/h2&gt;
  
  
  &lt;p&gt;
    Различные типы разметки в Susy создаются с помощью выбора расположения отступов &lt;code&gt;gutters&lt;/code&gt;. Различное местоположение отступов &lt;code&gt;gutters&lt;/code&gt; в каждом случае имеет свои тонкости и требует понимания процесса, если вы хотите эффективно их использовать.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    Существует два основных способа создания разметки при содействии отступов &lt;code&gt;gutters&lt;/code&gt;:
  &lt;/p&gt;
  
  
  &lt;ul&gt;
    &lt;li&gt;
      значения &lt;code&gt;before&lt;/code&gt; и &lt;code&gt;after&lt;/code&gt; имеют создают отступы &lt;code&gt;gutters&lt;/code&gt; &lt;strong&gt;с одной стороны каждого столбца&lt;/strong&gt; &lt;code&gt;column&lt;/code&gt;; для крайнего столбца необходимо удалить отступ &lt;code&gt;gutter&lt;/code&gt; с помощью ключевого слова &lt;code&gt;first&lt;/code&gt; или &lt;code&gt;last&lt;/code&gt;.
    &lt;/li&gt;
    
    
    &lt;li&gt;
      значения &lt;code&gt;inside&lt;/code&gt;, &lt;code&gt;inside-static&lt;/code&gt;, &lt;code&gt;split&lt;/code&gt; разделяют каждый отступ &lt;code&gt;gutter&lt;/code&gt; на две равные половины, которые располагаются по обе сторны каждого столбца &lt;code&gt;column&lt;/code&gt;. Такие отступы не нуждаются в удалении.
    &lt;/li&gt;
    
  &lt;/ul&gt;
  
  
  &lt;p&gt;
    Эта статья является небольшой выдержкой из книги &lt;a href=&quot;http://zell-weekeat.com/learnsusy&quot; title=&quot;Learning Susy&quot;&gt;Learning Susy&lt;/a&gt;, а точнее &amp;#8211; из главы 8, посвященной позиционированию отступов &lt;code&gt;gutter&lt;/code&gt; в разметке Susy. В книге вопрос позиционирования рассмотрен подробнее на основе более сложного примера. Если материал, поданный в статье, вм понравился, то книга понравиться еще больше.
  &lt;/p&gt;
  
  
  &lt;p&gt;
    &lt;strong&gt;Примечание переводчика&lt;/strong&gt;: данный пост является переводом статьи &lt;a href=&quot;http://www.zell-weekeat.com/susy-gutter-positions/&quot; title=&quot;Understanding Gutter Positions in Susy&quot;&gt;Understanding Gutter Positions in Susy&lt;/a&gt;, созданным мною с любезного разрешения ее автора Zell Liew.
  &lt;/p&gt;

 [1]: http://localhost:7788/third/wp-content/uploads/2014/11/gutters_01.png
 [2]: http://localhost:7788/third/wp-content/uploads/2014/11/gutters_02.png
&lt;/p&gt;&lt;/pre&gt;

    &lt;p&gt;&lt;a href=&quot;/gutter-susy/&quot;&gt;Как управлять положением gutters в Susy&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 11, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Размер pattern&#8217;а в Photoshop CC 2014]]></title>
 <link rel="alternate" type="text/html" href="/pattern-photoshop-cc-2014/" />
  <id>/pattern-photoshop-cc-2014</id>
  <published>2014-11-09T00:00:00+03:00</published>
  <updated>2014-11-09T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Коротенькая заметка о небольшом баге в Photoshop CC 2014, связанном с &lt;strong&gt;невозможностью узнать размер pattern’а&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;В предыдущих версиях Photoshop все было проще – выбираешь в палитре слоев примененный образец и в окне “Pattern Overlay’ достаточно навести курсор мыши на пример pattern’а. Появляется всплывающая подсказка, в которой видны размеры образца.&lt;/p&gt;

&lt;p&gt;В Photoshop CC 2014 теперь таким образом &lt;strong&gt;невозможно получить подсказку о размере образцов изображения&lt;/strong&gt;. Это баг или фича Photoshop CC 2014 – непонятно. Но жить стало труднее без такой возможности …&lt;/p&gt;

&lt;p&gt;Однако, выход все же есть, хоть и через всем известное место. Решение таково.&lt;/p&gt;

&lt;h3 id=&quot;pattern-stamp&quot;&gt;Шаг первый – Pattern Stamp&lt;/h3&gt;

&lt;p&gt;В палитре инструментов выбираем инструмент &lt;strong&gt;Pattern Stamp&lt;/strong&gt;:&lt;figure id=&quot;attachment_1960&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/pattern_stamp.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/pattern_stamp-600x366.png&quot; alt=&quot;Инструмент Pattern Stamp&quot; width=&quot;600&quot; height=&quot;366&quot; class=&quot;size-medium wp-image-1960&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Инструмент Pattern Stamp&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Шаг второй – верхняя панель инструментов&lt;/h3&gt;

&lt;p&gt;Переводим взгляд вверх, на верхнюю панель инструментов (&lt;em&gt;или как она там называется – неважно&lt;/em&gt;). На ней находим иконку окна &lt;strong&gt;Pattern Overlay&lt;/strong&gt;:&lt;figure id=&quot;attachment_1961&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/pattern_overlay.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/pattern_overlay-600x289.png&quot; alt=&quot;Окно Pattern Overlay&quot; width=&quot;600&quot; height=&quot;289&quot; class=&quot;size-medium wp-image-1961&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Окно Pattern Overlay&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;h3 id=&quot;pattern-overlay&quot;&gt;Шаг третий – окно Pattern Overlay&lt;/h3&gt;

&lt;p&gt;Щелкаем мышкой по этой иконке. Появится окно &lt;strong&gt;Pattern Overlay&lt;/strong&gt; со списком образцов изображений. Наводим курсор мыши на нужный образец и в появившемся tooltip видим размеры (&lt;em&gt;момент появления tooltip я не заснял – но оно работает&lt;/em&gt;):&lt;figure id=&quot;attachment_1962&quot; style=&quot;width: 514px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/pattern_overlay_window.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/pattern_overlay_window.png&quot; alt=&quot;Размер pattern&amp;#039;а в Photoshop&quot; width=&quot;514&quot; height=&quot;331&quot; class=&quot;size-full wp-image-1962&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Размер pattern’а в Photoshop&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Заключение&lt;/h3&gt;

&lt;p&gt;Вот такую небольшую головоломку подкинули нам разработчики Photoshop. Но хоть и через заднее место, но выход все же есть.&lt;/p&gt;

&lt;p&gt;Оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-1959&quot; class=&quot;post-ratings&quot; data-nonce=&quot;1d137642a0&quot;&gt;&lt;img id=&quot;rating_1959_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(1959, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1959_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(1959, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1959_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(1959, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1959_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(1959, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1959_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(1959, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;1&lt;/strong&gt; votes, average: &lt;strong&gt;5,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_1959_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-1959-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/pattern-photoshop-cc-2014/&quot;&gt;Размер pattern&amp;#8217;а в Photoshop CC 2014&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 09, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[ExFAT &#8211; файловая система для Mac OS X и Linux]]></title>
 <link rel="alternate" type="text/html" href="/exfat-mac-os-linux/" />
  <id>/exfat-mac-os-linux</id>
  <published>2014-11-08T00:00:00+03:00</published>
  <updated>2014-11-08T00:00:00+03:00</updated>
  <author>
    <name>Valery Semenencko</name>
    <uri></uri>
    <email>gearmobile@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Тема достаточно освещенная, но для меня, как новичка в мире Mac OS X – очередное маленькое открытие.&lt;/p&gt;

&lt;p&gt;Вопрос связан с одной небольшой проблемой – &lt;strong&gt;выбором файловой системы для флешек&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Для пары &lt;strong&gt;Windows + Linux&lt;/strong&gt; обычным решением является файловая система &lt;strong&gt;NTFS&lt;/strong&gt;. Обе операционные системы с ней прекрасно работают – &lt;strong&gt;чтение+запись&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Для пары &lt;strong&gt;Mac OS X + Linux&lt;/strong&gt; такой выбор не подойдет, так как NTFS в Mac OS X имеет поддержку &lt;strong&gt;только чтения&lt;/strong&gt;. Для записи нужно ставить сторонний софт, типа Paragon. Это не является решением – нужна &lt;strong&gt;нативная поддержка&lt;/strong&gt; в обеих системах.&lt;/p&gt;

&lt;p&gt;Решением является файловая система &lt;strong&gt;ExFAT&lt;/strong&gt;. В Mac OS X у нее есть поддержка “из коробки”. В Linux поддержки “из коробки” нет – но проблема решается установкой дополнительных пакетов (&lt;em&gt;как почти всегда&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Более того, в Сети &lt;a href=&quot;http://en.wikipedia.org/wiki/ExFAT&quot;&gt;пишут о системе ExFAT&lt;/a&gt; как изначально созданной для флеш-накопителей. Что она умеет &lt;strong&gt;бережно относится к флешкам&lt;/strong&gt; и &lt;strong&gt;поддерживает размер более 4Gb&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Все отлично – ставлю ее на обе свои флешки: Apacer 8Gb и Transcend 16Gb. Начну с более сложного – с системы Linux.&lt;/p&gt;

&lt;h3 id=&quot;exfat-8211---linux&quot;&gt;ExFAT – установка в Linux&lt;/h3&gt;

&lt;p&gt;Для включения поддержки файловой системы в Linux нужно установить пару пакетов – &lt;code&gt;exfat-fuse&lt;/code&gt; и &lt;code&gt;exfat-utils&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;sudo apt-get install exfat-fuse exfat-utils
&lt;/pre&gt;

&lt;p&gt;Скажу, что приведенная выше команда на моей системе Linux Mint 17 Cinnamon &lt;strong&gt;оказалась действенной&lt;/strong&gt; – все пакеты установились без проблем и поддержка ExFAT в системе появилась сразу же.&lt;/p&gt;

&lt;p&gt;В Интернете почти на всех ресурсах приведена другая команда для установки пакетов &lt;code&gt;exfat-fuse&lt;/code&gt; и &lt;code&gt;exfat-utils&lt;/code&gt; (&lt;em&gt;причем – один в один, перепечатывают друг у друга вслепую&lt;/em&gt; &lt;img src=&quot;http://localhost:7788/third/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; /&gt; ):&lt;/p&gt;

&lt;pre&gt;sudo add-apt-repository ppa:relan/exfat
sudo apt-get update
sudo apt-get install fuse fuse-exfat exfat-utils
&lt;/pre&gt;

&lt;p&gt;Однако, эта команда на моей системе не запустилась – выдала &lt;strong&gt;ошибку ключа при подключении репозитория&lt;/strong&gt; &lt;code&gt;ppa:relan/exfat&lt;/code&gt;. Именно этот факт и послужил для меня поводом написать этот краткий обзор.&lt;/p&gt;

&lt;p&gt;Все – дело сделано. Теперь отформатирую флешку под файловую систему ExFAT в Linux.&lt;/p&gt;

&lt;p&gt;Для этого сначала нахожу, где она расположена в файловой системе (в моем случае это устройство &lt;code&gt;/dev/sdb1&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;sudo fdisk -l
&lt;/pre&gt;

&lt;p&gt;… и затем произвожу форматирование флешки командой:&lt;/p&gt;

&lt;pre&gt;sudo mkfs.exfat -n large_flash /dev/sdb1
&lt;/pre&gt;

&lt;p&gt;где ключ &lt;code&gt;-n&lt;/code&gt; – это задание для флешки &lt;strong&gt;имени как устройства&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Форматирование происходит буквально за пару секунд, ждать не придется. Первая флешка готова и операция форматирования выполнена под Linux.&lt;/p&gt;

&lt;h3 id=&quot;exfat-8211---mac-os-x&quot;&gt;ExFAT – форматирование под Mac OS X&lt;/h3&gt;

&lt;p&gt;Как уже говорилось мною выше, система Mac OS X имеет &lt;strong&gt;нативную поддержку&lt;/strong&gt; файловой системы ExFAT. То есть, ничего дополнительно ставить не придется – все готово “из коробки”.&lt;/p&gt;

&lt;p&gt;Операции по форматированию накопителей и другим действиям с жесткими дисками производится в стандартной утилите “Disk Utility”.&lt;/p&gt;

&lt;p&gt;Вставляю вторую флешку и запускаю “Disk Utility”:&lt;figure id=&quot;attachment_1952&quot; style=&quot;width: 600px;&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/small_flash_exfat.png&quot;&gt;&lt;img src=&quot;http://localhost:7788/third/wp-content/uploads/2014/11/small_flash_exfat-600x379.png&quot; alt=&quot;Создание ExFAT в дисковой утилите Disk Utility&quot; width=&quot;600&quot; height=&quot;379&quot; class=&quot;size-medium wp-image-1952&quot; /&gt;&lt;/a&gt;&amp;lt;figcaption class=&quot;wp-caption-text&quot;&amp;gt;Создание ExFAT в дисковой утилите Disk Utility&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; &lt;/p&gt;

&lt;p&gt;Разобраться с работой этой утилиты нетрудно, но вкратце опишу.&lt;/p&gt;

&lt;p&gt;Слева находиться окно со всеми подключенными дисками, которые утилита сумела обнаружить.&lt;/p&gt;

&lt;p&gt;Справа на вкладке “Erase” производиться настройка и выполнение форматирования (в терминологии Mac OS X форматирование называется Erase). В списке “Format” выбирается нужная файловая система (&lt;em&gt;кстати, выбор небогатый&lt;/em&gt;). В списке “Name” выбирается диск, который будет форматироваться. Там же находиться одноименная кнопка “Erase” для запуска форматирования.&lt;/p&gt;

&lt;p&gt;Ниже располагается информативное (&lt;em&gt;я был приятно впечатлен объемом и качеством подачи информации в нем&lt;/em&gt;) окно, в котором можно увидеть всю информацию по подключенному диску. Внимательный читатель заметит, что флешка у меня уже отформатирована в ExFAT – обзор делал “по горячим следам” :-).&lt;/p&gt;

&lt;p&gt;В принципе – и все. Осталось нажать кнопку “Erase” и моя флешка отформатируется под систему ExFAT.&lt;/p&gt;

&lt;p&gt;Если ее открыть в Finder, то теперь мне будут доступны как &lt;strong&gt;чтение&lt;/strong&gt; с нее, так и &lt;strong&gt;запись&lt;/strong&gt; на нее.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Заключение&lt;/h3&gt;

&lt;p&gt;Вот так “неожиданно” я решил проблему совместимости флешки под Mac OS X и Linux. Более того, данная система ExFAT &lt;strong&gt;является разработкой Microsoft&lt;/strong&gt;, поэтому с ее поддержкой в Windows &lt;strong&gt;вообще нет проблем&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;А если учитывать обещанный создателями ExFAT &lt;strong&gt;бережный способ обращения&lt;/strong&gt; с флеш-накопителями, то этому решению вообще цены нет.&lt;/p&gt;

&lt;p&gt;На этом все – оцените статью:&lt;br /&gt;
&lt;span id=&quot;post-ratings-1951&quot; class=&quot;post-ratings&quot; data-nonce=&quot;5ba4c6762a&quot;&gt;&lt;img id=&quot;rating_1951_1&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;1 Star&quot; title=&quot;1 Star&quot; onmouseover=&quot;current_rating(1951, 1, &#39;1 Star&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1951_2&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;2 Stars&quot; title=&quot;2 Stars&quot; onmouseover=&quot;current_rating(1951, 2, &#39;2 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1951_3&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;3 Stars&quot; title=&quot;3 Stars&quot; onmouseover=&quot;current_rating(1951, 3, &#39;3 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1951_4&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;4 Stars&quot; title=&quot;4 Stars&quot; onmouseover=&quot;current_rating(1951, 4, &#39;4 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt;&lt;img id=&quot;rating_1951_5&quot; src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif&quot; alt=&quot;5 Stars&quot; title=&quot;5 Stars&quot; onmouseover=&quot;current_rating(1951, 5, &#39;5 Stars&#39;);&quot; onmouseout=&quot;ratings_off(5, 0, 0);&quot; onclick=&quot;rate_post();&quot; onkeypress=&quot;rate_post();&quot; style=&quot;cursor: pointer; border: 0px;&quot; /&gt; (&lt;strong&gt;2&lt;/strong&gt; votes, average: &lt;strong&gt;5,00&lt;/strong&gt; out of 5)&lt;br /&gt;&lt;span class=&quot;post-ratings-text&quot; id=&quot;ratings_1951_text&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;post-ratings-1951-loading&quot; class=&quot;post-ratings-loading&quot;&gt; &lt;img src=&quot;http://localhost:7788/third/wp-content/plugins/wp-postratings/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; alt=&quot;Loading...&quot; title=&quot;Loading...&quot; class=&quot;post-ratings-image&quot; /&gt;Loading…&lt;/span&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/exfat-mac-os-linux/&quot;&gt;ExFAT &amp;#8211; файловая система для Mac OS X и Linux&lt;/a&gt; was originally published by Valery Semenencko at &lt;a href=&quot;&quot;&gt;Zencoder&lt;/a&gt; on November 08, 2014.&lt;/p&gt;
  </content>
</entry>

</feed>
